{
	"member": [
		{
			"kind": "member",
			"type": "number",
			"name": "a",
			"memberof": "dragonBones.Matrix",
			"scope": "instance",
			"description": "缩放或旋转图像时影响像素沿 x 轴定位的值。",
			"pType": "public"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "b",
			"memberof": "dragonBones.Matrix",
			"scope": "instance",
			"description": "旋转或倾斜图像时影响像素沿 y 轴定位的值。",
			"pType": "public"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "c",
			"memberof": "dragonBones.Matrix",
			"scope": "instance",
			"description": "旋转或倾斜图像时影响像素沿 x 轴定位的值。",
			"pType": "public"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "d",
			"memberof": "dragonBones.Matrix",
			"scope": "instance",
			"description": "缩放或旋转图像时影响像素沿 y 轴定位的值。",
			"pType": "public"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "tx",
			"memberof": "dragonBones.Matrix",
			"scope": "instance",
			"description": "沿 x 轴平移每个点的距离。",
			"pType": "public"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "ty",
			"memberof": "dragonBones.Matrix",
			"scope": "instance",
			"description": "沿 y 轴平移每个点的距离。",
			"pType": "public"
		}
	],
	"function": [
		{
			"kind": "function",
			"name": "Matrix",
			"memberof": "dragonBones.Matrix",
			"scope": "instance",
			"description": "构造函数，实例化一个Matrix，默认为是一个单位矩阵",
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "concat",
			"memberof": "dragonBones.Matrix",
			"scope": "instance",
			"description": "将某个矩阵与当前矩阵相乘，从而将这两个矩阵的几何效果有效地结合在一起。右乘，其几何意义是将两次几何变换变成一次",
			"params": [
				{
					"name": "m",
					"type": "dragonBones.Matrix",
					"description": "m"
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "copyFrom",
			"memberof": "dragonBones.Matrix",
			"scope": "instance",
			"params": [
				{
					"name": "m",
					"type": "dragonBones.Matrix",
					"description": ""
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "invert",
			"memberof": "dragonBones.Matrix",
			"scope": "instance",
			"description": "执行原始矩阵的逆转换。逆矩阵和单位矩阵相乘会得到的单位矩阵",
			"pType": "public"
		}
	],
	"globalMember": [],
	"globalFunction": [],
	"class": {
		"kind": "class",
		"name": "Matrix",
		"memberof": "dragonBones",
		"filename": "extension/dragonbones/core/geom/Matrix.ts",
		"description": "Matrix 类表示一个转换矩阵，它确定如何将点从一个坐标空间映射到另一个坐标空间。您可以对一个显示对象执行不同的图形转换，方法是设置 Matrix 对象的属性，将该 Matrix 对象应用于 Transform 对象的 matrix 属性，然后应用该 Transform 对象作为显示对象的 transform 属性。这些转换函数包括平移（x 和 y 重新定位）、旋转、缩放和倾斜。这些转换类型统称为仿射转换。仿射转换在转换时保持线条笔直，因此平行线保持平行。转换矩阵对象为具有如下内容的 3 x 3 的矩阵： a  c  tx b  d  ty u  v  w在传统的转换矩阵中，u、v 和 w 属性具有其他功能。Matrix 类只能在二维空间中操作，因此始终假定属性值 u 和 v 为 0.0，属性值 w 为 1.0。矩阵的有效值如下： a  c  tx b  d  ty 0  0  1您可以获取和设置 Matrix 对象的全部六个其他属性的值：a、b、c、d、tx 和 ty。Matrix 类支持四种主要类型的转换：平移、缩放、旋转和倾斜。您可以使用特定的方法来设置这些转换的其中三个，如下表中所述：转换\t              矩阵值                      说明平移（置换）\t                            将图像 tx 像素向右移动，将 ty 像素向下移动。                  1  0  tx                  0  1  ty                  0  0  1缩放                                     将每个像素的位置乘以 x 轴的 sx 和 y 轴的 sy，从而调整图像的大小。                  Sx  0  0                  0  Sy  0                  0  0   1旋转                                     将图像旋转一个以弧度为单位的角度 q。                  cos(q)  -sin(q)  0                  sin(q)  cos(q)   0                  0         0      1倾斜或剪切                               以平行于 x 轴或 y 轴的方向逐渐滑动图像。Matrix 对象的 b 属性表示斜角沿 y 轴的正切；Matrix 对象的 c 属性表示斜角沿 x 轴的正切。                 0        tan(skewX) 0                 tan(skewY)  0       0                  0          0       1每个转换函数都将更改当前矩阵的属性，所以您可以有效地合并多个转换。为此，请先调用多个转换函数，再将矩阵应用于其显示对象目标（通过使用该显示对象的 transform 属性）。"
	}
}
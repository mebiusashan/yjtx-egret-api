{
	"member": [
		{
			"kind": "member",
			"type": "boolean",
			"name": "additiveBlending",
			"memberof": "dragonBones.AnimationState",
			"scope": "instance",
			"pType": "public"
		},
		{
			"kind": "member",
			"type": "boolean",
			"name": "autoFadeOut",
			"memberof": "dragonBones.AnimationState",
			"scope": "instance",
			"description": "标记动画播放完毕时是否自动淡出。默认值：true。",
			"pType": "public"
		},
		{
			"kind": "member",
			"type": "boolean",
			"name": "autoTween",
			"memberof": "dragonBones.AnimationState",
			"scope": "instance",
			"description": "是否自动补间。",
			"pType": "public"
		},
		{
			"kind": "member",
			"type": "dragonBones.AnimationData",
			"name": "clip",
			"memberof": "dragonBones.AnimationState",
			"scope": "instance",
			"rwType": 1,
			"description": "动画包含的动画数据",
			"pType": "public"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "currentPlayTimes",
			"memberof": "dragonBones.AnimationState",
			"scope": "instance",
			"rwType": 1,
			"description": "当前播放次数",
			"pType": "public"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "currentTime",
			"memberof": "dragonBones.AnimationState",
			"scope": "instance",
			"rwType": 1,
			"description": "动画当前播放时间（单位：秒）",
			"pType": "public"
		},
		{
			"kind": "member",
			"type": "boolean",
			"name": "displayControl",
			"memberof": "dragonBones.AnimationState",
			"scope": "instance",
			"description": "标记是否控制display的切换。设置为 true时，该 AnimationState 会控制display的切换默认值：true。",
			"see": [
				"dragonBones.Bone#displayController",
				"dragonBones.Bone#display"
			],
			"pType": "public"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "fadeOutTime",
			"memberof": "dragonBones.AnimationState",
			"scope": "instance",
			"description": "淡出时间。",
			"pType": "public"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "fadeState",
			"memberof": "dragonBones.AnimationState",
			"scope": "instance",
			"rwType": 1,
			"pType": "public"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "fadeTotalTime",
			"memberof": "dragonBones.AnimationState",
			"scope": "instance",
			"rwType": 1,
			"pType": "public"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "fadeWeight",
			"memberof": "dragonBones.AnimationState",
			"scope": "instance",
			"rwType": 1,
			"pType": "public"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "group",
			"memberof": "dragonBones.AnimationState",
			"scope": "instance",
			"rwType": 1,
			"description": "动画所在的组",
			"pType": "public"
		},
		{
			"kind": "member",
			"type": "boolean",
			"name": "isComplete",
			"memberof": "dragonBones.AnimationState",
			"scope": "instance",
			"rwType": 1,
			"description": "是否播放完成",
			"pType": "public"
		},
		{
			"kind": "member",
			"type": "boolean",
			"name": "isPlaying",
			"memberof": "dragonBones.AnimationState",
			"scope": "instance",
			"rwType": 1,
			"description": "是否正在播放",
			"pType": "public"
		},
		{
			"kind": "member",
			"type": "boolean",
			"name": "lastFrameAutoTween",
			"memberof": "dragonBones.AnimationState",
			"scope": "instance",
			"description": "动画循环播放时，从最后一帧到第一帧是否自动补间。默认值：true",
			"pType": "public"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "layer",
			"memberof": "dragonBones.AnimationState",
			"scope": "instance",
			"rwType": 1,
			"description": "动画所在的层",
			"pType": "public"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "name",
			"memberof": "dragonBones.AnimationState",
			"scope": "instance",
			"rwType": 1,
			"description": "动画的名字",
			"pType": "public"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "playTimes",
			"memberof": "dragonBones.AnimationState",
			"scope": "instance",
			"rwType": 1,
			"description": "播放次数 (0:循环播放， >0:播放次数)",
			"pType": "public"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "timeScale",
			"memberof": "dragonBones.AnimationState",
			"scope": "instance",
			"rwType": 1,
			"description": "时间缩放系数。用于调节动画播放速度",
			"pType": "public"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "totalTime",
			"memberof": "dragonBones.AnimationState",
			"scope": "instance",
			"rwType": 1,
			"description": "动画总时长（单位：秒）",
			"pType": "public"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "weight",
			"memberof": "dragonBones.AnimationState",
			"scope": "instance",
			"description": "动画权重(0~1)。默认值：1。",
			"pType": "public"
		}
	],
	"function": [
		{
			"kind": "function",
			"name": "AnimationState",
			"memberof": "dragonBones.AnimationState",
			"scope": "instance",
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "dragonBones.AnimationState",
			"name": "addBoneMask",
			"memberof": "dragonBones.AnimationState",
			"scope": "instance",
			"description": "将一个骨头加入遮罩。只有加入遮罩的骨头的动画才会被播放，如果没有骨头加入遮罩，则所有骨头的动画都会播放。通过这个API可以实现只播放角色的一部分.",
			"returns": "动画播放状态实例",
			"params": [
				{
					"name": "boneName",
					"type": "string",
					"description": "骨头名称."
				},
				{
					"name": "ifInvolveChildBones",
					"type": "boolean",
					"default": "true",
					"description": "是否影响子骨头。默认值：true."
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "boolean",
			"name": "containsBoneMask",
			"memberof": "dragonBones.AnimationState",
			"scope": "instance",
			"description": "检查指定名称的骨头是否在遮罩中。只有在遮罩中的骨头动画才会被播放",
			"returns": "",
			"params": [
				{
					"name": "boneName",
					"type": "string",
					"description": "dragonBones.AnimationState#containsBoneMask"
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "dragonBones.AnimationState",
			"name": "fadeOut",
			"memberof": "dragonBones.AnimationState",
			"scope": "instance",
			"description": "淡出当前动画",
			"params": [
				{
					"name": "fadeTotalTime",
					"type": "number",
					"description": "淡出时间"
				},
				{
					"name": "pausePlayhead",
					"type": "boolean",
					"description": "淡出时动画是否暂停。"
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "dragonBones.AnimationState",
			"name": "play",
			"memberof": "dragonBones.AnimationState",
			"scope": "instance",
			"description": "播放当前动画。如果动画已经播放完毕, 将不会继续播放.",
			"returns": "动画播放状态实例",
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "dragonBones.AnimationState",
			"name": "removeAllMixingTransform",
			"memberof": "dragonBones.AnimationState",
			"scope": "instance",
			"description": "清空骨头遮罩.",
			"returns": "动画播放状态实例",
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "dragonBones.AnimationState",
			"name": "removeBoneMask",
			"memberof": "dragonBones.AnimationState",
			"scope": "instance",
			"description": "将一个指定名称的骨头从遮罩中移除.",
			"returns": "动画播放状态实例",
			"params": [
				{
					"name": "boneName",
					"type": "string",
					"description": "骨头名称."
				},
				{
					"name": "ifInvolveChildBones",
					"type": "boolean",
					"default": "true",
					"description": "是否影响子骨头。默认值：true."
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "dragonBones.AnimationState",
			"name": "setAdditiveBlending",
			"memberof": "dragonBones.AnimationState",
			"scope": "instance",
			"description": "//属性访问",
			"params": [
				{
					"name": "value",
					"type": "boolean",
					"description": ""
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "dragonBones.AnimationState",
			"name": "setAutoFadeOut",
			"memberof": "dragonBones.AnimationState",
			"scope": "instance",
			"params": [
				{
					"name": "value",
					"type": "boolean",
					"description": ""
				},
				{
					"name": "fadeOutTime",
					"type": "number",
					"default": "-1",
					"description": ""
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "dragonBones.AnimationState",
			"name": "setCurrentTime",
			"memberof": "dragonBones.AnimationState",
			"scope": "instance",
			"params": [
				{
					"name": "value",
					"type": "number",
					"description": ""
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "dragonBones.AnimationState",
			"name": "setFrameTween",
			"memberof": "dragonBones.AnimationState",
			"scope": "instance",
			"params": [
				{
					"name": "autoTween",
					"type": "boolean",
					"description": ""
				},
				{
					"name": "lastFrameAutoTween",
					"type": "boolean",
					"description": ""
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "dragonBones.AnimationState",
			"name": "setPlayTimes",
			"memberof": "dragonBones.AnimationState",
			"scope": "instance",
			"params": [
				{
					"name": "value",
					"type": "number",
					"default": "0",
					"description": ""
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "dragonBones.AnimationState",
			"name": "setTimeScale",
			"memberof": "dragonBones.AnimationState",
			"scope": "instance",
			"params": [
				{
					"name": "value",
					"type": "number",
					"description": ""
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "dragonBones.AnimationState",
			"name": "setWeight",
			"memberof": "dragonBones.AnimationState",
			"scope": "instance",
			"params": [
				{
					"name": "value",
					"type": "number",
					"description": ""
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "dragonBones.AnimationState",
			"name": "stop",
			"memberof": "dragonBones.AnimationState",
			"scope": "instance",
			"description": "暂停当前动画的播放。",
			"returns": "动画播放状态实例",
			"pType": "public"
		}
	],
	"globalMember": [],
	"globalFunction": [],
	"class": {
		"kind": "class",
		"name": "AnimationState",
		"memberof": "dragonBones",
		"filename": "extension/dragonbones/core/animation/AnimationState.ts",
		"description": "AnimationState 实例由 Animation 实例播放动画时产生， 可以对单个动画的播放进行最细致的调节。",
		"see": [
			"dragonBones.Animation",
			"dragonBones.AnimationData"
		],
		"example": "<pre><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//获取动画数据<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;skeletonData&nbsp;=&nbsp;RES.getRes(&quot;skeleton&quot;);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//获取纹理集数据<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;textureData&nbsp;=&nbsp;RES.getRes(&quot;textureConfig&quot;);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//获取纹理集图片<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;texture&nbsp;=&nbsp;RES.getRes(&quot;texture&quot;);<br/>\t&nbsp;&nbsp;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//创建一个工厂，用来创建Armature<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;factory:dragonBones.EgretFactory&nbsp;=&nbsp;new&nbsp;dragonBones.EgretFactory();<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//把动画数据添加到工厂里<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;factory.addSkeletonData(dragonBones.DataParser.parseDragonBonesData(skeletonData));<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//把纹理集数据和图片添加到工厂里<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;factory.addTextureAtlas(new&nbsp;dragonBones.EgretTextureAtlas(texture,&nbsp;textureData));<br/>\t&nbsp;&nbsp;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//获取Armature的名字，dragonBones4.0的数据可以包含多个骨架，这里取第一个Armature<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;armatureName:string&nbsp;=&nbsp;skeletonData.armature[0].name;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//从工厂里创建出Armature<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;armature:dragonBones.Armature&nbsp;=&nbsp;factory.buildArmature(armatureName);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//获取装载Armature的容器<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;armatureDisplay&nbsp;=&nbsp;armature.display;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;armatureDisplay.x&nbsp;=&nbsp;200;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;armatureDisplay.y&nbsp;=&nbsp;500;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//把它添加到舞台上<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.addChild(armatureDisplay);<br/>\t&nbsp;&nbsp;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//取得这个Armature动画列表中的第一个动画的名字<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;curAnimationName:string&nbsp;=&nbsp;armature.animation.animationList[0];<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//播放这个动画<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;armature.animation.gotoAndPlay(curAnimationName,0.3,-1,0);<br/>\t&nbsp;&nbsp;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//获取animationState可以对动画进行更多控制；<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;animationState:dragonBones.AnimationState&nbsp;=&nbsp;armature.animation.getState(curAnimationName);<br/>\t&nbsp;&nbsp;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//下面的代码实现人物的脖子和头动，但是其他部位不动<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;animationState.addBoneMask(&quot;neck&quot;,true);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//下面的代码实现人物的身体动，但是脖子和头不动<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//animationState.addBoneMask(&quot;hip&quot;,true);//“hip”是骨架的根骨骼的名字<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//animationState.removeBoneMask(&quot;neck&quot;,true);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//下面的代码实现动画幅度减小的效果<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//animationState.weight&nbsp;=&nbsp;0.5;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//把Armature添加到心跳时钟里&nbsp;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dragonBones.WorldClock.clock.add(armature);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//心跳时钟开启<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;egret.Ticker.getInstance().register(function&nbsp;(advancedTime)&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dragonBones.WorldClock.clock.advanceTime(advancedTime&nbsp;/&nbsp;1000);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},&nbsp;this);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</pre>"
	}
}
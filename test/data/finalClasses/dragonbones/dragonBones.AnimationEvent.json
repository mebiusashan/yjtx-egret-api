{
	"member": [
		{
			"kind": "member",
			"type": "string",
			"name": "ACTIVATE",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "游戏激活",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"default": "\"activate\"",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "ADDED",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "将显示对象添加到显示列表中时调度。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"default": "\"added\"",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "ADDED_TO_STAGE",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "在将显示对象直接添加到舞台显示列表或将包含显示对象的子树添加至舞台显示列表中时调度。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"default": "\"addedToStage\"",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "CHANGE",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "属性值或状态发生改变。通常是按钮的选中状态，或者列表的选中项索引改变。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"default": "\"change\"",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "CHANGING",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "属性值或状态即将发生改变,通常是按钮的选中状态，或者列表的选中项索引改变。可以通过调用 preventDefault() 方法阻止索引发生更改。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"default": "\"changing\"",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "CLOSE",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "Event.CLOSE 常量定义 close 事件对象的 type 属性的值。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"default": "\"close\"",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "COMPLETE",
			"memberof": "dragonBones.AnimationEvent",
			"scope": "static",
			"description": "当动画停止时派发",
			"pType": "public",
			"default": "\"complete\""
		},
		{
			"kind": "member",
			"type": "string",
			"name": "CONNECT",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "Event.CONNECT 常量定义 connect 事件对象的 type 属性的值。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"default": "\"connect\"",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "DEACTIVATE",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "取消激活",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"default": "\"deactivate\"",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "ENDED",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "动画声音等播放完成",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"default": "\"ended\"",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "ENTER_FRAME",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "[广播事件] 进入新的一帧,监听此事件将会在下一帧开始时触发一次回调。这是一个广播事件，可以在任何一个显示对象上监听，无论它是否在显示列表中。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"default": "\"enterFrame\"",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "FADE_IN",
			"memberof": "dragonBones.AnimationEvent",
			"scope": "static",
			"description": "当动画缓入的时候派发",
			"pType": "public",
			"default": "\"fadeIn\""
		},
		{
			"kind": "member",
			"type": "string",
			"name": "FADE_IN_COMPLETE",
			"memberof": "dragonBones.AnimationEvent",
			"scope": "static",
			"description": "当动画缓入完成时派发",
			"pType": "public",
			"default": "\"fadeInComplete\""
		},
		{
			"kind": "member",
			"type": "string",
			"name": "FADE_OUT",
			"memberof": "dragonBones.AnimationEvent",
			"scope": "static",
			"description": "当动画缓出的时候派发",
			"pType": "public",
			"default": "\"fadeOut\""
		},
		{
			"kind": "member",
			"type": "string",
			"name": "FADE_OUT_COMPLETE",
			"memberof": "dragonBones.AnimationEvent",
			"scope": "static",
			"description": "当动画缓出结束后派发",
			"pType": "public",
			"default": "\"fadeOutComplete\""
		},
		{
			"kind": "member",
			"type": "string",
			"name": "FOCUS_IN",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "TextInput实例获得焦点",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"default": "\"focusIn\"",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "FOCUS_OUT",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "TextInput实例失去焦点",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"default": "\"focusOut\"",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "LEAVE_STAGE",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "Event.LEAVE_STAGE 常量定义 leaveStage 事件对象的 type 属性的值。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"default": "\"leaveStage\"",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "LOOP_COMPLETE",
			"memberof": "dragonBones.AnimationEvent",
			"scope": "static",
			"description": "当动画播放完一轮后派发",
			"pType": "public",
			"default": "\"loopComplete\""
		},
		{
			"kind": "member",
			"type": "string",
			"name": "MOVEMENT_CHANGE",
			"memberof": "dragonBones.AnimationEvent",
			"scope": "static",
			"rwType": 1,
			"description": "不推荐使用.",
			"pType": "public"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "REMOVED",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "将要从显示列表中删除显示对象时调度。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"default": "\"removed\"",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "REMOVED_FROM_STAGE",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "在从显示列表中直接删除显示对象或删除包含显示对象的子树时调度。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"default": "\"removedFromStage\"",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "RENDER",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "渲染事件，监听此事件将会在本帧末即将开始渲染的前一刻触发回调，这是一个广播事件，可以在任何一个显示对象上监听，无论它是否在显示列表中。注意：每次您希望 Egret 发送 Event.RENDER 事件时，都必须调用 stage.invalidate() 方法，由于每帧只会触发一次屏幕刷新，若在 Event.RENDER 回调函数执行期间再次调用stage.invalidate()，将会被忽略。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"default": "\"render\"",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "RESIZE",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "舞台尺寸或UI组件尺寸发生改变",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"default": "\"resize\"",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "SOUND_COMPLETE",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "Event.SOUND_COMPLETE 常量定义 在声音完成播放后调度。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"default": "\"soundComplete\"",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "START",
			"memberof": "dragonBones.AnimationEvent",
			"scope": "static",
			"description": "当动画开始播放时派发",
			"pType": "public",
			"default": "\"start\""
		},
		{
			"kind": "member",
			"type": "string",
			"name": "animationName",
			"memberof": "dragonBones.AnimationEvent",
			"scope": "instance",
			"rwType": 1,
			"description": "获取动画的名字",
			"returns": "",
			"pType": "public"
		},
		{
			"kind": "member",
			"type": "any",
			"name": "animationState",
			"memberof": "dragonBones.AnimationEvent",
			"scope": "instance",
			"description": "animationState 的实例.",
			"pType": "public"
		},
		{
			"kind": "member",
			"type": "dragonBones.Armature",
			"name": "armature",
			"memberof": "dragonBones.AnimationEvent",
			"scope": "instance",
			"rwType": 1,
			"description": "配发出事件的骨架",
			"pType": "public"
		},
		{
			"kind": "member",
			"type": "boolean",
			"name": "bubbles",
			"memberof": "egret.Event",
			"scope": "instance",
			"rwType": 1,
			"description": "表示事件是否为冒泡事件。如果事件可以冒泡，则此值为 true；否则为 false。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "boolean",
			"name": "cancelable",
			"memberof": "egret.Event",
			"scope": "instance",
			"rwType": 1,
			"description": "表示是否可以阻止与事件相关联的行为。如果可以取消该行为，则此值为 true；否则为 false。",
			"see": [
				"#preventDefault()"
			],
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "any",
			"name": "currentTarget",
			"memberof": "egret.Event",
			"scope": "instance",
			"rwType": 1,
			"description": "当前正在使用某个事件侦听器处理 Event 对象的对象。例如，如果用户单击“确定”按钮，则当前目标可以是包含该按钮的节点，也可以是它的已为该事件注册了事件侦听器的始祖之一。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "any",
			"name": "data",
			"memberof": "egret.Event",
			"scope": "instance",
			"description": "与此事件对象关联的可选数据。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "eventPhase",
			"memberof": "egret.Event",
			"scope": "instance",
			"rwType": 1,
			"description": "事件流中的当前阶段。此属性可以包含以下数值：捕获阶段 (EventPhase.CAPTURING_PHASE)。目标阶段 (EventPhase.AT_TARGET)。冒泡阶段 (EventPhase.BUBBLING_PHASE)。",
			"see": [
				"egret.EventPhase"
			],
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "hashCode",
			"memberof": "egret.HashObject",
			"scope": "instance",
			"rwType": 1,
			"description": "返回此对象唯一的哈希值,用于唯一确定一个对象。hashCode为大于等于1的整数。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.HashObject"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "movementID",
			"memberof": "dragonBones.AnimationEvent",
			"scope": "instance",
			"rwType": 1,
			"description": "不推荐的API.",
			"pType": "public"
		},
		{
			"kind": "member",
			"type": "any",
			"name": "target",
			"memberof": "egret.Event",
			"scope": "instance",
			"rwType": 1,
			"description": "事件目标。此属性包含目标节点。例如，如果用户单击“确定”按钮，则目标节点就是包含该按钮的显示列表节点。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "type",
			"memberof": "egret.Event",
			"scope": "instance",
			"rwType": 1,
			"description": "事件的类型。类型区分大小写。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.Event"
		}
	],
	"function": [
		{
			"kind": "function",
			"name": "AnimationEvent",
			"memberof": "dragonBones.AnimationEvent",
			"scope": "instance",
			"description": "创建一个新的 AnimationEvent 的实例",
			"params": [
				{
					"name": "type",
					"type": "string",
					"description": "事件的类型"
				},
				{
					"name": "cancelable",
					"type": "boolean",
					"default": "false",
					"description": "cancelable"
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "T",
			"name": "create",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "从对象池中取出或创建一个新的事件实例。我们建议您尽可能使用Event.create()和Event.release() 这一对方法来创建和释放事件对象，这一对方法会将事件实例在内部缓存下来供下次循环使用，减少对象的创建次数,从而获得更高的代码运行性能。<br/>注意：若使用此方法来创建自定义事件的实例，自定义的构造函数参数列表必须跟Event类一致。",
			"example": "<pre><br/>&nbsp;&nbsp;&nbsp;var&nbsp;event&nbsp;=&nbsp;Event.create(Event,type,&nbsp;bubbles);<br/>&nbsp;&nbsp;&nbsp;event.data&nbsp;=&nbsp;data;&nbsp;&nbsp;//可选，若指定义事件上需要附加其他参数，可以在获取实例后在此处设置。<br/>&nbsp;&nbsp;&nbsp;this.dispatchEvent(event);<br/>&nbsp;&nbsp;&nbsp;Event.release(event);<br/></pre>",
			"see": [
				"#clean()"
			],
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "EventClass",
					"type": "{new (type:string,bubbles?:boolean,cancelable?:boolean):T;eventPool?:egret.Event[]}",
					"description": "Event类名。"
				},
				{
					"name": "type",
					"type": "string",
					"description": "事件的类型，可以作为 Event.type 访问。"
				},
				{
					"name": "bubbles",
					"question": true,
					"type": "boolean",
					"description": "确定 Event 对象是否参与事件流的冒泡阶段。默认值为 false。"
				},
				{
					"name": "cancelable",
					"question": true,
					"type": "boolean",
					"description": "确定是否可以取消 Event 对象。默认值为 false。"
				}
			],
			"pType": "public",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "function",
			"type": "boolean",
			"name": "dispatchEvent",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "使用指定的 EventDispatcher 对象来抛出 Event 事件对象。抛出的对象将会缓存在对象池上，供下次循环复用。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "target",
					"type": "egret.IEventDispatcher",
					"description": "派发事件目标"
				},
				{
					"name": "type",
					"type": "string",
					"description": "事件类型"
				},
				{
					"name": "bubbles",
					"type": "boolean",
					"default": "false",
					"description": "确定 Event 对象是否参与事件流的冒泡阶段。默认值为 false。"
				},
				{
					"name": "data",
					"question": true,
					"type": "any",
					"description": "事件data"
				}
			],
			"pType": "public",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "function",
			"type": "boolean",
			"name": "isDefaultPrevented",
			"memberof": "egret.Event",
			"scope": "instance",
			"description": "检查是否已对事件调用 preventDefault() 方法。",
			"returns": "如果已调用 preventDefault() 方法，则返回 true；否则返回 false。",
			"see": [
				"#preventDefault()"
			],
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "preventDefault",
			"memberof": "egret.Event",
			"scope": "instance",
			"description": "如果可以取消事件的默认行为，则取消该行为。许多事件都有默认执行的关联行为。例如，如果用户在文本字段中键入一个字符，则默认行为就是在文本字段中显示该字符。由于可以取消 TextEvent.TEXT_INPUT 事件的默认行为，因此您可以使用 preventDefault() 方法来防止显示该字符。您可以使用 Event.cancelable 属性来检查是否可以防止与特定事件关联的默认行为。如果 Event.cancelable 的值为 true，则可以使用 preventDefault() 来取消事件；否则，preventDefault() 无效。",
			"see": [
				"#cancelable",
				"#isDefaultPrevented"
			],
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "release",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "释放一个事件对象，并缓存到对象池。我们建议您尽可能使用Event.create()和Event.release() 这一对方法来创建和释放事件对象，这一对方法会将事件实例在内部缓存下来供下次循环使用，减少对象的创建次数,从而获得更高的代码运行性能。<br/>注意：此方法只能传入由Event.create()创建的事件实例，传入非法对象实例可能会导致报错。",
			"example": "<pre><br/>&nbsp;&nbsp;&nbsp;var&nbsp;event&nbsp;=&nbsp;Event.create(Event,type,&nbsp;bubbles);<br/>&nbsp;&nbsp;&nbsp;event.data&nbsp;=&nbsp;data;&nbsp;&nbsp;&nbsp;//可选，若指定义事件上需要附加其他参数，可以在获取实例后在此处设置。<br/>&nbsp;&nbsp;&nbsp;this.dispatchEvent(event);<br/>&nbsp;&nbsp;&nbsp;Event.release(event);<br/></pre>",
			"see": [
				"#clean()"
			],
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "event",
					"type": "egret.Event",
					"description": ""
				}
			],
			"pType": "public",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "stopImmediatePropagation",
			"memberof": "egret.Event",
			"scope": "instance",
			"description": "防止对事件流中当前节点中和所有后续节点中的事件侦听器进行处理。此方法会立即生效，并且会影响当前节点中的事件侦听器。相比之下，在当前节点中的所有事件侦听器都完成处理之前，stopPropagation() 方法不会生效。<br/>注意：此方法不会取消与此事件相关联的行为；有关此功能的信息，请参阅 preventDefault()。",
			"see": [
				"#stopPropagation()",
				"#preventDefault()"
			],
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "stopPropagation",
			"memberof": "egret.Event",
			"scope": "instance",
			"description": "防止对事件流中当前节点的后续节点中的所有事件侦听器进行处理。此方法不会影响当前节点 currentTarget 中的任何事件侦听器。相比之下，stopImmediatePropagation() 方法可以防止对当前节点中和后续节点中的事件侦听器进行处理。对此方法的其它调用没有任何效果。可以在事件流的任何阶段中调用此方法。<br/>注意：此方法不会取消与此事件相关联的行为；有关此功能的信息，请参阅 preventDefault()。",
			"see": [
				"#stopImmediatePropagation()",
				"#preventDefault()"
			],
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.Event"
		}
	],
	"globalMember": [],
	"globalFunction": [],
	"class": {
		"kind": "class",
		"name": "AnimationEvent",
		"memberof": "dragonBones",
		"filename": "extension/dragonbones/core/events/AnimationEvent.ts",
		"description": "动画事件",
		"example": "<pre><br/>\t&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;exampleEvent():void<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;{<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//获取动画数据<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;skeletonData&nbsp;=&nbsp;RES.getRes(&quot;skeleton&quot;);<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//获取纹理集数据<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;textureData&nbsp;=&nbsp;RES.getRes(&quot;textureConfig&quot;);<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//获取纹理集图片<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;texture&nbsp;=&nbsp;RES.getRes(&quot;texture&quot;);<br/><br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//创建一个工厂，用来创建Armature<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;factory:dragonBones.EgretFactory&nbsp;=&nbsp;new&nbsp;dragonBones.EgretFactory();<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//把动画数据添加到工厂里<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;factory.addSkeletonData(dragonBones.DataParser.parseDragonBonesData(skeletonData));<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//把纹理集数据和图片添加到工厂里<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;factory.addTextureAtlas(new&nbsp;dragonBones.EgretTextureAtlas(texture,&nbsp;textureData));<br/><br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//获取Armature的名字，dragonBones4.0的数据可以包含多个骨架，这里取第一个Armature<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;armatureName:string&nbsp;=&nbsp;skeletonData.armature[0].name;<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//从工厂里创建出Armature<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;armature:dragonBones.Armature&nbsp;=&nbsp;factory.buildArmature(armatureName);<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//获取装载Armature的容器<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;armatureDisplay&nbsp;=&nbsp;armature.display;<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;armatureDisplay.x&nbsp;=&nbsp;200;<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;armatureDisplay.y&nbsp;=&nbsp;400;<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//把它添加到舞台上<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.addChild(armatureDisplay);<br/><br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//监听事件时间轴上的事件<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;armature.addEventListener(dragonBones.FrameEvent.ANIMATION_FRAME_EVENT,&nbsp;this.onFrameEvent,this);<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//监听骨骼时间轴上的事件<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;armature.addEventListener(dragonBones.FrameEvent.BONE_FRAME_EVENT,&nbsp;this.onFrameEvent,this);<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//监听动画完成事件<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;armature.addEventListener(dragonBones.AnimationEvent.COMPLETE,&nbsp;this.onAnimationEvent,this);<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//监听动画开始事件<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;armature.addEventListener(dragonBones.AnimationEvent.START,&nbsp;this.onAnimationEvent,this);<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//监听循环动画，播放完一遍的事件<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;armature.addEventListener(dragonBones.AnimationEvent.LOOP_COMPLETE,&nbsp;this.onAnimationEvent,this);<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//监听声音事件<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;soundManager:dragonBones.SoundEventManager&nbsp;=&nbsp;dragonBones.SoundEventManager.getInstance();<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;soundManager.addEventListener(dragonBones.SoundEvent.SOUND,&nbsp;this.onSoundEvent,this);<br/><br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//取得这个Armature动画列表中的第一个动画的名字<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;curAnimationName&nbsp;=&nbsp;armature.animation.animationList[0];<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//播放一遍动画<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;armature.animation.gotoAndPlay(curAnimationName,0,-1,1);<br/><br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//把Armature添加到心跳时钟里<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dragonBones.WorldClock.clock.add(armature);<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//心跳时钟开启<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;egret.Ticker.getInstance().register(function&nbsp;(advancedTime)&nbsp;{<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dragonBones.WorldClock.clock.advanceTime(advancedTime&nbsp;/&nbsp;1000);<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},&nbsp;this);<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;}<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;onFrameEvent(evt:&nbsp;dragonBones.FrameEvent):void<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;{<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//打印出事件的类型，和事件的帧标签<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(evt.type,&nbsp;evt.frameLabel);<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;}<br/><br/>\t&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;onAnimationEvent(evt:&nbsp;dragonBones.AnimationEvent):void<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;{<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch(evt.type)<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;dragonBones.AnimationEvent.START:<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;dragonBones.AnimationEvent.LOOP_COMPLETE:<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;dragonBones.AnimationEvent.COMPLETE:<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//动画完成后销毁这个armature<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.removeChild(evt.armature.display);<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dragonBones.WorldClock.clock.remove(evt.armature);<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;evt.armature.dispose();<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;}<br/><br/>\t&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;onSoundEvent(evt:&nbsp;dragonBones.SoundEvent):void<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;{<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//播放声音<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;flySound:egret.Sound&nbsp;=&nbsp;RES.getRes(evt.sound);<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;soundEvent&quot;,evt.sound);<br/>\t&nbsp;&nbsp;&nbsp;&nbsp;}<br/><br/>\t&nbsp;&nbsp;&nbsp;</pre>",
		"augments": [
			"dragonBones.Event",
			"egret.Event",
			"egret.HashObject"
		]
	}
}
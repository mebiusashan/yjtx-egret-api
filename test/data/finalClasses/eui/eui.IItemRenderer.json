{
	"member": [
		{
			"kind": "member",
			"type": "number",
			"name": "alpha",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "表示指定对象的 Alpha 透明度值。有效值为 0（完全透明）到 1（完全不透明）。alpha 设置为 0 的显示对象是可触摸的，即使它们不可见。",
			"default": "1",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "anchorOffsetX",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "表示从对象绝对锚点X。",
			"default": "0",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "anchorOffsetY",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "表示从对象绝对锚点Y。",
			"default": "0",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "blendMode",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "BlendMode 枚举中的一个值，用于指定要使用的混合模式，确定如何将一个源（新的）图像绘制到目标（已有）的图像上<br/>如果尝试将此属性设置为无效值，则运行时会将此值设置为 BlendMode.NORMAL。",
			"default": "egret.BlendMode.NORMAL",
			"see": [
				"egret.BlendMode"
			],
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "any",
			"name": "bottom",
			"memberof": "eui.UIComponent",
			"scope": "instance",
			"description": "距父级容器底部距离。",
			"default": "NaN",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "eui.UIComponent"
		},
		{
			"kind": "member",
			"type": "boolean",
			"name": "cacheAsBitmap",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "如果设置为 true，则 Egret 运行时将缓存显示对象的内部位图表示形式。此缓存可以提高包含复杂矢量内容的显示对象的性能。将 cacheAsBitmap 属性设置为 true 后，呈现并不更改，但是，显示对象将自动执行像素贴紧。执行速度可能会大大加快，具体取决于显示对象内容的复杂性。最好将 cacheAsBitmap 属性与主要具有静态内容且不频繁缩放或旋转的显示对象一起使用。<br/>注意：在内存超过上限的情况下，即使将 cacheAsBitmap 属性设置为 true，显示对象也不使用位图缓存。",
			"default": "false",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "any",
			"name": "data",
			"memberof": "eui.IItemRenderer",
			"scope": "instance",
			"description": "要呈示或编辑的数据。",
			"version": "eui 1.0",
			"platform": "Web,Native"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "explicitHeight",
			"memberof": "eui.UIComponent",
			"scope": "instance",
			"description": "外部显式指定的高度。",
			"rwType": 1,
			"version": "eui 1.0",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "eui.UIComponent"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "explicitWidth",
			"memberof": "eui.UIComponent",
			"scope": "instance",
			"description": "外部显式指定的宽度。",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "eui.UIComponent"
		},
		{
			"kind": "member",
			"type": "Array<egret.Filter>",
			"name": "filters",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "包含当前与显示对象关联的每个滤镜对象的索引数组。注意 : 目前只有 WebGL 下支持，Canvs 渲染以及 native 均不支持。",
			"version": "Egret 3.1.0",
			"platform": "Web",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "height",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "表示显示对象的高度，以像素为单位。高度是根据显示对象内容的范围来计算的。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "any",
			"name": "horizontalCenter",
			"memberof": "eui.UIComponent",
			"scope": "instance",
			"description": "在父级容器中距水平中心位置的距离。",
			"default": "NaN",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "eui.UIComponent"
		},
		{
			"kind": "member",
			"type": "boolean",
			"name": "includeInLayout",
			"memberof": "eui.UIComponent",
			"scope": "instance",
			"description": "指定此组件是否包含在父容器的布局中。若为false，则父级容器在测量和布局阶段都忽略此组件。注意，visible属性与此属性不同，设置visible为false，父级容器仍会对其布局。",
			"default": "true",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "eui.UIComponent"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "itemIndex",
			"memberof": "eui.IItemRenderer",
			"scope": "instance",
			"description": "项呈示器的数据提供程序中的项目索引。",
			"version": "eui 1.0",
			"platform": "Web,Native"
		},
		{
			"kind": "member",
			"type": "any",
			"name": "left",
			"memberof": "eui.UIComponent",
			"scope": "instance",
			"description": "距父级容器离左边距离。",
			"default": "NaN",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "eui.UIComponent"
		},
		{
			"kind": "member",
			"type": "egret.DisplayObject|egret.Rectangle",
			"name": "mask",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "调用显示对象被指定的 mask 对象遮罩。要确保当舞台缩放时蒙版仍然有效，mask 显示对象必须处于显示列表的活动部分。但不绘制 mask 对象本身。将 mask 设置为 null 可删除蒙版。要能够缩放遮罩对象，它必须在显示列表中。要能够拖动蒙版对象，它必须在显示列表中。<br/>注意：单个 mask 对象不能用于遮罩多个执行调用的显示对象。在将 mask 分配给第二个显示对象时，会撤消其作为第一个对象的遮罩，该对象的 mask 属性将变为 null。下面例子为 mask 为 Rectangle 类型对象，这种情况下，修改 mask 的值后，一定要对 myDisplayObject 重新赋值 mask，不然会出问题。",
			"example": "以下代码改变了显示对象 mask 的 x 属性值：<pre><br/>&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;myMask:Rectangle&nbsp;=&nbsp;myDisplayObject.mask;<br/>&nbsp;&nbsp;&nbsp;&nbsp;myMask.x&nbsp;+=&nbsp;10;<br/>&nbsp;&nbsp;&nbsp;&nbsp;myDisplayObject.mask&nbsp;=&nbsp;myMask;//设置完&nbsp;mask&nbsp;的x、y、width、height值之后，一定要对myDisplayObject重新赋值&nbsp;mask，不然会出问题。<br/></pre>",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "egret.Matrix",
			"name": "matrix",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "一个 Matrix 对象，其中包含更改显示对象的缩放、旋转和平移的值。<br/>注意：要改变一个显示对象矩阵的值，您必引用整个矩阵对象，然后将它重新赋值给显示对象的 matrix 属性。",
			"example": "以下代码改变了显示对象矩阵的tx属性值：<pre><br/>&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;myMatrix:Matrix&nbsp;=&nbsp;myDisplayObject.matrix;<br/>&nbsp;&nbsp;&nbsp;&nbsp;myMatrix.tx&nbsp;+=&nbsp;10;<br/>&nbsp;&nbsp;&nbsp;&nbsp;myDisplayObject.matrix&nbsp;=&nbsp;myMatrix;<br/></pre>",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "maxHeight",
			"memberof": "eui.UIComponent",
			"scope": "instance",
			"description": "组件的最大高度,同时影响测量和自动布局的尺寸。",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "eui.UIComponent"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "maxWidth",
			"memberof": "eui.UIComponent",
			"scope": "instance",
			"description": "组件的最大高度。同时影响测量和自动布局的尺寸。",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "eui.UIComponent"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "measuredHeight",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"rwType": 1,
			"description": "测量高度",
			"returns": "",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "measuredWidth",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"rwType": 1,
			"description": "测量宽度",
			"returns": "",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "minHeight",
			"memberof": "eui.UIComponent",
			"scope": "instance",
			"description": "组件的最小高度,此属性设置为大于maxHeight的值时无效。同时影响测量和自动布局的尺寸。",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "eui.UIComponent"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "minWidth",
			"memberof": "eui.UIComponent",
			"scope": "instance",
			"description": "组件的最小宽度,此属性设置为大于maxWidth的值时无效。同时影响测量和自动布局的尺寸。",
			"rwType": 1,
			"version": "eui 1.0",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "eui.UIComponent"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "name",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "表示 DisplayObject 的实例名称。通过调用父显示对象容器的 getChildByName() 方法，可以在父显示对象容器的子列表中标识该对象。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "egret.DisplayObjectContainer",
			"name": "parent",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"rwType": 1,
			"description": "表示包含此显示对象的 DisplayObjectContainer 对象。使用 parent 属性可以指定高于显示列表层次结构中当前显示对象的显示对象的相对路径。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "percentHeight",
			"memberof": "eui.UIComponent",
			"scope": "instance",
			"description": "相对父级容器高度的百分比。",
			"default": "NaN",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "eui.UIComponent"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "percentWidth",
			"memberof": "eui.UIComponent",
			"scope": "instance",
			"description": "相对父级容器宽度的百分比。",
			"default": "NaN",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "eui.UIComponent"
		},
		{
			"kind": "member",
			"type": "any",
			"name": "right",
			"memberof": "eui.UIComponent",
			"scope": "instance",
			"description": "距父级容器右边距离。",
			"default": "NaN",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "eui.UIComponent"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "rotation",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "表示 DisplayObject 实例距其原始方向的旋转程度，以度为单位。从 0 到 180 的值表示顺时针方向旋转；从 0 到 -180 的值表示逆时针方向旋转。对于此范围之外的值，可以通过加上或减去 360 获得该范围内的值。例如，myDisplayObject.rotation = 450语句与 myDisplayObject.rotation = 90 是相同的。",
			"default": "0",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "scaleX",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "表示从注册点开始应用的对象的水平缩放比例（百分比）。<br/>1.0 等于 100% 缩放。",
			"default": "1",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "scaleY",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "表示从对象注册点开始应用的对象的垂直缩放比例（百分比）。1.0 是 100% 缩放。",
			"default": "1",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "egret.Rectangle",
			"name": "scrollRect",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "显示对象的滚动矩形范围。显示对象被裁切为矩形定义的大小，当您更改 scrollRect 对象的 x 和 y 属性时，它会在矩形内滚动。滚动的显示对象始终以整像素为增量进行滚动。您可以通过设置 scrollRect Rectangle 对象的 x 属性来左右滚动对象， 还可以通过设置scrollRect 对象的 y 属性来上下滚动对象。如果显示对象旋转了 90 度，并且您左右滚动它，则实际上显示对象会上下滚动。<br/>注意：要改变一个显示对象 scrollRect 属性的值，您必引用整个 scrollRect 对象，然后将它重新赋值给显示对象的 scrollRect 属性。",
			"example": "以下代码改变了显示对象 scrollRect 的 x 属性值：<pre><br/>&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;myRectangle:Rectangle&nbsp;=&nbsp;myDisplayObject.scrollRect;<br/>&nbsp;&nbsp;&nbsp;&nbsp;myRectangle.x&nbsp;+=&nbsp;10;<br/>&nbsp;&nbsp;&nbsp;&nbsp;myDisplayObject.scrollRect&nbsp;=&nbsp;myRectangle;//设置完scrollRect的x、y、width、height值之后，一定要对myDisplayObject重新赋值scrollRect，不然会出问题。<br/></pre>",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "boolean",
			"name": "selected",
			"memberof": "eui.IItemRenderer",
			"scope": "instance",
			"description": "如果项呈示器可以将其自身显示为已选中，则为 true。",
			"version": "eui 1.0",
			"platform": "Web,Native"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "skewX",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "表示DisplayObject的x方向斜切",
			"default": "0",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "skewY",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "表示DisplayObject的y方向斜切",
			"default": "0",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "egret.Stage",
			"name": "stage",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"rwType": 1,
			"description": "显示对象的舞台。例如，您可以创建多个显示对象并加载到显示列表中，每个显示对象的 stage 属性是指向相同的 Stage 对象。<br/>如果显示对象未添加到显示列表，则其 stage 属性会设置为 null。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "any",
			"name": "top",
			"memberof": "eui.UIComponent",
			"scope": "instance",
			"description": "距父级容器顶部距离。",
			"default": "NaN",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "eui.UIComponent"
		},
		{
			"kind": "member",
			"type": "boolean",
			"name": "touchEnabled",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "指定此对象是否接收触摸或其他用户输入。默认值为 false，这表示默认情况下，显示列表上的任何 DisplayObject 实例都不会接收触摸事件或其他用户输入事件。如果将 touchEnabled 设置为 false，则实例将不接收任何触摸事件（或其他用户输入事件）。显示列表上的该实例的任何子级都不会受到影响。要更改显示列表上对象的所有子级的 touchEnabled 行为，请使用 DisplayObjectContainer.touchChildren。",
			"see": [
				"egret.DisplayObjectContainer#touchChildren"
			],
			"default": "false",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "any",
			"name": "verticalCenter",
			"memberof": "eui.UIComponent",
			"scope": "instance",
			"description": "在父级容器中距竖直中心位置的距离。",
			"default": "NaN",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "eui.UIComponent"
		},
		{
			"kind": "member",
			"type": "boolean",
			"name": "visible",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "显示对象是否可见。不可见的显示对象将被禁用。例如，如果实例的 visible 为 false，则无法接受触摸或用户交互操作。",
			"default": "true",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "width",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "表示显示对象的宽度，以像素为单位。宽度是根据显示对象内容的范围来计算的。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "x",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "表示 DisplayObject 实例相对于父级 DisplayObjectContainer 本地坐标的 x 坐标。<br/>如果该对象位于具有变形的 DisplayObjectContainer 内，则它也位于包含 DisplayObjectContainer 的本地坐标系中。因此，对于逆时针旋转 90 度的 DisplayObjectContainer，该 DisplayObjectContainer 的子级将继承逆时针旋转 90 度的坐标系。",
			"default": "0",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "y",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "表示 DisplayObject 实例相对于父级 DisplayObjectContainer 本地坐标的 y 坐标。<br/>如果该对象位于具有变形的 DisplayObjectContainer 内，则它也位于包含 DisplayObjectContainer 的本地坐标系中。因此，对于逆时针旋转 90 度的 DisplayObjectContainer，该 DisplayObjectContainer 的子级将继承逆时针旋转 90 度的坐标系。",
			"default": "0",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		}
	],
	"function": [
		{
			"kind": "function",
			"type": "boolean",
			"name": "dispatchEvent",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"inheritDoc": true,
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "event",
					"type": "egret.Event",
					"description": ""
				}
			],
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "function",
			"type": "egret.Rectangle",
			"name": "getBounds",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "获取显示对象的测量边界",
			"returns": "",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "resultRect",
					"question": true,
					"type": "egret.Rectangle",
					"description": "可选参数，传入用于保存结果的Rectangle对象，避免重复创建对象。"
				},
				{
					"name": "calculateAnchor",
					"type": "boolean",
					"default": "true",
					"description": "可选参数，是否会计算锚点。"
				}
			],
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "getLayoutBounds",
			"memberof": "eui.UIComponent",
			"scope": "instance",
			"description": "组件的布局尺寸,常用于父级的<code>updateDisplayList()</code>方法中。<p/>按照：布局尺寸>外部显式设置尺寸>测量尺寸 的优先级顺序返回尺寸。<p/>注意此方法返回值已经包含scale和rotation。",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"params": [
				{
					"name": "bounds",
					"type": "egret.Rectangle",
					"description": "可以放置结果的<code>egret.Rectangle</code>实例。"
				}
			],
			"inherited": true,
			"inherits": "eui.UIComponent"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "getPreferredBounds",
			"memberof": "eui.UIComponent",
			"scope": "instance",
			"description": "获取组件的首选尺寸,常用于父级的<code>measure()</code>方法中。<p/>按照：外部显式设置尺寸>测量尺寸 的优先级顺序返回尺寸。<p/>注意此方法返回值已经包含scale和rotation。",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"params": [
				{
					"name": "bounds",
					"type": "egret.Rectangle",
					"description": "可以放置结果的<code>egret.Rectangle</code>实例。"
				}
			],
			"inherited": true,
			"inherits": "eui.UIComponent"
		},
		{
			"kind": "function",
			"type": "egret.Rectangle",
			"name": "getTransformedBounds",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "返回一个矩形，该矩形定义相对于 targetCoordinateSpace 对象坐标系的显示对象区域。",
			"returns": "定义与 targetCoordinateSpace 对象坐标系统相关的显示对象面积的矩形。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "targetCoordinateSpace",
					"type": "egret.DisplayObject",
					"description": "定义要使用的坐标系的显示对象。"
				},
				{
					"name": "resultRect",
					"question": true,
					"type": "egret.Rectangle",
					"description": "一个用于存储结果的可复用Rectangle实例，传入此参数能够减少内部创建对象的次数，从而获得更高的运行性能。"
				}
			],
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "function",
			"type": "egret.Point",
			"name": "globalToLocal",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "将从舞台（全局）坐标转换为显示对象的（本地）坐标。",
			"returns": "具有相对于显示对象的坐标的 Point 对象。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "stageX",
					"type": "number",
					"default": "0",
					"description": "舞台坐标x"
				},
				{
					"name": "stageY",
					"type": "number",
					"default": "0",
					"description": "舞台坐标y"
				},
				{
					"name": "resultPoint",
					"question": true,
					"type": "egret.Point",
					"description": "一个用于存储结果的可复用 Point 实例，传入此参数能够减少内部创建对象的次数，从而获得更高的运行性能。"
				}
			],
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "function",
			"type": "boolean",
			"name": "hitTestPoint",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "计算显示对象，以确定它是否与 x 和 y 参数指定的点重叠或相交。x 和 y 参数指定舞台的坐标空间中的点，而不是包含显示对象的显示对象容器中的点（除非显示对象容器是舞台）。注意，不要在大量物体中使用精确碰撞像素检测，这回带来巨大的性能开销",
			"returns": "如果显示对象与指定的点重叠或相交，则为 true；否则为 false。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "x",
					"type": "number",
					"description": "要测试的此对象的 x 坐标。"
				},
				{
					"name": "y",
					"type": "number",
					"description": "要测试的此对象的 y 坐标。"
				},
				{
					"name": "shapeFlag",
					"question": true,
					"type": "boolean",
					"description": "是检查对象 (true) 的实际像素，还是检查边框 (false) 的实际像素。"
				}
			],
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "invalidateDisplayList",
			"memberof": "eui.UIComponent",
			"scope": "instance",
			"description": "标记需要验证显示列表，以便在稍后屏幕更新期间调用该组件的 updateDisplayList() 方法。<p/>Invalidation 是一个很有用的机制，可将组件更改延迟到稍后屏幕更新时进行处理，从而消除了重复的工作。<p/>例如，要更改宽度和高度，如果在更改宽度后立即更新组件，然后在设置新高度后再次更新组件，就有些浪费。更改两个属性后再使用新的大小一次性呈示组件，效率会更高。<p/>很少调用 Invalidation 方法。通常，在组件上设置属性会自动调用合适的 invalidation 方法。",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "eui.UIComponent"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "invalidateProperties",
			"memberof": "eui.UIComponent",
			"scope": "instance",
			"description": "标记提交过需要延迟应用的属性，以便在稍后屏幕更新期间调用该组件的 commitProperties() 方法。<p/>这是一个很有用的机制，可将组件更改延迟到稍后屏幕更新时进行处理，从而消除了重复的工作。<p/>例如，要更改文本颜色和大小，如果在更改颜色后立即进行更新，然后在设置大小后再更新大小，就有些浪费。同时更改两个属性后再使用新的大小和颜色一次性呈示文本，效率会更高。<p/>很少调用 Invalidation 方法。通常，在组件上设置属性会自动调用合适的 invalidation 方法。",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "eui.UIComponent"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "invalidateSize",
			"memberof": "eui.UIComponent",
			"scope": "instance",
			"description": "标记提交过需要验证组件尺寸，以便在稍后屏幕更新期间调用该组件的 measure() 方法。<p/>Invalidation 是一个很有用的机制，可将组件更改延迟到稍后屏幕更新时进行处理，从而消除了重复的工作。<p/>例如，要更改文本和字体大小，如果在更改文本后立即进行更新，然后在设置大小后再更新大小，就有些浪费。更改两个属性后再使用新的大小一次性呈示文本，效率会更高。<p/>很少调用 Invalidation 方法。通常，在组件上设置属性会自动调用合适的 invalidation 方法。",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "eui.UIComponent"
		},
		{
			"kind": "function",
			"type": "egret.Point",
			"name": "localToGlobal",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "将显示对象的（本地）坐标转换为舞台（全局）坐标。",
			"returns": "一个具有相对于舞台坐标的 Point 对象。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "localX",
					"type": "number",
					"default": "0",
					"description": "本地坐标 x"
				},
				{
					"name": "localY",
					"type": "number",
					"default": "0",
					"description": "本地坐标 y"
				},
				{
					"name": "resultPoint",
					"question": true,
					"type": "egret.Point",
					"description": "一个用于存储结果的可复用 Point 实例，传入此参数能够减少内部创建对象的次数，从而获得更高的运行性能。"
				}
			],
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "removeEventListener",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"inheritDoc": true,
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "type",
					"type": "string",
					"description": ""
				},
				{
					"name": "listener",
					"type": "Function",
					"description": ""
				},
				{
					"name": "thisObject",
					"type": "any",
					"description": ""
				},
				{
					"name": "useCapture",
					"question": true,
					"type": "boolean",
					"description": ""
				}
			],
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "setLayoutBoundsPosition",
			"memberof": "eui.UIComponent",
			"scope": "instance",
			"description": "设置元素在屏幕上进行绘制时所用的布局坐标。<p/>请注意，调用 setLayoutBoundSize() 方法会影响布局位置，因此请在调用 setLayoutBoundSize()之后再调用 setLayoutBoundPosition()。",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"params": [
				{
					"name": "x",
					"type": "number",
					"description": "边框左上角的 X 坐标。"
				},
				{
					"name": "y",
					"type": "number",
					"description": "边框左上角的 Y 坐标。"
				}
			],
			"inherited": true,
			"inherits": "eui.UIComponent"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "setLayoutBoundsSize",
			"memberof": "eui.UIComponent",
			"scope": "instance",
			"description": "设置元素的布局大小。这是元素在屏幕上进行绘制时所用的大小。<p/>如果 width 和/或 height 参数尚未指定 (NaN))，则 EUI 会将该元素的布局大小设置为首选宽度和/或首选高度。<p/>请注意，调用 setLayoutBoundSize() 方法会影响布局位置，因此请在调用 setLayoutBoundSize()之后再调用 setLayoutBoundPosition()。",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"params": [
				{
					"name": "layoutWidth",
					"type": "number",
					"description": "元素的布局宽度。"
				},
				{
					"name": "layoutHeight",
					"type": "number",
					"description": "元素的布局高度。"
				}
			],
			"inherited": true,
			"inherits": "eui.UIComponent"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "setMeasuredSize",
			"memberof": "eui.UIComponent",
			"scope": "instance",
			"description": "设置测量结果。",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"params": [
				{
					"name": "width",
					"type": "number",
					"description": "测量宽度"
				},
				{
					"name": "height",
					"type": "number",
					"description": "测量高度"
				}
			],
			"inherited": true,
			"inherits": "eui.UIComponent"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "validateDisplayList",
			"memberof": "eui.UIComponent",
			"scope": "instance",
			"description": "验证子项的位置和大小，并绘制其他可视内容。",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "eui.UIComponent"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "validateNow",
			"memberof": "eui.UIComponent",
			"scope": "instance",
			"description": "验证并更新此对象的属性和布局，如果需要的话重绘对象。<p/>通常只有当脚本执行完毕后，才会处理要求进行大量计算的处理属性。<p/>例如，对 width 属性的设置可能会延迟，因为此设置需要重新计算这些对象的子项或父项的宽度。如果脚本多次设置了 width 属性，则延迟处理可防止进行多次处理。此方法允许您手动覆盖此行为。",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "eui.UIComponent"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "validateProperties",
			"memberof": "eui.UIComponent",
			"scope": "instance",
			"description": "由布局逻辑用于通过调用 commitProperties() 方法来验证组件的属性。通常，子类应覆盖 commitProperties() 方法，而不是覆盖此方法。",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "eui.UIComponent"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "validateSize",
			"memberof": "eui.UIComponent",
			"scope": "instance",
			"description": "验证组件的尺寸。",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"params": [
				{
					"name": "recursive",
					"question": true,
					"type": "boolean",
					"description": "如果为 true，则调用对象子项的此方法。"
				}
			],
			"inherited": true,
			"inherits": "eui.UIComponent"
		},
		{
			"kind": "function",
			"type": "boolean",
			"name": "willTrigger",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"inheritDoc": true,
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "type",
					"type": "string",
					"description": ""
				}
			],
			"inherited": true,
			"inherits": "egret.DisplayObject"
		}
	],
	"globalMember": [],
	"globalFunction": [],
	"class": {
		"kind": "interface",
		"name": "IItemRenderer",
		"memberof": "eui",
		"filename": "extension\\eui\\core\\IItemRenderer.ts",
		"description": "列表类组件的项呈示器接口。",
		"version": "eui 1.0",
		"platform": "Web,Native",
		"augments": [
			"eui.UIComponent",
			"egret.DisplayObject",
			"egret.EventDispatcher",
			"egret.HashObject"
		],
		"event": [
			{
				"name": "egret.Event.RESIZE",
				"description": "当UI组件的尺寸发生改变时调度",
				"inherited": true,
				"inherits": "eui.UIComponent"
			},
			{
				"name": "eui.UIEvent.MOVE",
				"description": "当UI组件在父级容器中的位置发生改变时调度",
				"inherited": true,
				"inherits": "eui.UIComponent"
			},
			{
				"name": "eui.UIEvent.CREATION_COMPLETE",
				"description": "当UI组件第一次被添加到舞台并完成初始化后调度",
				"inherited": true,
				"inherits": "eui.UIComponent"
			},
			{
				"name": "egret.Event.ADDED",
				"description": "将显示对象添加到显示列表中时调度。",
				"inherited": true,
				"inherits": "egret.DisplayObject"
			},
			{
				"name": "egret.Event.ADDED_TO_STAGE",
				"description": "在将显示对象直接添加到舞台显示列表或将包含显示对象的子树添加至舞台显示列表中时调度。",
				"inherited": true,
				"inherits": "egret.DisplayObject"
			},
			{
				"name": "egret.Event.REMOVED",
				"description": "将要从显示列表中删除显示对象时调度。",
				"inherited": true,
				"inherits": "egret.DisplayObject"
			},
			{
				"name": "egret.Event.REMOVED_FROM_STAGE",
				"description": "在从显示列表中直接删除显示对象或删除包含显示对象的子树时调度。",
				"inherited": true,
				"inherits": "egret.DisplayObject"
			},
			{
				"name": "egret.Event.ENTER_FRAME",
				"description": "[广播事件] 播放头进入新帧时调度。",
				"inherited": true,
				"inherits": "egret.DisplayObject"
			},
			{
				"name": "egret.Event.RENDER",
				"description": "[广播事件] 将要更新和呈现显示列表时调度。",
				"inherited": true,
				"inherits": "egret.DisplayObject"
			},
			{
				"name": "egret.TouchEvent.TOUCH_MOVE",
				"description": "当用户触碰设备时进行调度，而且会连续调度，直到接触点被删除。",
				"inherited": true,
				"inherits": "egret.DisplayObject"
			},
			{
				"name": "egret.TouchEvent.TOUCH_BEGIN",
				"description": "当用户第一次触摸启用触摸的设备时（例如，用手指触摸配有触摸屏的移动电话或平板电脑）调度。",
				"inherited": true,
				"inherits": "egret.DisplayObject"
			},
			{
				"name": "egret.TouchEvent.TOUCH_END",
				"description": "当用户移除与启用触摸的设备的接触时（例如，将手指从配有触摸屏的移动电话或平板电脑上抬起）调度。",
				"inherited": true,
				"inherits": "egret.DisplayObject"
			},
			{
				"name": "egret.TouchEvent.TOUCH_TAP",
				"description": "当用户在启用触摸设备上的已启动接触的同一 DisplayObject 实例上抬起接触点时（例如，在配有触摸屏的移动电话或平板电脑的显示对象上的某一点处按下并释放手指）调度。",
				"inherited": true,
				"inherits": "egret.DisplayObject"
			},
			{
				"name": "egret.TouchEvent.TOUCH_RELEASE_OUTSIDE",
				"description": "当用户在启用触摸设备上的已启动接触的不同 DisplayObject 实例上抬起接触点时（例如，在配有触摸屏的移动电话或平板电脑的显示对象上的某一点处按下并释放手指）调度。",
				"inherited": true,
				"inherits": "egret.DisplayObject"
			}
		]
	}
}
{
	"member": [
		{
			"kind": "member",
			"type": "number",
			"name": "NO_PROPOSED_SELECTION",
			"memberof": "eui.ListBase",
			"scope": "static",
			"description": "未设置缓存选中项的值",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"default": "-2",
			"inherited": true,
			"inherits": "eui.ListBase"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "NO_SELECTION",
			"memberof": "eui.ListBase",
			"scope": "static",
			"description": "未选中任何项时的索引值",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"default": "-1",
			"inherited": true,
			"inherits": "eui.ListBase"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "alpha",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "表示指定对象的 Alpha 透明度值。有效值为 0（完全透明）到 1（完全不透明）。alpha 设置为 0 的显示对象是可触摸的，即使它们不可见。",
			"default": "1",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "anchorOffsetX",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "表示从对象绝对锚点X。",
			"default": "0",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "anchorOffsetY",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "表示从对象绝对锚点Y。",
			"default": "0",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "blendMode",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "BlendMode 枚举中的一个值，用于指定要使用的混合模式，确定如何将一个源（新的）图像绘制到目标（已有）的图像上<br/>如果尝试将此属性设置为无效值，则运行时会将此值设置为 BlendMode.NORMAL。",
			"default": "egret.BlendMode.NORMAL",
			"see": [
				"egret.BlendMode"
			],
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "bottom",
			"memberof": "eui.Group",
			"scope": "instance",
			"inheritDoc": true,
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.Group",
			"description": "距父级容器底部距离。",
			"default": "NaN"
		},
		{
			"kind": "member",
			"type": "boolean",
			"name": "cacheAsBitmap",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "如果设置为 true，则 Egret 运行时将缓存显示对象的内部位图表示形式。此缓存可以提高包含复杂矢量内容的显示对象的性能。将 cacheAsBitmap 属性设置为 true 后，呈现并不更改，但是，显示对象将自动执行像素贴紧。执行速度可能会大大加快，具体取决于显示对象内容的复杂性。最好将 cacheAsBitmap 属性与主要具有静态内容且不频繁缩放或旋转的显示对象一起使用。<br/>注意：在内存超过上限的情况下，即使将 cacheAsBitmap 属性设置为 true，显示对象也不使用位图缓存。",
			"default": "false",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "contentHeight",
			"memberof": "eui.Group",
			"scope": "instance",
			"rwType": 1,
			"copy": "eui.IViewport#contentHeight",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.Group",
			"description": "视域的内容的高度。如果 <code>scrollEnabled</code> 为 true，则视域的 <code>contentHeight</code> 为垂直滚动定义限制，且视域的实际高度定义可见的内容量。要在内容中垂直滚动，请在 0 和 contentHeight - height之间更改 <code>scrollV</code>。"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "contentWidth",
			"memberof": "eui.Group",
			"scope": "instance",
			"rwType": 1,
			"copy": "eui.IViewport#contentWidth",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.Group",
			"description": "视域的内容的宽度。如果 <code>scrollEnabled</code> 为 true， 则视域的 <code>contentWidth</code> 为水平滚动定义限制，且视域的实际宽度定义可见的内容量。要在内容中水平滚动， 请在 0 和 contentWidth - width 之间更改 <code>scrollH</code> 。"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "currentState",
			"memberof": "eui.Group",
			"scope": "instance",
			"copy": "eui.Component#currentState",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.Group",
			"description": "组件的当前视图状态。显式设置此属性，将采用显式设置的值去更新皮肤状态，而忽略组件内部 getCurrentState() 方法返回的值。将其设置为 \"\" 或 null 可将取消组件外部显式设置的视图状态名称，从而采用内部 getCurrentState() 方法返回的状态。"
		},
		{
			"kind": "member",
			"type": "eui.ICollection",
			"name": "dataProvider",
			"memberof": "eui.DataGroup",
			"scope": "instance",
			"description": "列表数据源，请使用实现了ICollection接口的数据类型，例如 ArrayCollection",
			"see": [
				"eui.ICollection",
				"eui.ArrayCollection"
			],
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.DataGroup"
		},
		{
			"kind": "member",
			"type": "egret.DisplayObject[]",
			"name": "elementsContent",
			"memberof": "eui.Group",
			"scope": "instance",
			"rwType": 2,
			"description": "此属性通常在 EXML 的解析器中调用，便于快速添加多个子项。",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.Group"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "explicitHeight",
			"memberof": "eui.Group",
			"scope": "instance",
			"inheritDoc": true,
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.Group",
			"description": "外部显式指定的高度。"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "explicitWidth",
			"memberof": "eui.Group",
			"scope": "instance",
			"inheritDoc": true,
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.Group",
			"description": "外部显式指定的宽度。"
		},
		{
			"kind": "member",
			"type": "(stateName:string)=>boolean",
			"name": "hasState",
			"memberof": "eui.Group",
			"scope": "instance",
			"copy": "eui.Skin#hasState()",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.Group"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "hashCode",
			"memberof": "egret.HashObject",
			"scope": "instance",
			"rwType": 1,
			"description": "返回此对象唯一的哈希值,用于唯一确定一个对象。hashCode为大于等于1的整数。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.HashObject"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "height",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "表示显示对象的高度，以像素为单位。高度是根据显示对象内容的范围来计算的。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "horizontalCenter",
			"memberof": "eui.Group",
			"scope": "instance",
			"inheritDoc": true,
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.Group",
			"description": "在父级容器中距水平中心位置的距离。",
			"default": "NaN"
		},
		{
			"kind": "member",
			"type": "boolean",
			"name": "includeInLayout",
			"memberof": "eui.Group",
			"scope": "instance",
			"inheritDoc": true,
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.Group",
			"description": "指定此组件是否包含在父容器的布局中。若为false，则父级容器在测量和布局阶段都忽略此组件。注意，visible属性与此属性不同，设置visible为false，父级容器仍会对其布局。",
			"default": "true"
		},
		{
			"kind": "member",
			"type": "any",
			"name": "itemRenderer",
			"memberof": "eui.DataGroup",
			"scope": "instance",
			"description": "用于数据项目的项呈示器。您应该直接为此属性赋值自定义类的类定义，而不是一个实例。注意：该类必须实现 IItemRenderer 接口。<br/>rendererClass获取顺序：itemRendererFunction > itemRenderer > 默认ItemRenerer。",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.DataGroup"
		},
		{
			"kind": "member",
			"type": "(item:any)=>any",
			"name": "itemRendererFunction",
			"memberof": "eui.DataGroup",
			"scope": "instance",
			"description": "为某个特定数据项返回一个项呈示器类定义的函数。rendererClass获取顺序：itemRendererFunction > itemRenderer > 默认ItemRenerer。",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.DataGroup"
		},
		{
			"kind": "member",
			"type": "any",
			"name": "itemRendererSkinName",
			"memberof": "eui.DataGroup",
			"scope": "instance",
			"description": "条目渲染器的可选皮肤标识符。在实例化itemRenderer时，若其内部没有设置过skinName,则将此属性的值赋值给它的skinName。注意:若 itemRenderer 不是 Component 的子类，则此属性无效。",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.DataGroup"
		},
		{
			"kind": "member",
			"type": "eui.LayoutBase",
			"name": "layout",
			"memberof": "eui.Group",
			"scope": "instance",
			"description": "此容器的布局对象。s@default eui.BasicLayout",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.Group"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "left",
			"memberof": "eui.Group",
			"scope": "instance",
			"inheritDoc": true,
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.Group",
			"description": "距父级容器离左边距离。",
			"default": "NaN"
		},
		{
			"kind": "member",
			"type": "DisplayObject|Rectangle",
			"name": "mask",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "调用显示对象被指定的 mask 对象遮罩。要确保当舞台缩放时蒙版仍然有效，mask 显示对象必须处于显示列表的活动部分。但不绘制 mask 对象本身。将 mask 设置为 null 可删除蒙版。要能够缩放遮罩对象，它必须在显示列表中。要能够拖动蒙版对象，它必须在显示列表中。<br/>注意：单个 mask 对象不能用于遮罩多个执行调用的显示对象。在将 mask 分配给第二个显示对象时，会撤消其作为第一个对象的遮罩，该对象的 mask 属性将变为 null。下面例子为 mask 为 Rectangle 类型对象，这种情况下，修改 mask 的值后，一定要对 myDisplayObject 重新赋值 mask，不然会出问题。",
			"example": "以下代码改变了显示对象 mask 的 x 属性值：<pre><br/>&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;myMask:Rectangle&nbsp;=&nbsp;myDisplayObject.mask;<br/>&nbsp;&nbsp;&nbsp;&nbsp;myMask.x&nbsp;+=&nbsp;10;<br/>&nbsp;&nbsp;&nbsp;&nbsp;myDisplayObject.mask&nbsp;=&nbsp;myMask;//设置完&nbsp;mask&nbsp;的x、y、width、height值之后，一定要对myDisplayObject重新赋值&nbsp;mask，不然会出问题。<br/></pre>",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "egret.Matrix",
			"name": "matrix",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "一个 Matrix 对象，其中包含更改显示对象的缩放、旋转和平移的值。<br/>注意：要改变一个显示对象矩阵的值，您必引用整个矩阵对象，然后将它重新赋值给显示对象的 matrix 属性。",
			"example": "以下代码改变了显示对象矩阵的tx属性值：<pre><br/>&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;myMatrix:Matrix&nbsp;=&nbsp;myDisplayObject.matrix;<br/>&nbsp;&nbsp;&nbsp;&nbsp;myMatrix.tx&nbsp;+=&nbsp;10;<br/>&nbsp;&nbsp;&nbsp;&nbsp;myDisplayObject.matrix&nbsp;=&nbsp;myMatrix;<br/></pre>",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "maxHeight",
			"memberof": "eui.Group",
			"scope": "instance",
			"inheritDoc": true,
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.Group",
			"description": "组件的最大高度,同时影响测量和自动布局的尺寸。"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "maxWidth",
			"memberof": "eui.Group",
			"scope": "instance",
			"inheritDoc": true,
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.Group",
			"description": "组件的最大高度。同时影响测量和自动布局的尺寸。"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "measuredHeight",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"rwType": 1,
			"description": "测量高度",
			"returns": "",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "measuredWidth",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"rwType": 1,
			"description": "测量宽度",
			"returns": "",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "minHeight",
			"memberof": "eui.Group",
			"scope": "instance",
			"inheritDoc": true,
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.Group",
			"description": "组件的最小高度,此属性设置为大于maxHeight的值时无效。同时影响测量和自动布局的尺寸。"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "minWidth",
			"memberof": "eui.Group",
			"scope": "instance",
			"inheritDoc": true,
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.Group",
			"description": "组件的最小宽度,此属性设置为大于maxWidth的值时无效。同时影响测量和自动布局的尺寸。"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "name",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "表示 DisplayObject 的实例名称。通过调用父显示对象容器的 getChildByName() 方法，可以在父显示对象容器的子列表中标识该对象。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "numChildren",
			"memberof": "egret.DisplayObjectContainer",
			"scope": "instance",
			"rwType": 1,
			"description": "返回此对象的子项数目。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObjectContainer"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "numElements",
			"memberof": "eui.DataGroup",
			"scope": "instance",
			"rwType": 1,
			"inheritDoc": true,
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.DataGroup",
			"description": "布局元素子项的数量。"
		},
		{
			"kind": "member",
			"type": "egret.DisplayObjectContainer",
			"name": "parent",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"rwType": 1,
			"description": "表示包含此显示对象的 DisplayObjectContainer 对象。使用 parent 属性可以指定高于显示列表层次结构中当前显示对象的显示对象的相对路径。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "percentHeight",
			"memberof": "eui.Group",
			"scope": "instance",
			"inheritDoc": true,
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.Group",
			"description": "相对父级容器高度的百分比。",
			"default": "NaN"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "percentWidth",
			"memberof": "eui.Group",
			"scope": "instance",
			"inheritDoc": true,
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.Group",
			"description": "相对父级容器宽度的百分比。",
			"default": "NaN"
		},
		{
			"kind": "member",
			"type": "boolean",
			"name": "requireSelection",
			"memberof": "eui.ListBase",
			"scope": "instance",
			"description": "如果为 true，则控件中必须含有选中的数据项目。如果该值为 true，则始终将 selectedIndex 属性设置为 0 和 (dataProvider.length - 1) 之间的一个值。",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.ListBase"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "right",
			"memberof": "eui.Group",
			"scope": "instance",
			"inheritDoc": true,
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.Group",
			"description": "距父级容器右边距离。",
			"default": "NaN"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "rotation",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "表示 DisplayObject 实例距其原始方向的旋转程度，以度为单位。从 0 到 180 的值表示顺时针方向旋转；从 0 到 -180 的值表示逆时针方向旋转。对于此范围之外的值，可以通过加上或减去 360 获得该范围内的值。例如，myDisplayObject.rotation = 450语句与 myDisplayObject.rotation = 90 是相同的。",
			"default": "0",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "scaleX",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "表示从注册点开始应用的对象的水平缩放比例（百分比）。<br/>1.0 等于 100% 缩放。",
			"default": "1",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "scaleY",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "表示从对象注册点开始应用的对象的垂直缩放比例（百分比）。1.0 是 100% 缩放。",
			"default": "1",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "boolean",
			"name": "scrollEnabled",
			"memberof": "eui.Group",
			"scope": "instance",
			"copy": "eui.IViewport#scrollEnabled",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.Group",
			"description": "是否启用容器滚动。如果为 true，则将子项剪切到视区的边界，配合设置scrollH和scrollV属性将能滚动视区。如果为 false，则容器子代会从容器边界扩展过去，而设置scrollH和scrollV也无效。默认false。",
			"default": "false"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "scrollH",
			"memberof": "eui.Group",
			"scope": "instance",
			"copy": "eui.IViewport#scrollH",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.Group",
			"description": "可视区域水平方向起始点。"
		},
		{
			"kind": "member",
			"type": "egret.Rectangle",
			"name": "scrollRect",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "显示对象的滚动矩形范围。显示对象被裁切为矩形定义的大小，当您更改 scrollRect 对象的 x 和 y 属性时，它会在矩形内滚动。滚动的显示对象始终以整像素为增量进行滚动。您可以通过设置 scrollRect Rectangle 对象的 x 属性来左右滚动对象， 还可以通过设置scrollRect 对象的 y 属性来上下滚动对象。如果显示对象旋转了 90 度，并且您左右滚动它，则实际上显示对象会上下滚动。<br/>注意：要改变一个显示对象 scrollRect 属性的值，您必引用整个 scrollRect 对象，然后将它重新赋值给显示对象的 scrollRect 属性。",
			"example": "以下代码改变了显示对象 scrollRect 的 x 属性值：<pre><br/>&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;myRectangle:Rectangle&nbsp;=&nbsp;myDisplayObject.scrollRect;<br/>&nbsp;&nbsp;&nbsp;&nbsp;myRectangle.x&nbsp;+=&nbsp;10;<br/>&nbsp;&nbsp;&nbsp;&nbsp;myDisplayObject.scrollRect&nbsp;=&nbsp;myRectangle;//设置完scrollRect的x、y、width、height值之后，一定要对myDisplayObject重新赋值scrollRect，不然会出问题。<br/></pre>",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "scrollV",
			"memberof": "eui.Group",
			"scope": "instance",
			"copy": "eui.IViewport#scrollV",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.Group",
			"description": "可视区域竖直方向起始点。"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "selectedIndex",
			"memberof": "eui.ListBase",
			"scope": "instance",
			"description": "选中项目的基于 0 的索引。或者如果未选中项目，则为-1。设置 selectedIndex 属性会取消选择当前选定的项目并选择指定索引位置的数据项目。<p/>这个值会之中在-1到<code>(dataProvider.length&nbsp;-&nbsp;1)</code>之间。如果从该组件中删除一个低于<code>selectedIndex</code>的值，则<code>selectedIndex</code>也会相应的调节选定的索引。<p/>如果删除的项为当前选中项，则该值会变为：<p/><ul>   <li>-1: 如果 <code>requireSelection&nbsp;==&nbsp;false</code> 或者已经没有剩余项目。</li>   <li> 0: 如果 <code>requireSelection&nbsp;==&nbsp;true</code> 并且当前至少还有一个剩余项目。</li></ul><p/>当用户通过与控件交互来更改 selectedIndex 属性时，此控件将分派 change 和 changing 事件。当以编程方式更改 selectedIndex 属性的值时，此控件不分派 change 和 changing 事件。",
			"default": "-1",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.ListBase"
		},
		{
			"kind": "member",
			"type": "any",
			"name": "selectedItem",
			"memberof": "eui.ListBase",
			"scope": "instance",
			"description": "当前已选中的项目。设置此属性会取消选中当前选定的项目并选择新指定的项目。<p/>如果设置的<code>selectedItem</code>不在当前列表里那么<code>selectedItem</code>将被设置为<code>undefined</code>。<p/>如果选择项目被移除，那选择项会被设置为：<p/><ul>  <li><code>undefined</code>: 如果 <code>requireSelection&nbsp;==&nbsp;false</code>    或者已经没有剩余项。</li>  <li>第一项: 当 <code>requireSelection&nbsp;==&nbsp;true</code>    并且列表中还至少存有一项.</li></ul><p/>当用户通过与控件交互来更改 selectedItem 属性时，此控件将分派 change 和 changing 事件。当以编程方式更改 selectedItem 属性的值时，此控件不分派 change 和 changing 事件。<p/>",
			"default": "undefined",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.ListBase"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "skewX",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "表示DisplayObject的x方向斜切",
			"default": "0",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "skewY",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "表示DisplayObject的y方向斜切",
			"default": "0",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "egret.Stage",
			"name": "stage",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"rwType": 1,
			"description": "显示对象的舞台。例如，您可以创建多个显示对象并加载到显示列表中，每个显示对象的 stage 属性是指向相同的 Stage 对象。<br/>如果显示对象未添加到显示列表，则其 stage 属性会设置为 null。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "State[]",
			"name": "states",
			"memberof": "eui.Group",
			"scope": "instance",
			"description": "为此组件定义的视图状态。",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.Group"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "top",
			"memberof": "eui.Group",
			"scope": "instance",
			"inheritDoc": true,
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.Group",
			"description": "距父级容器顶部距离。",
			"default": "NaN"
		},
		{
			"kind": "member",
			"type": "boolean",
			"name": "touchChildren",
			"memberof": "egret.DisplayObjectContainer",
			"scope": "instance",
			"description": "确定对象的子级是否支持触摸或用户输入设备。如果对象支持触摸或用户输入设备，用户可以通过使用触摸或用户输入设备与之交互。",
			"default": "true",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObjectContainer"
		},
		{
			"kind": "member",
			"type": "boolean",
			"name": "touchEnabled",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "指定此对象是否接收触摸或其他用户输入。默认值为 false，这表示默认情况下，显示列表上的任何 DisplayObject 实例都不会接收触摸事件或其他用户输入事件。如果将 touchEnabled 设置为 false，则实例将不接收任何触摸事件（或其他用户输入事件）。显示列表上的该实例的任何子级都不会受到影响。要更改显示列表上对象的所有子级的 touchEnabled 行为，请使用 DisplayObjectContainer.touchChildren。",
			"see": [
				"egret.DisplayObjectContainer#touchChildren"
			],
			"default": "false",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "boolean",
			"name": "touchThrough",
			"memberof": "eui.Group",
			"scope": "instance",
			"description": "触摸组件的背景透明区域是否可以穿透。设置为true表示可以穿透，反之透明区域也会响应触摸事件。默认 false。",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.Group"
		},
		{
			"kind": "member",
			"type": "boolean",
			"name": "useVirtualLayout",
			"memberof": "eui.DataGroup",
			"scope": "instance",
			"copy": "eui.LayoutBase#useVirtualLayout",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.DataGroup",
			"description": "若要配置容器使用虚拟布局，请为与容器关联的布局的 <code>useVirtualLayout</code> 属性设置为 <code>true</code>。只有布局设置为 VerticalLayout、HorizontalLayout 或 TileLayout 的 DataGroup 才支持虚拟布局。不支持虚拟化的布局子类必须禁止更改此属性。",
			"default": "false"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "verticalCenter",
			"memberof": "eui.Group",
			"scope": "instance",
			"inheritDoc": true,
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.Group",
			"description": "在父级容器中距竖直中心位置的距离。",
			"default": "NaN"
		},
		{
			"kind": "member",
			"type": "boolean",
			"name": "visible",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "显示对象是否可见。不可见的显示对象将被禁用。例如，如果实例的 visible 为 false，则无法接受触摸或用户交互操作。",
			"default": "true",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "width",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "表示显示对象的宽度，以像素为单位。宽度是根据显示对象内容的范围来计算的。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "x",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "表示 DisplayObject 实例相对于父级 DisplayObjectContainer 本地坐标的 x 坐标。<br/>如果该对象位于具有变形的 DisplayObjectContainer 内，则它也位于包含 DisplayObjectContainer 的本地坐标系中。因此，对于逆时针旋转 90 度的 DisplayObjectContainer，该 DisplayObjectContainer 的子级将继承逆时针旋转 90 度的坐标系。",
			"default": "0",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "y",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "表示 DisplayObject 实例相对于父级 DisplayObjectContainer 本地坐标的 y 坐标。<br/>如果该对象位于具有变形的 DisplayObjectContainer 内，则它也位于包含 DisplayObjectContainer 的本地坐标系中。因此，对于逆时针旋转 90 度的 DisplayObjectContainer，该 DisplayObjectContainer 的子级将继承逆时针旋转 90 度的坐标系。",
			"default": "0",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		}
	],
	"function": [
		{
			"kind": "function",
			"name": "TabBar",
			"memberof": "eui.TabBar",
			"scope": "instance",
			"description": "构造函数。",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "egret.DisplayObject",
			"name": "addChild",
			"memberof": "egret.DisplayObjectContainer",
			"scope": "instance",
			"description": "将一个 DisplayObject 子实例添加到该 DisplayObjectContainer 实例中。子项将被添加到该 DisplayObjectContainer 实例中其他所有子项的前（上）面。（要将某子项添加到特定索引位置，请使用 addChildAt() 方法。）",
			"returns": "在 child 参数中传递的 DisplayObject 实例。",
			"see": [
				"#addChildAt()"
			],
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "child",
					"type": "egret.DisplayObject",
					"description": "要作为该 DisplayObjectContainer 实例的子项添加的 DisplayObject 实例。"
				}
			],
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObjectContainer"
		},
		{
			"kind": "function",
			"type": "egret.DisplayObject",
			"name": "addChildAt",
			"memberof": "egret.DisplayObjectContainer",
			"scope": "instance",
			"description": "将一个 DisplayObject 子实例添加到该 DisplayObjectContainer 实例中。该子项将被添加到指定的索引位置。索引为 0 表示该DisplayObjectContainer 对象的显示列表的后（底）部。如果添加一个已将其它显示对象容器作为父项的子对象，则会从其它显示对象容器的子列表中删除该对象。",
			"returns": "在 child 参数中传递的 DisplayObject 实例。",
			"see": [
				"#addChild()"
			],
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "child",
					"type": "egret.DisplayObject",
					"description": "要作为该 DisplayObjectContainer 实例的子项添加的 DisplayObject 实例。"
				},
				{
					"name": "index",
					"type": "number",
					"description": "添加该子项的索引位置。 如果指定当前占用的索引位置，则该位置以及所有更高位置上的子对象会在子级列表中上移一个位置。"
				}
			],
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObjectContainer"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "addEventListener",
			"memberof": "egret.EventDispatcher",
			"scope": "instance",
			"inheritDoc": true,
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "type",
					"type": "string",
					"description": "事件的类型。"
				},
				{
					"name": "listener",
					"type": "Function",
					"description": "处理事件的侦听器函数。此函数必须接受 Event 对象作为其唯一的参数，并且不能返回任何结果，如下面的示例所示： function(evt:Event):void 函数可以有任何名称。"
				},
				{
					"name": "thisObject",
					"type": "any",
					"description": "侦听函数绑定的this对象"
				},
				{
					"name": "useCapture",
					"question": true,
					"type": "boolean",
					"description": "确定侦听器是运行于捕获阶段还是运行于冒泡阶段。如果将 useCapture 设置为 true，则侦听器只在捕获阶段处理事件，而不在冒泡阶段处理事件。如果 useCapture 为 false，则侦听器只在冒泡阶段处理事件。要在两个阶段都侦听事件，请调用 on() 两次：一次将 useCapture 设置为 true，一次将 useCapture 设置为 false。"
				},
				{
					"name": "priority",
					"question": true,
					"type": "number",
					"description": "事件侦听器的优先级。优先级由一个带符号的整数指定。数字越大，优先级越高。优先级为 n 的所有侦听器会在优先级为 n -1 的侦听器之前得到处理。如果两个或更多个侦听器共享相同的优先级，则按照它们的添加顺序进行处理。默认优先级为 0。"
				}
			],
			"pType": "public",
			"inherited": true,
			"inherits": "egret.EventDispatcher",
			"description": "使用 EventDispatcher 对象注册事件侦听器对象，以使侦听器能够接收事件通知。可以为特定类型的事件、阶段和优先级在显示列表的所有节点上注册事件侦听器。成功注册一个事件侦听器后，无法通过额外调用 on() 来更改其优先级。要更改侦听器的优先级，必须先调用 removeEventListener()。然后，可以使用新的优先级再次注册该侦听器。注册该侦听器后，如果继续调用具有不同 type 或 useCapture值的 on()，则会创建单独的侦听器注册。<br/>如果不再需要某个事件侦听器，可调用 EventDispatcher.removeEventListener()删除它；否则会产生内存问题。由于垃圾回收器不会删除仍包含引用的对象，因此不会从内存中自动删除使用已注册事件侦听器的对象。复制EventDispatcher 实例时并不复制其中附加的事件侦听器。（如果新近创建的节点需要一个事件侦听器，必须在创建该节点后附加该侦听器。）但是，如果移动 EventDispatcher 实例，则其中附加的事件侦听器也会随之移动。如果在正在处理事件的节点上注册事件侦听器，则不会在当前阶段触发事件侦听器，但会在事件流的稍后阶段触发，如冒泡阶段。如果从正在处理事件的节点中删除事件侦听器，则该事件侦听器仍由当前操作触发。删除事件侦听器后，决不会再次调用该事件侦听器（除非再次注册以备将来处理）。",
			"see": [
				"#once()",
				"#removeEventListener()"
			]
		},
		{
			"kind": "function",
			"type": "boolean",
			"name": "contains",
			"memberof": "egret.DisplayObjectContainer",
			"scope": "instance",
			"description": "确定指定显示对象是 DisplayObjectContainer 实例的子项还是该实例本身。搜索包括整个显示列表（其中包括此 DisplayObjectContainer 实例）。孙项、曾孙项等，每项都返回 true。",
			"returns": "如果指定的显示对象为 DisplayObjectContainer 该实例本身，则返回true，如果指定的显示对象为当前实例子项，则返回false。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "child",
					"type": "egret.DisplayObject",
					"description": "要测试的子对象。"
				}
			],
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObjectContainer"
		},
		{
			"kind": "function",
			"type": "boolean",
			"name": "dispatchEvent",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"inheritDoc": true,
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "event",
					"type": "egret.Event",
					"description": "调度到事件流中的 Event 对象。"
				}
			],
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObject",
			"description": "将事件分派到事件流中。事件目标是对其调用 dispatchEvent() 方法的 EventDispatcher 对象。",
			"returns": "如果成功调度了事件，则值为 true。值 false 表示失败或对事件调用了 preventDefault()。"
		},
		{
			"kind": "function",
			"type": "boolean",
			"name": "dispatchEventWith",
			"memberof": "egret.EventDispatcher",
			"scope": "instance",
			"description": "派发一个指定参数的事件。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "type",
					"type": "string",
					"description": "事件类型"
				},
				{
					"name": "bubbles",
					"question": true,
					"type": "boolean",
					"description": "确定 Event 对象是否参与事件流的冒泡阶段。默认值为 false。"
				},
				{
					"name": "data",
					"question": true,
					"type": "any",
					"description": "事件data"
				}
			],
			"pType": "public",
			"inherited": true,
			"inherits": "egret.EventDispatcher"
		},
		{
			"kind": "function",
			"type": "egret.Rectangle",
			"name": "getBounds",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "获取显示对象的测量边界",
			"returns": "",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "resultRect",
					"question": true,
					"type": "egret.Rectangle",
					"description": "可选参数，传入用于保存结果的Rectangle对象，避免重复创建对象。"
				},
				{
					"name": "calculateAnchor",
					"type": "boolean",
					"default": "true",
					"description": "可选参数，是否会计算锚点。"
				}
			],
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "function",
			"type": "egret.DisplayObject",
			"name": "getChildAt",
			"memberof": "egret.DisplayObjectContainer",
			"scope": "instance",
			"description": "返回位于指定索引处的子显示对象实例。",
			"returns": "位于指定索引位置处的子显示对象。",
			"see": [
				"#getChildByName()"
			],
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "index",
					"type": "number",
					"description": "子对象的索引位置。"
				}
			],
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObjectContainer"
		},
		{
			"kind": "function",
			"type": "egret.DisplayObject",
			"name": "getChildByName",
			"memberof": "egret.DisplayObjectContainer",
			"scope": "instance",
			"description": "返回具有指定名称的子显示对象。如果多个子显示对象具有指定名称，则该方法会返回子级列表中的第一个对象。getChildAt() 方法比 getChildByName() 方法快。getChildAt() 方法从缓存数组中访问子项，而 getChildByName() 方法则必须遍历链接的列表来访问子项。",
			"returns": "具有指定名称的子显示对象。",
			"see": [
				"#getChildAt()",
				"egret.DisplayObject#name"
			],
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "name",
					"type": "string",
					"description": "要返回的子项的名称。"
				}
			],
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObjectContainer"
		},
		{
			"kind": "function",
			"type": "number",
			"name": "getChildIndex",
			"memberof": "egret.DisplayObjectContainer",
			"scope": "instance",
			"description": "返回 DisplayObject 的 child 实例的索引位置。",
			"returns": "要查找的子显示对象的索引位置。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "child",
					"type": "egret.DisplayObject",
					"description": "要测试的子对象。"
				}
			],
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObjectContainer"
		},
		{
			"kind": "function",
			"type": "egret.DisplayObject",
			"name": "getElementAt",
			"memberof": "eui.DataGroup",
			"scope": "instance",
			"inheritDoc": true,
			"version": "eui 1.0",
			"platform": "Web,Native",
			"params": [
				{
					"name": "index",
					"type": "number",
					"description": ""
				}
			],
			"pType": "public",
			"inherited": true,
			"inherits": "eui.DataGroup",
			"description": "获取一个布局元素子项。"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "getLayoutBounds",
			"memberof": "eui.Group",
			"scope": "instance",
			"inheritDoc": true,
			"version": "eui 1.0",
			"platform": "Web,Native",
			"params": [
				{
					"name": "bounds",
					"type": "egret.Rectangle",
					"description": "可以放置结果的<code>egret.Rectangle</code>实例。"
				}
			],
			"pType": "public",
			"inherited": true,
			"inherits": "eui.Group",
			"description": "组件的布局尺寸,常用于父级的<code>updateDisplayList()</code>方法中。<p/>按照：布局尺寸>外部显式设置尺寸>测量尺寸 的优先级顺序返回尺寸。<p/>注意此方法返回值已经包含scale和rotation。"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "getPreferredBounds",
			"memberof": "eui.Group",
			"scope": "instance",
			"inheritDoc": true,
			"version": "eui 1.0",
			"platform": "Web,Native",
			"params": [
				{
					"name": "bounds",
					"type": "egret.Rectangle",
					"description": "可以放置结果的<code>egret.Rectangle</code>实例。"
				}
			],
			"pType": "public",
			"inherited": true,
			"inherits": "eui.Group",
			"description": "获取组件的首选尺寸,常用于父级的<code>measure()</code>方法中。<p/>按照：外部显式设置尺寸>测量尺寸 的优先级顺序返回尺寸。<p/>注意此方法返回值已经包含scale和rotation。"
		},
		{
			"kind": "function",
			"type": "egret.Rectangle",
			"name": "getTransformedBounds",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "返回一个矩形，该矩形定义相对于 targetCoordinateSpace 对象坐标系的显示对象区域。",
			"returns": "定义与 targetCoordinateSpace 对象坐标系统相关的显示对象面积的矩形。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "targetCoordinateSpace",
					"type": "egret.DisplayObject",
					"description": "定义要使用的坐标系的显示对象。"
				},
				{
					"name": "resultRect",
					"question": true,
					"type": "egret.Rectangle",
					"description": "一个用于存储结果的可复用Rectangle实例，传入此参数能够减少内部创建对象的次数，从而获得更高的运行性能。"
				}
			],
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "function",
			"type": "eui.UIComponent",
			"name": "getVirtualElementAt",
			"memberof": "eui.DataGroup",
			"scope": "instance",
			"inheritDoc": true,
			"version": "eui 1.0",
			"platform": "Web,Native",
			"params": [
				{
					"name": "index",
					"type": "number",
					"description": ""
				}
			],
			"pType": "public",
			"inherited": true,
			"inherits": "eui.DataGroup"
		},
		{
			"kind": "function",
			"type": "egret.Point",
			"name": "globalToLocal",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "将从舞台（全局）坐标转换为显示对象的（本地）坐标。",
			"returns": "具有相对于显示对象的坐标的 Point 对象。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "stageX",
					"type": "number",
					"default": "0",
					"description": "舞台坐标x"
				},
				{
					"name": "stageY",
					"type": "number",
					"default": "0",
					"description": "舞台坐标y"
				},
				{
					"name": "resultPoint",
					"question": true,
					"type": "egret.Point",
					"description": "一个用于存储结果的可复用 Point 实例，传入此参数能够减少内部创建对象的次数，从而获得更高的运行性能。"
				}
			],
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "function",
			"type": "boolean",
			"name": "hasEventListener",
			"memberof": "egret.EventDispatcher",
			"scope": "instance",
			"inheritDoc": true,
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "type",
					"type": "string",
					"description": "事件的类型。"
				}
			],
			"pType": "public",
			"inherited": true,
			"inherits": "egret.EventDispatcher",
			"description": "检查 EventDispatcher 对象是否为特定事件类型注册了任何侦听器。这样，您就可以确定 EventDispatcher 对象在事件流层次结构中的哪个位置改变了对事件类型的处理。要确定特定事件类型是否确实会触发事件侦听器，请使用 IEventDispatcher.willTrigger()。hasEventListener()与 willTrigger() 的区别是：hasEventListener() 只检查它所属的对象，而 willTrigger() 检查整个事件流以查找由 type 参数指定的事件。",
			"returns": "如果指定类型的侦听器已注册，则值为 true；否则，值为 false。",
			"see": [
				"#willTrigger()"
			]
		},
		{
			"kind": "function",
			"type": "boolean",
			"name": "hitTestPoint",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "计算显示对象，以确定它是否与 x 和 y 参数指定的点重叠或相交。x 和 y 参数指定舞台的坐标空间中的点，而不是包含显示对象的显示对象容器中的点（除非显示对象容器是舞台）。注意，不要在大量物体中使用精确碰撞像素检测，这回带来巨大的性能开销",
			"returns": "如果显示对象与指定的点重叠或相交，则为 true；否则为 false。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "x",
					"type": "number",
					"description": "要测试的此对象的 x 坐标。"
				},
				{
					"name": "y",
					"type": "number",
					"description": "要测试的此对象的 y 坐标。"
				},
				{
					"name": "shapeFlag",
					"question": true,
					"type": "boolean",
					"description": "是检查对象 (true) 的实际像素，还是检查边框 (false) 的实际像素。"
				}
			],
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "invalidateDisplayList",
			"memberof": "eui.Group",
			"scope": "instance",
			"inheritDoc": true,
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.Group",
			"description": "标记需要验证显示列表，以便在稍后屏幕更新期间调用该组件的 updateDisplayList() 方法。<p/>Invalidation 是一个很有用的机制，可将组件更改延迟到稍后屏幕更新时进行处理，从而消除了重复的工作。<p/>例如，要更改宽度和高度，如果在更改宽度后立即更新组件，然后在设置新高度后再次更新组件，就有些浪费。更改两个属性后再使用新的大小一次性呈示组件，效率会更高。<p/>很少调用 Invalidation 方法。通常，在组件上设置属性会自动调用合适的 invalidation 方法。"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "invalidateProperties",
			"memberof": "eui.Group",
			"scope": "instance",
			"inheritDoc": true,
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.Group",
			"description": "标记提交过需要延迟应用的属性，以便在稍后屏幕更新期间调用该组件的 commitProperties() 方法。<p/>这是一个很有用的机制，可将组件更改延迟到稍后屏幕更新时进行处理，从而消除了重复的工作。<p/>例如，要更改文本颜色和大小，如果在更改颜色后立即进行更新，然后在设置大小后再更新大小，就有些浪费。同时更改两个属性后再使用新的大小和颜色一次性呈示文本，效率会更高。<p/>很少调用 Invalidation 方法。通常，在组件上设置属性会自动调用合适的 invalidation 方法。"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "invalidateSize",
			"memberof": "eui.DataGroup",
			"scope": "instance",
			"inheritDoc": true,
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.DataGroup",
			"description": "标记提交过需要验证组件尺寸，以便在稍后屏幕更新期间调用该组件的 measure() 方法。<p/>Invalidation 是一个很有用的机制，可将组件更改延迟到稍后屏幕更新时进行处理，从而消除了重复的工作。<p/>例如，要更改文本和字体大小，如果在更改文本后立即进行更新，然后在设置大小后再更新大小，就有些浪费。更改两个属性后再使用新的大小一次性呈示文本，效率会更高。<p/>很少调用 Invalidation 方法。通常，在组件上设置属性会自动调用合适的 invalidation 方法。"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "invalidateState",
			"memberof": "eui.Group",
			"scope": "instance",
			"copy": "eui.Component#invalidateState()",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.Group",
			"description": "标记组件当前的视图状态失效，调用此方法后，子类应该覆盖 <code>getCurrentState()</code> 方法来返回当前的视图状态名称。"
		},
		{
			"kind": "function",
			"type": "egret.Point",
			"name": "localToGlobal",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"description": "将显示对象的（本地）坐标转换为舞台（全局）坐标。",
			"returns": "一个具有相对于舞台坐标的 Point 对象。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "localX",
					"type": "number",
					"default": "0",
					"description": "本地坐标 x"
				},
				{
					"name": "localY",
					"type": "number",
					"default": "0",
					"description": "本地坐标 y"
				},
				{
					"name": "resultPoint",
					"question": true,
					"type": "egret.Point",
					"description": "一个用于存储结果的可复用 Point 实例，传入此参数能够减少内部创建对象的次数，从而获得更高的运行性能。"
				}
			],
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObject"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "once",
			"memberof": "egret.EventDispatcher",
			"scope": "instance",
			"inheritDoc": true,
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "type",
					"type": "string",
					"description": "事件的类型。"
				},
				{
					"name": "listener",
					"type": "Function",
					"description": "处理事件的侦听器函数。此函数必须接受 Event 对象作为其唯一的参数，并且不能返回任何结果，如下面的示例所示： function(evt:Event):void 函数可以有任何名称。"
				},
				{
					"name": "thisObject",
					"type": "any",
					"description": "侦听函数绑定的this对象"
				},
				{
					"name": "useCapture",
					"question": true,
					"type": "boolean",
					"description": "确定侦听器是运行于捕获阶段还是运行于冒泡阶段。如果将 useCapture 设置为 true，则侦听器只在捕获阶段处理事件，而不在冒泡阶段处理事件。如果 useCapture 为 false，则侦听器只在冒泡阶段处理事件。要在两个阶段都侦听事件，请调用 once() 两次：一次将 useCapture 设置为 true，一次将 useCapture 设置为 false。"
				},
				{
					"name": "priority",
					"question": true,
					"type": "number",
					"description": "事件侦听器的优先级。优先级由一个带符号整数指定。数字越大，优先级越高。优先级为 n 的所有侦听器会在优先级为 n -1 的侦听器之前得到处理。如果两个或更多个侦听器共享相同的优先级，则按照它们的添加顺序进行处理。默认优先级为 0。"
				}
			],
			"pType": "public",
			"inherited": true,
			"inherits": "egret.EventDispatcher",
			"description": "添加仅回调一次的事件侦听器，此方法与on()方法不同，on()方法会持续产生回调，而此方法在第一次回调时就会自动移除监听。",
			"see": [
				"#on()",
				"#removeEventListener()"
			]
		},
		{
			"kind": "function",
			"type": "egret.DisplayObject",
			"name": "removeChild",
			"memberof": "egret.DisplayObjectContainer",
			"scope": "instance",
			"description": "从 DisplayObjectContainer 实例的子列表中删除指定的 child DisplayObject 实例。将已删除子项的 parent 属性设置为 null；如果不存在对该子项的任何其它引用，则将该对象作为垃圾回收。DisplayObjectContainer 中该子项之上的任何显示对象的索引位置都减去 1。",
			"returns": "在 child 参数中传递的 DisplayObject 实例。",
			"see": [
				"#removeChildAt()"
			],
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "child",
					"type": "egret.DisplayObject",
					"description": "要删除的 DisplayObject 实例。"
				}
			],
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObjectContainer"
		},
		{
			"kind": "function",
			"type": "egret.DisplayObject",
			"name": "removeChildAt",
			"memberof": "egret.DisplayObjectContainer",
			"scope": "instance",
			"description": "从 DisplayObjectContainer 的子列表中指定的 index 位置删除子 DisplayObject。将已删除子项的 parent 属性设置为 null；如果没有对该子项的任何其他引用，则将该对象作为垃圾回收。DisplayObjectContainer 中该子项之上的任何显示对象的索引位置都减去 1。",
			"returns": "已删除的 DisplayObject 实例。",
			"see": [
				"#removeChild()"
			],
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "index",
					"type": "number",
					"description": "要删除的 DisplayObject 的子索引。"
				}
			],
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObjectContainer"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "removeChildren",
			"memberof": "egret.DisplayObjectContainer",
			"scope": "instance",
			"description": "从 DisplayObjectContainer 实例的子级列表中删除所有 child DisplayObject 实例。",
			"see": [
				"#removeChild()",
				"#removeChildAt()"
			],
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObjectContainer"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "removeEventListener",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"inheritDoc": true,
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "type",
					"type": "string",
					"description": "事件的类型。"
				},
				{
					"name": "listener",
					"type": "Function",
					"description": "要删除的侦听器对象"
				},
				{
					"name": "thisObject",
					"type": "any",
					"description": "侦听函数绑定的this对象"
				},
				{
					"name": "useCapture",
					"question": true,
					"type": "boolean",
					"description": "指出是为捕获阶段还是为冒泡阶段注册了侦听器。如果为捕获阶段以及冒泡阶段注册了侦听器，则需要对removeEventListener() 进行两次调用才能将这两个侦听器删除：一次调用将 useCapture 设置为 true，另一次调用将 useCapture 设置为 false。。"
				}
			],
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObject",
			"description": "从 EventDispatcher 对象中删除侦听器。如果没有向 EventDispatcher 对象注册任何匹配的侦听器，则对此方法的调用没有任何效果。"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "setChildIndex",
			"memberof": "egret.DisplayObjectContainer",
			"scope": "instance",
			"description": "更改现有子项在显示对象容器中的位置。这会影响子对象的分层。",
			"see": [
				"#addChildAt()",
				"#getChildAt()"
			],
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "child",
					"type": "egret.DisplayObject",
					"description": "要为其更改索引编号的 DisplayObject 子实例。"
				},
				{
					"name": "index",
					"type": "number",
					"description": "生成的 child 显示对象的索引编号。当新的索引编号小于0或大于已有子元件数量时，新加入的DisplayObject对象将会放置于最上层。"
				}
			],
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObjectContainer"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "setContentSize",
			"memberof": "eui.Group",
			"scope": "instance",
			"description": "设置 <code>contentWidth</code> 和 <code>contentHeight</code> 属性。此方法由布局来调用，开发者应该在布局类的 <code>updateDisplayList()</code> 方法中对其进行调用。",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"params": [
				{
					"name": "width",
					"type": "number",
					"description": "<code>contentWidth</code> 的新值。"
				},
				{
					"name": "height",
					"type": "number",
					"description": "<code>contentHeight</code> 的新值。"
				}
			],
			"pType": "public",
			"inherited": true,
			"inherits": "eui.Group"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "setLayoutBoundsPosition",
			"memberof": "eui.Group",
			"scope": "instance",
			"inheritDoc": true,
			"version": "eui 1.0",
			"platform": "Web,Native",
			"params": [
				{
					"name": "x",
					"type": "number",
					"description": "边框左上角的 X 坐标。"
				},
				{
					"name": "y",
					"type": "number",
					"description": "边框左上角的 Y 坐标。"
				}
			],
			"pType": "public",
			"inherited": true,
			"inherits": "eui.Group",
			"description": "设置元素在屏幕上进行绘制时所用的布局坐标。<p/>请注意，调用 setLayoutBoundSize() 方法会影响布局位置，因此请在调用 setLayoutBoundSize()之后再调用 setLayoutBoundPosition()。"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "setLayoutBoundsSize",
			"memberof": "eui.Group",
			"scope": "instance",
			"inheritDoc": true,
			"version": "eui 1.0",
			"platform": "Web,Native",
			"params": [
				{
					"name": "layoutWidth",
					"type": "number",
					"description": "元素的布局宽度。"
				},
				{
					"name": "layoutHeight",
					"type": "number",
					"description": "元素的布局高度。"
				}
			],
			"pType": "public",
			"inherited": true,
			"inherits": "eui.Group",
			"description": "设置元素的布局大小。这是元素在屏幕上进行绘制时所用的大小。<p/>如果 width 和/或 height 参数尚未指定 (NaN))，则 EUI 会将该元素的布局大小设置为首选宽度和/或首选高度。<p/>请注意，调用 setLayoutBoundSize() 方法会影响布局位置，因此请在调用 setLayoutBoundSize()之后再调用 setLayoutBoundPosition()。"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "setMeasuredSize",
			"memberof": "eui.Group",
			"scope": "instance",
			"inheritDoc": true,
			"version": "eui 1.0",
			"platform": "Web,Native",
			"params": [
				{
					"name": "width",
					"type": "number",
					"description": "测量宽度"
				},
				{
					"name": "height",
					"type": "number",
					"description": "测量高度"
				}
			],
			"pType": "public",
			"inherited": true,
			"inherits": "eui.Group",
			"description": "设置测量结果。"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "setVirtualElementIndicesInView",
			"memberof": "eui.DataGroup",
			"scope": "instance",
			"inheritDoc": true,
			"version": "eui 1.0",
			"platform": "Web,Native",
			"params": [
				{
					"name": "startIndex",
					"type": "number",
					"description": "可视元素起始索引（包括）"
				},
				{
					"name": "endIndex",
					"type": "number",
					"description": "可视元素结束索引（包括）"
				}
			],
			"pType": "public",
			"inherited": true,
			"inherits": "eui.DataGroup",
			"description": "在支持虚拟布局的容器中，设置容器内可见的子元素索引范围。此方法在不支持虚拟布局的容器中无效。通常在即将重新布局子项之前会被调用一次，容器覆盖此方法提前释放已经不可见的子元素。"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "swapChildren",
			"memberof": "egret.DisplayObjectContainer",
			"scope": "instance",
			"description": "交换两个指定子对象的 Z 轴顺序（从前到后顺序）。显示对象容器中所有其他子对象的索引位置保持不变。",
			"see": [
				"#swapChildrenAt()"
			],
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "child1",
					"type": "egret.DisplayObject",
					"description": "第一个子对象。"
				},
				{
					"name": "child2",
					"type": "egret.DisplayObject",
					"description": "第二个子对象。"
				}
			],
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObjectContainer"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "swapChildrenAt",
			"memberof": "egret.DisplayObjectContainer",
			"scope": "instance",
			"description": "在子级列表中两个指定的索引位置，交换子对象的 Z 轴顺序（前后顺序）。显示对象容器中所有其他子对象的索引位置保持不变。",
			"see": [
				"#swapChildren()"
			],
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "index1",
					"type": "number",
					"description": "第一个子对象的索引位置。"
				},
				{
					"name": "index2",
					"type": "number",
					"description": "第二个子对象的索引位置。"
				}
			],
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObjectContainer"
		},
		{
			"kind": "function",
			"type": "eui.IItemRenderer",
			"name": "updateRenderer",
			"memberof": "eui.ListBase",
			"scope": "instance",
			"description": "更新项呈示器，以备使用或重用",
			"version": "eui 1.0",
			"platform": "Web,Native",
			"params": [
				{
					"name": "renderer",
					"type": "eui.IItemRenderer",
					"description": ""
				},
				{
					"name": "itemIndex",
					"type": "number",
					"description": ""
				},
				{
					"name": "data",
					"type": "any",
					"description": ""
				}
			],
			"pType": "public",
			"inherited": true,
			"inherits": "eui.ListBase"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "validateDisplayList",
			"memberof": "eui.Group",
			"scope": "instance",
			"inheritDoc": true,
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.Group",
			"description": "验证子项的位置和大小，并绘制其他可视内容。"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "validateNow",
			"memberof": "eui.Group",
			"scope": "instance",
			"inheritDoc": true,
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.Group",
			"description": "验证并更新此对象的属性和布局，如果需要的话重绘对象。<p/>通常只有当脚本执行完毕后，才会处理要求进行大量计算的处理属性。<p/>例如，对 width 属性的设置可能会延迟，因为此设置需要重新计算这些对象的子项或父项的宽度。如果脚本多次设置了 width 属性，则延迟处理可防止进行多次处理。此方法允许您手动覆盖此行为。"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "validateProperties",
			"memberof": "eui.Group",
			"scope": "instance",
			"inheritDoc": true,
			"version": "eui 1.0",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "eui.Group",
			"description": "由布局逻辑用于通过调用 commitProperties() 方法来验证组件的属性。通常，子类应覆盖 commitProperties() 方法，而不是覆盖此方法。"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "validateSize",
			"memberof": "eui.Group",
			"scope": "instance",
			"inheritDoc": true,
			"version": "eui 1.0",
			"platform": "Web,Native",
			"params": [
				{
					"name": "recursive",
					"question": true,
					"type": "boolean",
					"description": "如果为 true，则调用对象子项的此方法。"
				}
			],
			"pType": "public",
			"inherited": true,
			"inherits": "eui.Group",
			"description": "验证组件的尺寸。"
		},
		{
			"kind": "function",
			"type": "boolean",
			"name": "willTrigger",
			"memberof": "egret.DisplayObject",
			"scope": "instance",
			"inheritDoc": true,
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "type",
					"type": "string",
					"description": "事件类型"
				}
			],
			"pType": "public",
			"inherited": true,
			"inherits": "egret.DisplayObject",
			"description": "检查是否用此 EventDispatcher 对象或其任何始祖为指定事件类型注册了事件侦听器。将指定类型的事件调度给此EventDispatcher 对象或其任一后代时，如果在事件流的任何阶段触发了事件侦听器，则此方法返回 true。hasEventListener() 与 willTrigger() 方法的区别是：hasEventListener() 只检查它所属的对象，而 willTrigger() 方法检查整个事件流以查找由 type 参数指定的事件。",
			"returns": "是否注册过监听器，如果注册过返回true，反之返回false",
			"see": [
				"#hasEventListener()"
			]
		}
	],
	"globalMember": [],
	"globalFunction": [],
	"class": {
		"kind": "class",
		"name": "TabBar",
		"memberof": "eui",
		"filename": "../../../Egret/egret-core/egret-core-master/src/extension/eui/components/TabBar.ts",
		"description": "TabBar 类显示一组相同的选项卡。一次可以选择一个选项卡，且默认情况下选择第一个选项卡。<p>该组选项卡由 <code>dataProvider</code> 属性定义。每个选项卡的外观由 <code>ItemRenderer</code> 定义。</p><p>可以使用 TabBar 控件设置 ViewStack 容器的活动子代，如下例所示：</p><pre><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;s:TabBar&nbsp;dataProvider=&quot;{viewStack}&quot;/&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;s:ViewStack&nbsp;id=&quot;viewStack&quot;&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;s:Group&nbsp;name=&quot;tab1&quot;/&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;s:Group&nbsp;name=&quot;tab2&quot;/&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;s:Group&nbsp;name=&quot;tab3&quot;/&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/s:ViewStack&gt;<br/></pre>",
		"version": "eui 1.0",
		"platform": "Web,Native",
		"example": "<pre>class&nbsp;TabBarExample&nbsp;extends&nbsp;egret.Sprite&nbsp;{<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;constructor()&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;super();<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;exml&nbsp;=<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`&lt;e:Group&nbsp;xmlns:e=&quot;http://ns.egret.com/eui&quot;&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;e:TabBar&nbsp;dataProvider=&quot;{viewStack}&quot;&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;e:layout&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;e:HorizontalLayout&nbsp;gap=&quot;20&quot;/&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/e:layout&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;e:itemRendererSkinName&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;e:Skin&nbsp;states=&quot;up,down&quot;&nbsp;height=&quot;50&quot;&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;e:Label&nbsp;text=&quot;{data}&quot;&nbsp;textColor.down=&quot;0xFFFFFF&quot;&nbsp;textColor.up=&quot;0x666666&quot;&nbsp;horizontalCenter=&quot;0&quot;&nbsp;verticalCenter=&quot;0&quot;/&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/e:Skin&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/e:itemRendererSkinName&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/e:TabBar&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;e:ViewStack&nbsp;y=&quot;50&quot;&nbsp;id=&quot;viewStack&quot;&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;e:Group&nbsp;name=&quot;tab1&quot;&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;e:Label&nbsp;text=&quot;TestPanel1&quot;&nbsp;x=&quot;50&quot;&nbsp;y=&quot;50&quot;/&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/e:Group&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;e:Group&nbsp;name=&quot;tab2&quot;&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;e:Label&nbsp;text=&quot;TestPanel2&quot;&nbsp;x=&quot;50&quot;&nbsp;y=&quot;50&quot;/&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/e:Group&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/e:ViewStack&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/e:Group&gt;`;<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;clazz&nbsp;=&nbsp;EXML.parse(exml);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;group&nbsp;=&nbsp;new&nbsp;clazz();<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.addChild(group);<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/>}<br/></pre>",
		"augments": [
			"eui.ListBase",
			"eui.DataGroup",
			"eui.Group",
			"egret.DisplayObjectContainer",
			"egret.DisplayObject",
			"egret.EventDispatcher",
			"egret.HashObject"
		],
		"event": [
			{
				"name": "egret.Event.CHANGE",
				"description": "选中的索引已经发生改变,注意：此事件仅在索引改变是由用户触摸操作引起时才抛出。",
				"inherited": true,
				"inherits": "eui.ListBase"
			},
			{
				"name": "egret.Event.CHANGING",
				"description": "选中的索引即将发生改变，可以通过调用事件对象的 preventDefault() 方法来阻止改变。<p/>注意：此事件仅在索引改变是由用户触摸操作引起时才抛出。",
				"inherited": true,
				"inherits": "eui.ListBase"
			},
			{
				"name": "eui.ItemTapEvent.ITEM_TAP",
				"description": "项呈示器单击事件。",
				"inherited": true,
				"inherits": "eui.ListBase"
			},
			{
				"name": "egret.TouchEvent.TOUCH_CANCEL",
				"description": "取消触摸事件",
				"inherited": true,
				"inherits": "eui.ListBase"
			},
			{
				"name": "egret.Event.RESIZE",
				"description": "当UI组件的尺寸发生改变时调度",
				"inherited": true,
				"inherits": "eui.UIComponent"
			},
			{
				"name": "eui.UIEvent.MOVE",
				"description": "当UI组件在父级容器中的位置发生改变时调度",
				"inherited": true,
				"inherits": "eui.UIComponent"
			},
			{
				"name": "eui.UIEvent.CREATION_COMPLETE",
				"description": "当UI组件第一次被添加到舞台并完成初始化后调度",
				"inherited": true,
				"inherits": "eui.UIComponent"
			},
			{
				"name": "egret.Event.ADDED",
				"description": "将显示对象添加到显示列表中时调度。",
				"inherited": true,
				"inherits": "egret.DisplayObject"
			},
			{
				"name": "egret.Event.ADDED_TO_STAGE",
				"description": "在将显示对象直接添加到舞台显示列表或将包含显示对象的子树添加至舞台显示列表中时调度。",
				"inherited": true,
				"inherits": "egret.DisplayObject"
			},
			{
				"name": "egret.Event.REMOVED",
				"description": "将要从显示列表中删除显示对象时调度。",
				"inherited": true,
				"inherits": "egret.DisplayObject"
			},
			{
				"name": "egret.Event.REMOVED_FROM_STAGE",
				"description": "在从显示列表中直接删除显示对象或删除包含显示对象的子树时调度。",
				"inherited": true,
				"inherits": "egret.DisplayObject"
			},
			{
				"name": "egret.Event.ENTER_FRAME",
				"description": "[广播事件] 播放头进入新帧时调度。",
				"inherited": true,
				"inherits": "egret.DisplayObject"
			},
			{
				"name": "egret.Event.RENDER",
				"description": "[广播事件] 将要更新和呈现显示列表时调度。",
				"inherited": true,
				"inherits": "egret.DisplayObject"
			},
			{
				"name": "egret.TouchEvent.TOUCH_MOVE",
				"description": "当用户触碰设备时进行调度，而且会连续调度，直到接触点被删除。",
				"inherited": true,
				"inherits": "egret.DisplayObject"
			},
			{
				"name": "egret.TouchEvent.TOUCH_BEGIN",
				"description": "当用户第一次触摸启用触摸的设备时（例如，用手指触摸配有触摸屏的移动电话或平板电脑）调度。",
				"inherited": true,
				"inherits": "egret.DisplayObject"
			},
			{
				"name": "egret.TouchEvent.TOUCH_END",
				"description": "当用户移除与启用触摸的设备的接触时（例如，将手指从配有触摸屏的移动电话或平板电脑上抬起）调度。",
				"inherited": true,
				"inherits": "egret.DisplayObject"
			},
			{
				"name": "egret.TouchEvent.TOUCH_TAP",
				"description": "当用户在启用触摸设备上的已启动接触的同一 DisplayObject 实例上抬起接触点时（例如，在配有触摸屏的移动电话或平板电脑的显示对象上的某一点处按下并释放手指）调度。",
				"inherited": true,
				"inherits": "egret.DisplayObject"
			},
			{
				"name": "egret.TouchEvent.TOUCH_RELEASE_OUTSIDE",
				"description": "当用户在启用触摸设备上的已启动接触的不同 DisplayObject 实例上抬起接触点时（例如，在配有触摸屏的移动电话或平板电脑的显示对象上的某一点处按下并释放手指）调度。",
				"inherited": true,
				"inherits": "egret.DisplayObject"
			}
		],
		"defaultProperty": {
			"name": "dataProvider",
			"inherited": true,
			"inherits": "eui.DataGroup"
		}
	}
}
{
	"member": [
		{
			"kind": "member",
			"type": "string",
			"name": "ACTIVATE",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "游戏激活",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"default": "\"activate\"",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "ADDED",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "将显示对象添加到显示列表中时调度。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"default": "\"added\"",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "ADDED_TO_STAGE",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "在将显示对象直接添加到舞台显示列表或将包含显示对象的子树添加至舞台显示列表中时调度。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"default": "\"addedToStage\"",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "CHANGE",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "属性值或状态发生改变。通常是按钮的选中状态，或者列表的选中项索引改变。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"default": "\"change\"",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "CHANGING",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "属性值或状态即将发生改变,通常是按钮的选中状态，或者列表的选中项索引改变。可以通过调用 preventDefault() 方法阻止索引发生更改。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"default": "\"changing\"",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "CLOSE",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "Event.CLOSE 常量定义 close 事件对象的 type 属性的值。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"default": "\"close\"",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "COMPLETE",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "网络请求加载完成",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"default": "\"complete\"",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "CONNECT",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "Event.CONNECT 常量定义 connect 事件对象的 type 属性的值。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"default": "\"connect\"",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "DEACTIVATE",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "取消激活",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"default": "\"deactivate\"",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "ENDED",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "动画声音等播放完成",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"default": "\"ended\"",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "ENTER_FRAME",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "[广播事件] 进入新的一帧,监听此事件将会在下一帧开始时触发一次回调。这是一个广播事件，可以在任何一个显示对象上监听，无论它是否在显示列表中。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"default": "\"enterFrame\"",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "FOCUS_IN",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "TextInput实例获得焦点",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"default": "\"focusIn\"",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "FOCUS_OUT",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "TextInput实例失去焦点",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"default": "\"focusOut\"",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "LEAVE_STAGE",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "Event.LEAVE_STAGE 常量定义 leaveStage 事件对象的 type 属性的值。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"default": "\"leaveStage\"",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "LOOP_COMPLETE",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "循环完成",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"default": "\"loopComplete\"",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "REMOVED",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "将要从显示列表中删除显示对象时调度。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"default": "\"removed\"",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "REMOVED_FROM_STAGE",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "在从显示列表中直接删除显示对象或删除包含显示对象的子树时调度。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"default": "\"removedFromStage\"",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "RENDER",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "渲染事件，监听此事件将会在本帧末即将开始渲染的前一刻触发回调，这是一个广播事件，可以在任何一个显示对象上监听，无论它是否在显示列表中。注意：每次您希望 Egret 发送 Event.RENDER 事件时，都必须调用 stage.invalidate() 方法，由于每帧只会触发一次屏幕刷新，若在 Event.RENDER 回调函数执行期间再次调用stage.invalidate()，将会被忽略。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"default": "\"render\"",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "RESIZE",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "舞台尺寸或UI组件尺寸发生改变",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"default": "\"resize\"",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "SOUND_COMPLETE",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "Event.SOUND_COMPLETE 常量定义 在声音完成播放后调度。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"default": "\"soundComplete\"",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "TOUCH_BEGIN",
			"memberof": "egret.TouchEvent",
			"scope": "static",
			"description": "当用户第一次触摸启用触摸的设备时（例如，用手指触摸配有触摸屏的移动电话或平板电脑）调度。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"default": "\"touchBegin\""
		},
		{
			"kind": "member",
			"type": "string",
			"name": "TOUCH_CANCEL",
			"memberof": "egret.TouchEvent",
			"scope": "static",
			"description": "由于某个事件取消了触摸时触发。比如 eui.Scroller 在开始滚动后会触发 'TOUCH_CANCEL' 事件，不再触发后续的 'TOUCH_END' 和 'TOUCH_TAP' 事件",
			"version": "Egret 3.0.1",
			"platform": "Web,Native",
			"default": "\"touchcancel\""
		},
		{
			"kind": "member",
			"type": "string",
			"name": "TOUCH_END",
			"memberof": "egret.TouchEvent",
			"scope": "static",
			"description": "当用户移除与启用触摸的设备的接触时（例如，将手指从配有触摸屏的移动电话或平板电脑上抬起）调度。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"default": "\"touchEnd\""
		},
		{
			"kind": "member",
			"type": "string",
			"name": "TOUCH_MOVE",
			"memberof": "egret.TouchEvent",
			"scope": "static",
			"description": "当用户触碰设备时进行调度，而且会连续调度，直到接触点被删除。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"default": "\"touchMove\""
		},
		{
			"kind": "member",
			"type": "string",
			"name": "TOUCH_RELEASE_OUTSIDE",
			"memberof": "egret.TouchEvent",
			"scope": "static",
			"description": "当用户在触摸设备上与开始触摸的不同 DisplayObject 实例上抬起接触点时调度。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"default": "\"touchReleaseOutside\""
		},
		{
			"kind": "member",
			"type": "string",
			"name": "TOUCH_ROLL_OUT",
			"memberof": "egret.TouchEvent",
			"scope": "static",
			"deprecated": true,
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"default": "\"touchRollOut\""
		},
		{
			"kind": "member",
			"type": "string",
			"name": "TOUCH_ROLL_OVER",
			"memberof": "egret.TouchEvent",
			"scope": "static",
			"deprecated": true,
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"default": "\"touchRollOver\""
		},
		{
			"kind": "member",
			"type": "string",
			"name": "TOUCH_TAP",
			"memberof": "egret.TouchEvent",
			"scope": "static",
			"description": "当用户在触摸设备上与开始触摸的同一 DisplayObject 实例上抬起接触点时调度。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"default": "\"touchTap\""
		},
		{
			"kind": "member",
			"type": "boolean",
			"name": "bubbles",
			"memberof": "egret.Event",
			"scope": "instance",
			"rwType": 1,
			"description": "表示事件是否为冒泡事件。如果事件可以冒泡，则此值为 true；否则为 false。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "boolean",
			"name": "cancelable",
			"memberof": "egret.Event",
			"scope": "instance",
			"rwType": 1,
			"description": "表示是否可以阻止与事件相关联的行为。如果可以取消该行为，则此值为 true；否则为 false。",
			"see": [
				"#preventDefault()"
			],
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "any",
			"name": "currentTarget",
			"memberof": "egret.Event",
			"scope": "instance",
			"rwType": 1,
			"description": "当前正在使用某个事件侦听器处理 Event 对象的对象。例如，如果用户单击“确定”按钮，则当前目标可以是包含该按钮的节点，也可以是它的已为该事件注册了事件侦听器的始祖之一。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "any",
			"name": "data",
			"memberof": "egret.Event",
			"scope": "instance",
			"description": "与此事件对象关联的可选数据。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "eventPhase",
			"memberof": "egret.Event",
			"scope": "instance",
			"rwType": 1,
			"description": "事件流中的当前阶段。此属性可以包含以下数值：捕获阶段 (EventPhase.CAPTURING_PHASE)。目标阶段 (EventPhase.AT_TARGET)。冒泡阶段 (EventPhase.BUBBLING_PHASE)。",
			"see": [
				"egret.EventPhase"
			],
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "hashCode",
			"memberof": "egret.HashObject",
			"scope": "instance",
			"rwType": 1,
			"description": "返回此对象唯一的哈希值,用于唯一确定一个对象。hashCode为大于等于1的整数。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "egret.HashObject"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "localX",
			"memberof": "egret.TouchEvent",
			"scope": "instance",
			"rwType": 1,
			"description": "事件发生点相对于所属显示对象的水平坐标。",
			"version": "Egret 2.4",
			"platform": "Web,Native"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "localY",
			"memberof": "egret.TouchEvent",
			"scope": "instance",
			"rwType": 1,
			"description": "事件发生点相对于所属显示对象的垂直坐标。",
			"version": "Egret 2.4",
			"platform": "Web,Native"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "stageX",
			"memberof": "egret.TouchEvent",
			"scope": "instance",
			"rwType": 1,
			"description": "事件发生点在全局舞台坐标中的水平坐标。",
			"version": "Egret 2.4",
			"platform": "Web,Native"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "stageY",
			"memberof": "egret.TouchEvent",
			"scope": "instance",
			"rwType": 1,
			"description": "事件发生点在全局舞台坐标中的垂直坐标。",
			"version": "Egret 2.4",
			"platform": "Web,Native"
		},
		{
			"kind": "member",
			"type": "any",
			"name": "target",
			"memberof": "egret.Event",
			"scope": "instance",
			"rwType": 1,
			"description": "事件目标。此属性包含目标节点。例如，如果用户单击“确定”按钮，则目标节点就是包含该按钮的显示列表节点。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "member",
			"type": "boolean",
			"name": "touchDown",
			"memberof": "egret.TouchEvent",
			"scope": "instance",
			"description": "表示触摸已按下 (true) 还是未按下 (false)。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"default": "false"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "touchPointID",
			"memberof": "egret.TouchEvent",
			"scope": "instance",
			"description": "分配给触摸点的唯一标识号",
			"version": "Egret 2.4",
			"platform": "Web,Native"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "type",
			"memberof": "egret.Event",
			"scope": "instance",
			"rwType": 1,
			"description": "事件的类型。类型区分大小写。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "egret.Event"
		}
	],
	"function": [
		{
			"kind": "function",
			"name": "TouchEvent",
			"memberof": "egret.TouchEvent",
			"scope": "instance",
			"description": "创建一个 TouchEvent 对象，其中包含有关Touch事件的信息",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "type",
					"type": "string",
					"description": "事件的类型，可以作为 Event.type 访问。"
				},
				{
					"name": "bubbles",
					"question": true,
					"type": "boolean",
					"description": "确定 Event 对象是否参与事件流的冒泡阶段。默认值为 false。"
				},
				{
					"name": "cancelable",
					"question": true,
					"type": "boolean",
					"description": "确定是否可以取消 Event 对象。默认值为 false。"
				},
				{
					"name": "stageX",
					"question": true,
					"type": "number",
					"description": "事件发生点在全局舞台坐标系中的水平坐标"
				},
				{
					"name": "stageY",
					"question": true,
					"type": "number",
					"description": "事件发生点在全局舞台坐标系中的垂直坐标"
				},
				{
					"name": "touchPointID",
					"question": true,
					"type": "number",
					"description": "分配给触摸点的唯一标识号"
				}
			]
		},
		{
			"kind": "function",
			"type": "T",
			"name": "create",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "从对象池中取出或创建一个新的事件实例。我们建议您尽可能使用Event.create()和Event.release() 这一对方法来创建和释放事件对象，这一对方法会将事件实例在内部缓存下来供下次循环使用，减少对象的创建次数,从而获得更高的代码运行性能。<br/>注意：若使用此方法来创建自定义事件的实例，自定义的构造函数参数列表必须跟Event类一致。",
			"example": "<pre><br/>&nbsp;&nbsp;&nbsp;var&nbsp;event&nbsp;=&nbsp;Event.create(Event,type,&nbsp;bubbles);<br/>&nbsp;&nbsp;&nbsp;event.data&nbsp;=&nbsp;data;&nbsp;&nbsp;//可选，若指定义事件上需要附加其他参数，可以在获取实例后在此处设置。<br/>&nbsp;&nbsp;&nbsp;this.dispatchEvent(event);<br/>&nbsp;&nbsp;&nbsp;Event.release(event);<br/></pre>",
			"see": [
				"#clean()"
			],
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "EventClass",
					"type": "{new (type:string,bubbles?:boolean,cancelable?:boolean):T;eventPool?:egret.Event[]}",
					"description": "Event类名。"
				},
				{
					"name": "type",
					"type": "string",
					"description": "事件的类型，可以作为 Event.type 访问。"
				},
				{
					"name": "bubbles",
					"question": true,
					"type": "boolean",
					"description": "确定 Event 对象是否参与事件流的冒泡阶段。默认值为 false。"
				},
				{
					"name": "cancelable",
					"question": true,
					"type": "boolean",
					"description": "确定是否可以取消 Event 对象。默认值为 false。"
				}
			],
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "function",
			"type": "boolean",
			"name": "dispatchEvent",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "使用指定的 EventDispatcher 对象来抛出 Event 事件对象。抛出的对象将会缓存在对象池上，供下次循环复用。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "target",
					"type": "egret.IEventDispatcher",
					"description": "派发事件目标"
				},
				{
					"name": "type",
					"type": "string",
					"description": "事件类型"
				},
				{
					"name": "bubbles",
					"type": "boolean",
					"default": "false",
					"description": "确定 Event 对象是否参与事件流的冒泡阶段。默认值为 false。"
				},
				{
					"name": "data",
					"question": true,
					"type": "any",
					"description": "事件data"
				}
			],
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "function",
			"type": "boolean",
			"name": "dispatchTouchEvent",
			"memberof": "egret.TouchEvent",
			"scope": "static",
			"description": "使用指定的EventDispatcher对象来抛出Event事件对象。抛出的对象将会缓存在对象池上，供下次循环复用。",
			"see": [
				"egret.Event.create()",
				"egret.Event.release()"
			],
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "target",
					"type": "egret.IEventDispatcher",
					"description": "派发事件目标"
				},
				{
					"name": "type",
					"type": "string",
					"description": "事件的类型，可以作为 Event.type 访问。"
				},
				{
					"name": "bubbles",
					"question": true,
					"type": "boolean",
					"description": "确定 Event 对象是否参与事件流的冒泡阶段。默认值为 false。"
				},
				{
					"name": "cancelable",
					"question": true,
					"type": "boolean",
					"description": "确定是否可以取消 Event 对象。默认值为 false。"
				},
				{
					"name": "stageX",
					"question": true,
					"type": "number",
					"description": "事件发生点在全局舞台坐标系中的水平坐标"
				},
				{
					"name": "stageY",
					"question": true,
					"type": "number",
					"description": "事件发生点在全局舞台坐标系中的垂直坐标"
				},
				{
					"name": "touchPointID",
					"question": true,
					"type": "number",
					"description": "分配给触摸点的唯一标识号"
				},
				{
					"name": "touchDown",
					"type": "boolean",
					"default": "false",
					"description": ""
				}
			]
		},
		{
			"kind": "function",
			"type": "boolean",
			"name": "isDefaultPrevented",
			"memberof": "egret.Event",
			"scope": "instance",
			"description": "检查是否已对事件调用 preventDefault() 方法。",
			"returns": "如果已调用 preventDefault() 方法，则返回 true；否则返回 false。",
			"see": [
				"#preventDefault()"
			],
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "preventDefault",
			"memberof": "egret.Event",
			"scope": "instance",
			"description": "如果可以取消事件的默认行为，则取消该行为。许多事件都有默认执行的关联行为。例如，如果用户在文本字段中键入一个字符，则默认行为就是在文本字段中显示该字符。由于可以取消 TextEvent.TEXT_INPUT 事件的默认行为，因此您可以使用 preventDefault() 方法来防止显示该字符。您可以使用 Event.cancelable 属性来检查是否可以防止与特定事件关联的默认行为。如果 Event.cancelable 的值为 true，则可以使用 preventDefault() 来取消事件；否则，preventDefault() 无效。",
			"see": [
				"#cancelable",
				"#isDefaultPrevented"
			],
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "release",
			"memberof": "egret.Event",
			"scope": "static",
			"description": "释放一个事件对象，并缓存到对象池。我们建议您尽可能使用Event.create()和Event.release() 这一对方法来创建和释放事件对象，这一对方法会将事件实例在内部缓存下来供下次循环使用，减少对象的创建次数,从而获得更高的代码运行性能。<br/>注意：此方法只能传入由Event.create()创建的事件实例，传入非法对象实例可能会导致报错。",
			"example": "<pre><br/>&nbsp;&nbsp;&nbsp;var&nbsp;event&nbsp;=&nbsp;Event.create(Event,type,&nbsp;bubbles);<br/>&nbsp;&nbsp;&nbsp;event.data&nbsp;=&nbsp;data;&nbsp;&nbsp;&nbsp;//可选，若指定义事件上需要附加其他参数，可以在获取实例后在此处设置。<br/>&nbsp;&nbsp;&nbsp;this.dispatchEvent(event);<br/>&nbsp;&nbsp;&nbsp;Event.release(event);<br/></pre>",
			"see": [
				"#clean()"
			],
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "event",
					"type": "egret.Event",
					"description": ""
				}
			],
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "stopImmediatePropagation",
			"memberof": "egret.Event",
			"scope": "instance",
			"description": "防止对事件流中当前节点中和所有后续节点中的事件侦听器进行处理。此方法会立即生效，并且会影响当前节点中的事件侦听器。相比之下，在当前节点中的所有事件侦听器都完成处理之前，stopPropagation() 方法不会生效。<br/>注意：此方法不会取消与此事件相关联的行为；有关此功能的信息，请参阅 preventDefault()。",
			"see": [
				"#stopPropagation()",
				"#preventDefault()"
			],
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "stopPropagation",
			"memberof": "egret.Event",
			"scope": "instance",
			"description": "防止对事件流中当前节点的后续节点中的所有事件侦听器进行处理。此方法不会影响当前节点 currentTarget 中的任何事件侦听器。相比之下，stopImmediatePropagation() 方法可以防止对当前节点中和后续节点中的事件侦听器进行处理。对此方法的其它调用没有任何效果。可以在事件流的任何阶段中调用此方法。<br/>注意：此方法不会取消与此事件相关联的行为；有关此功能的信息，请参阅 preventDefault()。",
			"see": [
				"#stopImmediatePropagation()",
				"#preventDefault()"
			],
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "egret.Event"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "updateAfterEvent",
			"memberof": "egret.TouchEvent",
			"scope": "instance",
			"description": "如果已修改显示列表，调用此方法将会忽略帧频限制，在此事件处理完成后立即重绘屏幕。",
			"version": "Egret 2.4",
			"platform": "Web,Native"
		}
	],
	"globalMember": [],
	"globalFunction": [],
	"class": {
		"kind": "class",
		"name": "TouchEvent",
		"memberof": "egret",
		"filename": "egret/events/TouchEvent.ts",
		"description": "使用 TouchEvent 类，您可以处理设备上那些检测用户与设备之间的接触的事件。当用户与带有触摸屏的移动电话或平板电脑等设备交互时，用户通常使用手指或指针设备接触屏幕。可使用 TouchEvent类开发响应基本触摸事件（如单个手指点击）的应用程序。使用此类中定义的事件类型创建事件侦听器。注意：当对象嵌套在显示列表中时，触摸事件的目标将是显示列表中可见的最深的可能嵌套对象。此对象称为目标节点。要使目标节点的祖代（祖代是一个包含显示列表中所有目标节点的对象，从舞台到目标节点的父节点均包括在内）接收触摸事件的通知，请对祖代节点使用 EventDispatcher.on() 并将 type 参数设置为要检测的特定触摸事件。",
		"version": "Egret 2.4",
		"platform": "Web,Native",
		"example": "<pre>/**<br/>&nbsp;*&nbsp;以下示例演示了事件的捕获冒泡。<br/>&nbsp;*/<br/>class&nbsp;TouchEventExample&nbsp;extends&nbsp;egret.DisplayObjectContainer&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;constructor()&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;super();<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.touchEventDemo();<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.touchCancelDemo();<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/>&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;touchEventDemo(){<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;container&nbsp;=&nbsp;new&nbsp;egret.Sprite();<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.addChild(container);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;container.rotation&nbsp;=&nbsp;45;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;left:egret.Shape&nbsp;=&nbsp;new&nbsp;egret.Shape();<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left.graphics.beginFill(0xff0000);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left.graphics.drawRect(0,0,100,100);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left.graphics.endFill();<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left.x&nbsp;=&nbsp;100;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;container.addChild(left);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left.touchEnabled&nbsp;=&nbsp;true;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;left.addEventListener(egret.TouchEvent.TOUCH_TAP,&nbsp;function&nbsp;(event)&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;点击左侧方块，eventPhase：&quot;&nbsp;+&nbsp;event.eventPhase);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},&nbsp;left);<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;right:egret.Shape&nbsp;=&nbsp;new&nbsp;egret.Shape();<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;right.graphics.beginFill(0x00ff00);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;right.graphics.drawRect(0,0,100,100);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;right.graphics.endFill();<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;right.x&nbsp;=&nbsp;145;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;right.y&nbsp;=&nbsp;-40;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;container.addChild(right);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;right.touchEnabled&nbsp;=&nbsp;true;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;right.addEventListener(egret.TouchEvent.TOUCH_TAP,&nbsp;function&nbsp;(event)&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;点击右侧方块，eventPhase：&quot;&nbsp;+&nbsp;event.eventPhase);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},&nbsp;right);<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;container.touchEnabled&nbsp;=&nbsp;true;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;container.addEventListener(egret.TouchEvent.TOUCH_TAP,&nbsp;function&nbsp;(event)&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;容器冒泡侦听，eventPhase：&quot;&nbsp;+&nbsp;event.eventPhase);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},&nbsp;this);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;container.addEventListener(egret.TouchEvent.TOUCH_TAP,&nbsp;function&nbsp;(event)&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;容器捕获侦听，eventPhase：&quot;&nbsp;+&nbsp;event.eventPhase);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},&nbsp;this,&nbsp;true);<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/>&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;touchCancelDemo(){<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;scroller&nbsp;=&nbsp;new&nbsp;eui.Scroller();<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scroller.x&nbsp;=&nbsp;250;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;list&nbsp;=&nbsp;new&nbsp;eui.List();<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;ac&nbsp;=&nbsp;new&nbsp;eui.ArrayCollection([1,&nbsp;2,&nbsp;3,&nbsp;4,&nbsp;5,&nbsp;6,&nbsp;7,&nbsp;8,&nbsp;9,&nbsp;10,&nbsp;11,&nbsp;12,&nbsp;13,&nbsp;14,&nbsp;15,&nbsp;16]);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list.dataProvider&nbsp;=&nbsp;ac;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list.itemRendererSkinName&nbsp;=&nbsp;`<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;e:Skin&nbsp;states=&quot;up,down,disabled&quot;&nbsp;minHeight=&quot;50&quot;&nbsp;minWidth=&quot;100&quot;&nbsp;xmlns:e=&quot;http://ns.egret.com/eui&quot;&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;e:Image&nbsp;width=&quot;100%&quot;&nbsp;height=&quot;100%&quot;&nbsp;scale9Grid=&quot;1,3,8,8&quot;&nbsp;alpha.disabled=&quot;0.5&quot;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;source=&quot;resource/button_up.png&quot;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;source.down=&quot;resource/button_down.png&quot;/&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;e:Label&nbsp;text=&quot;{data}&quot;&nbsp;top=&quot;8&quot;&nbsp;bottom=&quot;8&quot;&nbsp;left=&quot;8&quot;&nbsp;right=&quot;8&quot;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;textColor=&quot;0xFFFFFF&quot;&nbsp;verticalAlign=&quot;middle&quot;&nbsp;textAlign=&quot;center&quot;/&gt;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/e:Skin&gt;`<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scroller.viewport&nbsp;=&nbsp;list;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scroller.height&nbsp;=&nbsp;200;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.addChild(scroller);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scroller.addEventListener(egret.TouchEvent.TOUCH_BEGIN,()=&gt;{console.log(&quot;111&nbsp;Scroller&nbsp;Begin&quot;)},this);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list.addEventListener(egret.TouchEvent.TOUCH_BEGIN,()=&gt;{console.log(&quot;111&nbsp;List&nbsp;Begin&quot;)},this);<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scroller.addEventListener(egret.TouchEvent.TOUCH_END,()=&gt;{console.log(&quot;222&nbsp;Scroller&nbsp;END&quot;)},this);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list.addEventListener(egret.TouchEvent.TOUCH_END,()=&gt;{console.log(&quot;222&nbsp;List&nbsp;END&quot;)},this);<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scroller.addEventListener(egret.TouchEvent.TOUCH_TAP,()=&gt;{console.log(&quot;33&nbsp;Scroller&nbsp;Tap&quot;)},this);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list.addEventListener(egret.TouchEvent.TOUCH_TAP,()=&gt;{console.log(&quot;33&nbsp;List&nbsp;Tap&quot;)},this);<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//scroller&nbsp;滚动后会触发&nbsp;touchCancel&nbsp;事件<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//dispatch&nbsp;touchcancel&nbsp;event&nbsp;after&nbsp;scroller&nbsp;move<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scroller.addEventListener(egret.TouchEvent.TOUCH_CANCEL,()=&gt;{console.log(&quot;44&nbsp;Scroller&nbsp;cancel&quot;)},this);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list.addEventListener(egret.TouchEvent.TOUCH_CANCEL,()=&gt;{console.log(&quot;44&nbsp;List&nbsp;cancel&quot;)},this);<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/>}</pre>",
		"augments": [
			"egret.Event",
			"egret.HashObject"
		],
		"children": [
			"egret.gui.ListEvent"
		]
	}
}
{
	"globalFunction": [
		{
			"filename": "egret/system/Console.ts",
			"kind": "globalFunction",
			"type": "void",
			"name": "assert",
			"memberof": "egret",
			"scope": "instance",
			"description": "判断参数assertion是否为true，若为false则抛出异常并且在console输出相应信息，反之什么也不做。",
			"params": [
				{
					"name": "assertion",
					"question": true,
					"type": "boolean",
					"description": "一个 boolean 表达式，若结果为false，则抛出错误并输出信息。"
				},
				{
					"name": "message",
					"question": true,
					"type": "string",
					"description": "要输出到控制台的信息"
				},
				{
					"name": "...optionalParams",
					"type": "any[]",
					"description": ""
				}
			]
		},
		{
			"filename": "egret/utils/callLater.ts",
			"kind": "globalFunction",
			"type": "void",
			"name": "callLater",
			"memberof": "egret",
			"scope": "instance",
			"description": "延迟函数到屏幕重绘前执行。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"example": "<pre>/**<br/>&nbsp;*&nbsp;以下示例演示了使用&nbsp;callLater&nbsp;实现延迟函数。<br/>&nbsp;*/<br/>class&nbsp;callLaterExample&nbsp;extends&nbsp;egret.DisplayObjectContainer&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;label:egret.TextField;<br/>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;constructor()&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;super();<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//创建&nbsp;TextField&nbsp;对象<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.label&nbsp;=&nbsp;new&nbsp;egret.TextField();<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//设置文本颜色<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.label.textColor&nbsp;=&nbsp;0xFF0000;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//设置字号<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.label.size&nbsp;=&nbsp;30;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//设置显示文本<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.label.text&nbsp;=&nbsp;&quot;Hello&nbsp;Egret&quot;;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//添加到显示列表<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.addChild(this.label);<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;beforeCallLater&quot;);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;egret.callLater(this.onCallLater,&nbsp;this);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;afterCallLater&quot;);<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;onCallLater():void&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;onCallLater&quot;);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.label.text&nbsp;=&nbsp;&quot;callLater&quot;;<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/>}</pre>",
			"params": [
				{
					"name": "method",
					"type": "Function",
					"description": "要延迟执行的函数"
				},
				{
					"name": "thisObject",
					"type": "any",
					"description": "回调函数的this引用"
				},
				{
					"name": "...args",
					"description": "函数参数列表"
				}
			]
		},
		{
			"filename": "egret/system/Console.ts",
			"kind": "globalFunction",
			"type": "void",
			"name": "error",
			"memberof": "egret",
			"scope": "instance",
			"description": "输出一个错误信息到控制台。",
			"params": [
				{
					"name": "message",
					"question": true,
					"type": "any",
					"description": "要输出到控制台的信息"
				},
				{
					"name": "...optionalParams",
					"type": "any[]",
					"description": ""
				}
			]
		},
		{
			"filename": "egret/utils/getDefinitionByName.ts",
			"kind": "globalFunction",
			"type": "any",
			"name": "getDefinitionByName",
			"memberof": "egret",
			"scope": "instance",
			"description": "返回 name 参数指定的类的类对象引用。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"example": "<pre>/**<br/>&nbsp;*&nbsp;以下示例演示了&nbsp;getDefinitionByName&nbsp;的使用方式。<br/>&nbsp;*/<br/>class&nbsp;getDefinitionByNameExample&nbsp;extends&nbsp;egret.DisplayObjectContainer&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;constructor()&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;super();<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(egret.getDefinitionByName(&quot;egret.DisplayObject&quot;));//egret.DisplayObject对象<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(egret.getDefinitionByName(&quot;egret.Nothing&quot;));//null<br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;cls:any&nbsp;=&nbsp;egret.getDefinitionByName(&quot;egret.Shape&quot;);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;shape:egret.Shape&nbsp;=&nbsp;new&nbsp;cls();<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shape.graphics.beginFill(0xff0000);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shape.graphics.drawRect(0,&nbsp;0,&nbsp;100,&nbsp;100);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shape.graphics.endFill();<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shape.x&nbsp;=&nbsp;shape.y&nbsp;=&nbsp;100;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.addChild(shape);<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/>}</pre>",
			"params": [
				{
					"name": "name",
					"type": "string",
					"description": "类的名称。"
				}
			]
		},
		{
			"filename": "egret/utils/getOption.ts",
			"kind": "globalFunction",
			"type": "string",
			"name": "getOption",
			"memberof": "egret",
			"scope": "instance",
			"description": "获取浏览器或者Runtime参数，如果没有设置返回空字符串在浏览器中相当于获取url中参数，在Runtime获取对应setOption参数",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "key",
					"type": "string",
					"description": "参数key"
				}
			]
		},
		{
			"filename": "egret/utils/getQualifiedClassName.ts",
			"kind": "globalFunction",
			"type": "string",
			"name": "getQualifiedClassName",
			"memberof": "egret",
			"scope": "instance",
			"description": "返回对象的完全限定类名。",
			"returns": "包含完全限定类名称的字符串。",
			"example": "<pre>/**<br/>&nbsp;*&nbsp;以下示例演示了&nbsp;getQualifiedClassNameExample&nbsp;的使用方式。<br/>&nbsp;*/<br/>class&nbsp;getQualifiedClassNameExample&nbsp;extends&nbsp;egret.DisplayObjectContainer&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;constructor()&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;super();<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(egret.getQualifiedClassName(egret.DisplayObject));//egret.DisplayObject<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(egret.getQualifiedClassName(window));//Window<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/>}</pre>",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "value",
					"type": "any",
					"description": "需要完全限定类名称的对象，可以将任何 JavaScript 值传递给此方法，包括所有可用的 JavaScript 类型、对象实例、原始类型（如number)和类对象"
				}
			]
		},
		{
			"filename": "egret/utils/getQualifiedSuperclassName.ts",
			"kind": "globalFunction",
			"type": "string",
			"name": "getQualifiedSuperclassName",
			"memberof": "egret",
			"scope": "instance",
			"description": "返回 value 参数指定的对象的基类的完全限定类名。",
			"returns": "完全限定的基类名称，或 null（如果不存在基类名称）。",
			"example": "<pre>/**<br/>&nbsp;*&nbsp;以下示例演示了&nbsp;getQualifiedClassNameExample&nbsp;的使用方式。<br/>&nbsp;*/<br/>class&nbsp;getQualifiedSuperClassNameExample&nbsp;extends&nbsp;egret.DisplayObjectContainer&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;constructor()&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;super();<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;sp1&nbsp;=&nbsp;new&nbsp;egret.Sprite();<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;sp2&nbsp;=&nbsp;new&nbsp;egret.Shape();<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(egret.getQualifiedSuperclassName(sp1));//egret.DisplayObjectContainer<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(egret.getQualifiedSuperclassName(sp2));//egret.DisplayObject<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/>}<br/></pre>",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "value",
					"type": "any",
					"description": "需要取得父类的对象，可以将任何 JavaScript 值传递给此方法，包括所有可用的 JavaScript 类型、对象实例、原始类型（如number）和类对象"
				}
			]
		},
		{
			"filename": "egret/utils/getTimer.ts",
			"kind": "globalFunction",
			"type": "number",
			"name": "getTimer",
			"memberof": "egret",
			"scope": "instance",
			"description": "用于计算相对时间。此方法返回自启动 Egret 框架以来经过的毫秒数。",
			"returns": "启动 Egret 框架以来经过的毫秒数。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"example": "<pre>/**<br/>&nbsp;*&nbsp;以下示例演示了使用&nbsp;getTimer&nbsp;获取启动&nbsp;Egret&nbsp;引擎以来经过的毫秒数。<br/>&nbsp;*/<br/>class&nbsp;getTimerExample&nbsp;extends&nbsp;egret.DisplayObjectContainer&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;constructor()&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;super();<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;egret.Tween.get(this,&nbsp;{loop:true}).wait(1000).call(function&nbsp;(){<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(egret.getTimer());<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/>}</pre>"
		},
		{
			"filename": "egret/utils/hasDefinition.ts",
			"kind": "globalFunction",
			"type": "boolean",
			"name": "hasDefinition",
			"memberof": "egret",
			"scope": "instance",
			"description": "检查指定的应用程序域之内是否存在一个公共定义。该定义可以是一个类、一个命名空间或一个函数的定义。",
			"returns": "公共定义是否存在",
			"example": "<pre>/**<br/>&nbsp;*&nbsp;以下示例演示了&nbsp;hasDefinition&nbsp;的使用方式。<br/>&nbsp;*/<br/>class&nbsp;hasDefinitionExample&nbsp;extends&nbsp;egret.DisplayObjectContainer&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;constructor()&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;super();<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(egret.hasDefinition(&quot;egret.DisplayObject&quot;));//true<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(egret.hasDefinition(&quot;egret.Nothing&quot;));//false<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/>}</pre>",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "name",
					"type": "string",
					"description": "定义的名称。"
				}
			]
		},
		{
			"filename": "egret/utils/is.ts",
			"kind": "globalFunction",
			"type": "boolean",
			"name": "is",
			"memberof": "egret",
			"scope": "instance",
			"description": "检查指定对象是否为 Egret 框架内指定接口或类或其子类的实例。此方法与使用 instanceOf 关键字相比具有更高的性能，并且能判断接口的实现。",
			"returns": "返回true表示当前对象是指定类或接口的实例。",
			"example": "<pre><br/>&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;instance&nbsp;=&nbsp;new&nbsp;egret.Sprite();<br/>&nbsp;&nbsp;&nbsp;&nbsp;egret.log(egret.is(instance,&quot;egret.Sprite&quot;))&nbsp;&nbsp;//true<br/>&nbsp;&nbsp;&nbsp;&nbsp;egret.log(egret.is(instance,&quot;egret.DisplayObjectContainer&quot;))&nbsp;&nbsp;//true<br/>&nbsp;&nbsp;&nbsp;&nbsp;egret.log(egret.is(instance,&quot;egret.Bitmap&quot;))&nbsp;&nbsp;//false<br/></pre>",
			"see": [
				"egret.registerClass()"
			],
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "instance",
					"type": "any",
					"description": "要判断的实例。"
				},
				{
					"name": "typeName",
					"type": "string",
					"description": "类或接口的完全名称."
				}
			]
		},
		{
			"filename": "egret/system/Console.ts",
			"kind": "globalFunction",
			"type": "void",
			"name": "log",
			"memberof": "egret",
			"scope": "instance",
			"description": "输出一个日志信息到控制台。",
			"params": [
				{
					"name": "message",
					"question": true,
					"type": "any",
					"description": "要输出到控制台的信息"
				},
				{
					"name": "...optionalParams",
					"type": "any[]",
					"description": ""
				}
			]
		},
		{
			"filename": "egret/utils/registerClass.ts",
			"kind": "globalFunction",
			"type": "void",
			"name": "registerClass",
			"memberof": "egret",
			"scope": "instance",
			"description": "为一个类定义注册运行时类信息,用此方法往类定义上注册它自身以及所有接口对应的字符串。在运行时，这个类的实例将可以使用 egret.is() 方法传入一个字符串来判断实例类型。",
			"example": "以下代码演示了如何为EventDispatcher类注册运行时类信息并判断类型：<pre><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//为egret.EventDispatcher类注册运行时类信息，由于它实现了IEventDispatcher接口，这里应同时传入接口名对应的字符串。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;egret.registerClass(egret.EventDispatcher,&quot;egret.EventDispatcher&quot;,[&quot;egret.IEventDispatcher&quot;]);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;dispatcher&nbsp;=&nbsp;new&nbsp;egret.EventDispatcher();<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;egret.log(egret.is(dispatcher,&nbsp;&quot;egret.IEventDispatcher&quot;));&nbsp;&nbsp;//true。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;egret.log(egret.is(dispatcher,&nbsp;&quot;egret.EventDispatcher&quot;));&nbsp;&nbsp;&nbsp;//true。<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;egret.log(egret.is(dispatcher,&nbsp;&quot;egret.Bitmap&quot;));&nbsp;&nbsp;&nbsp;//false。<br/></pre>注意：若您使用 TypeScript 来编写程序，egret 命令行会自动帮您生成类信息注册代码行到最终的 Javascript 文件中。因此您不需要手动调用此方法。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "classDefinition",
					"type": "any",
					"description": "要注册的类定义。"
				},
				{
					"name": "className",
					"type": "string",
					"description": "要注册的类名。"
				},
				{
					"name": "interfaceNames",
					"question": true,
					"type": "string[]",
					"description": "要注册的类所实现的接口名列表。"
				}
			]
		},
		{
			"filename": "egret/utils/startTick.ts",
			"kind": "globalFunction",
			"type": "void",
			"name": "startTick",
			"memberof": "egret",
			"scope": "instance",
			"description": "注册并启动一个计时器，通常会以60FPS的速率触发回调方法，并传入当前时间戳。注意：注册后将会持续触发回调方法，若要停止回调，需要手动调用stopTick()方法。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "callBack",
					"type": "(timeStamp:number)=>boolean",
					"description": "要执行的回调方法。参数 timeStamp 表示从启动Egret框架开始经过的时间(毫秒)。若回调方法返回值为true，其作用与TimerEvent.updateAfterEvent()类似，将会忽略帧频限制，在此方法处理完成后立即重绘屏幕。"
				},
				{
					"name": "thisObject",
					"type": "any",
					"description": "回调方法的this对象引用。"
				}
			]
		},
		{
			"filename": "egret/utils/stopTick.ts",
			"kind": "globalFunction",
			"type": "void",
			"name": "stopTick",
			"memberof": "egret",
			"scope": "instance",
			"description": "停止之前用 startTick() 方法启动的计时器。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "callBack",
					"type": "(timeStamp:number)=>boolean",
					"description": "要执行的回调方法。参数 timeStamp 表示从启动Egret框架开始经过的时间(毫秒)。若回调方法返回值为true，其作用与TimerEvent.updateAfterEvent()类似，将会忽略帧频限制，在此方法处理完成后立即重绘屏幕。"
				},
				{
					"name": "thisObject",
					"type": "any",
					"description": "回调方法的this对象引用。"
				}
			]
		},
		{
			"filename": "egret/utils/extends.ts",
			"kind": "globalFunction",
			"type": "any",
			"name": "superGetter",
			"memberof": "egret",
			"scope": "instance",
			"description": "获取父类的getter属性值。代替其他语言的写法，如 super.alpha;",
			"returns": "父类返回的值",
			"params": [
				{
					"name": "currentClass",
					"type": "any",
					"description": "当前 class 类名，非字符串"
				},
				{
					"name": "thisObj",
					"type": "any",
					"description": "当前对象。永远都this"
				},
				{
					"name": "type",
					"type": "string",
					"description": "需要调用的setter属性名称"
				}
			]
		},
		{
			"filename": "egret/utils/extends.ts",
			"kind": "globalFunction",
			"name": "superSetter",
			"memberof": "egret",
			"scope": "instance",
			"description": "调用父类的setter属性，代替其他语言的写法，如 super.alpha = 1;",
			"params": [
				{
					"name": "currentClass",
					"type": "any",
					"description": "当前 class 类名，非字符串"
				},
				{
					"name": "thisObj",
					"type": "any",
					"description": "当前对象。永远都this"
				},
				{
					"name": "type",
					"type": "string",
					"description": "需要调用的setter属性名称"
				},
				{
					"name": "...values",
					"description": ""
				}
			]
		},
		{
			"filename": "egret/utils/toColorString.ts",
			"kind": "globalFunction",
			"type": "string",
			"name": "toColorString",
			"memberof": "egret",
			"scope": "instance",
			"description": "转换数字为颜色字符串",
			"returns": "颜色字符串，例如\"#ffffff\"。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"example": "<pre>/**<br/>*&nbsp;&nbsp;&nbsp;使用以下代码将红色进行进制转换<br/>*/<br/>class&nbsp;toColorStringExample&nbsp;extends&nbsp;egret.DisplayObjectContainer&nbsp;{<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;constructor()&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;super();<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;color1:&nbsp;number&nbsp;=&nbsp;0xFF0000;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(color1);&nbsp;&nbsp;//16711680&nbsp;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(egret.toColorString(color1));&nbsp;&nbsp;//#FF0000&nbsp;<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/>}</pre>",
			"params": [
				{
					"name": "value",
					"type": "number",
					"description": "颜色值，例如 0xffffff"
				}
			]
		},
		{
			"filename": "egret/system/Console.ts",
			"kind": "globalFunction",
			"type": "void",
			"name": "warn",
			"memberof": "egret",
			"scope": "instance",
			"description": "输出一个警告信息到控制台。",
			"params": [
				{
					"name": "message",
					"question": true,
					"type": "any",
					"description": "要输出到控制台的信息"
				},
				{
					"name": "...optionalParams",
					"type": "any[]",
					"description": ""
				}
			]
		}
	]
}
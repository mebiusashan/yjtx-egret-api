{
	"member": [
		{
			"kind": "member",
			"type": "number",
			"name": "hashCode",
			"memberof": "egret.HashObject",
			"scope": "instance",
			"rwType": 1,
			"description": "返回此对象唯一的哈希值,用于唯一确定一个对象。hashCode为大于等于1的整数。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.HashObject"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "length",
			"memberof": "egret.Point",
			"scope": "instance",
			"rwType": 1,
			"description": "从 (0,0) 到此点的线段长度。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "x",
			"memberof": "egret.Point",
			"scope": "instance",
			"description": "该点的水平坐标。",
			"default": "0",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "y",
			"memberof": "egret.Point",
			"scope": "instance",
			"description": "该点的垂直坐标。",
			"default": "0",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public"
		}
	],
	"function": [
		{
			"kind": "function",
			"name": "Point",
			"memberof": "egret.Point",
			"scope": "instance",
			"description": "创建一个 egret.Point 对象.若不传入任何参数，将会创建一个位于（0，0）位置的点。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "x",
					"type": "number",
					"default": "0",
					"description": "该对象的x属性值，默认为0"
				},
				{
					"name": "y",
					"type": "number",
					"default": "0",
					"description": "该对象的y属性值，默认为0"
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "egret.Point",
			"name": "add",
			"memberof": "egret.Point",
			"scope": "instance",
			"description": "将另一个点的坐标添加到此点的坐标以创建一个新点。",
			"returns": "新点。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "v",
					"type": "egret.Point",
					"description": "要添加的点。"
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "egret.Point",
			"name": "clone",
			"memberof": "egret.Point",
			"scope": "instance",
			"description": "克隆点对象",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "copyFrom",
			"memberof": "egret.Point",
			"scope": "instance",
			"description": "将源 Point 对象中的所有点数据复制到调用方 Point 对象中。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "sourcePoint",
					"type": "egret.Point",
					"description": "要从中复制数据的 Point 对象。"
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "egret.Point",
			"name": "create",
			"memberof": "egret.Point",
			"scope": "static",
			"description": "从对象池中取出或创建一个新的Point对象。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "x",
					"type": "number",
					"description": "该对象的x属性值，默认为0"
				},
				{
					"name": "y",
					"type": "number",
					"description": "该对象的y属性值，默认为0"
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "number",
			"name": "distance",
			"memberof": "egret.Point",
			"scope": "static",
			"description": "返回 pt1 和 pt2 之间的距离。",
			"returns": "第一个点和第二个点之间的距离。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "p1",
					"type": "egret.Point",
					"description": "第一个点"
				},
				{
					"name": "p2",
					"type": "egret.Point",
					"description": "第二个点"
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "boolean",
			"name": "equals",
			"memberof": "egret.Point",
			"scope": "instance",
			"description": "确定两个点是否相同。如果两个点具有相同的 x 和 y 值，则它们是相同的点。",
			"returns": "如果该对象与此 Point 对象相同，则为 true 值，如果不相同，则为 false。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "toCompare",
					"type": "egret.Point",
					"description": "要比较的点。"
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "egret.Point",
			"name": "interpolate",
			"memberof": "egret.Point",
			"scope": "static",
			"description": "确定两个指定点之间的点。参数 f 确定新的内插点相对于参数 pt1 和 pt2 指定的两个端点所处的位置。参数 f 的值越接近 1.0，则内插点就越接近第一个点（参数 pt1）。参数 f 的值越接近 0，则内插点就越接近第二个点（参数 pt2）。",
			"returns": "新的内插点。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "pt1",
					"type": "egret.Point",
					"description": "第一个点。"
				},
				{
					"name": "pt2",
					"type": "egret.Point",
					"description": "第二个点。"
				},
				{
					"name": "f",
					"type": "number",
					"description": "两个点之间的内插级别。表示新点将位于 pt1 和 pt2 连成的直线上的什么位置。如果 f=1，则返回 pt1；如果 f=0，则返回 pt2。"
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "normalize",
			"memberof": "egret.Point",
			"scope": "instance",
			"description": "将 (0,0) 和当前点之间的线段缩放为设定的长度。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "thickness",
					"type": "number",
					"description": "缩放值。例如，如果当前点为 (0,5) 并且您将它规范化为 1，则返回的点位于 (0,1) 处。"
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "offset",
			"memberof": "egret.Point",
			"scope": "instance",
			"description": "按指定量偏移 Point 对象。dx 的值将添加到 x 的原始值中以创建新的 x 值。dy 的值将添加到 y 的原始值中以创建新的 y 值。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "dx",
					"type": "number",
					"description": "水平坐标 x 的偏移量。"
				},
				{
					"name": "dy",
					"type": "number",
					"description": "水平坐标 y 的偏移量。"
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "egret.Point",
			"name": "polar",
			"memberof": "egret.Point",
			"scope": "static",
			"description": "将一对极坐标转换为笛卡尔点坐标。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "len",
					"type": "number",
					"description": "极坐标对的长度。"
				},
				{
					"name": "angle",
					"type": "number",
					"description": "极坐标对的角度（以弧度表示）。"
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "release",
			"memberof": "egret.Point",
			"scope": "static",
			"description": "释放一个Point实例到对象池",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "point",
					"type": "egret.Point",
					"description": ""
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "egret.Point",
			"name": "setTo",
			"memberof": "egret.Point",
			"scope": "instance",
			"description": "将 Point 的成员设置为指定值",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "x",
					"type": "number",
					"description": "该对象的x属性值"
				},
				{
					"name": "y",
					"type": "number",
					"description": "该对象的y属性值"
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "egret.Point",
			"name": "subtract",
			"memberof": "egret.Point",
			"scope": "instance",
			"description": "从此点的坐标中减去另一个点的坐标以创建一个新点。",
			"returns": "新点。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "v",
					"type": "egret.Point",
					"description": "要减去的点。"
				}
			],
			"pType": "public"
		}
	],
	"globalMember": [],
	"globalFunction": [],
	"class": {
		"kind": "class",
		"name": "Point",
		"memberof": "egret",
		"filename": "egret/geom/point.ts",
		"description": "Point 对象表示二维坐标系统中的某个位置，其中 x 表示水平轴，y 表示垂直轴。",
		"version": "Egret 2.4",
		"platform": "Web,Native",
		"example": "<pre>/**<br/>&nbsp;*&nbsp;下面的示例使用&nbsp;PointExample&nbsp;类在不同的&nbsp;x,y&nbsp;坐标处创建多个新&nbsp;Point&nbsp;对象，然后使用&nbsp;console.log()&nbsp;方法输出各种类方法的结果。<br/>&nbsp;*/<br/>class&nbsp;PointExample&nbsp;extends&nbsp;egret.DisplayObjectContainer&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;constructor()&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;super();<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;point1:egret.Point&nbsp;=&nbsp;new&nbsp;egret.Point();<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(point1.toString());&nbsp;&nbsp;//&nbsp;(x=0,&nbsp;y=0)<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;point2:egret.Point&nbsp;=&nbsp;new&nbsp;egret.Point(6,&nbsp;8);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(point2.toString());&nbsp;//&nbsp;(x=6,&nbsp;y=8)<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(egret.Point.interpolate(point1,&nbsp;point2,&nbsp;0.5).toString());&nbsp;//&nbsp;(x=3,&nbsp;y=4)<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(egret.Point.distance(point1,&nbsp;point2));&nbsp;//&nbsp;10<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(point1.add(point2).toString());&nbsp;//&nbsp;(x=6,&nbsp;y=8)<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;point3:egret.Point&nbsp;=&nbsp;point2.clone();<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(point2.equals(point3));&nbsp;//&nbsp;true<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;point3.normalize(2.5);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(point3.toString());&nbsp;//&nbsp;(x=1.5,&nbsp;y=2)<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(point2.subtract(point3).toString());&nbsp;//&nbsp;(x=4.5,&nbsp;y=6)<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;point1.offset(2,&nbsp;3);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(point1.toString());&nbsp;//&nbsp;(x=2,&nbsp;y=3)<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;angle:number&nbsp;=&nbsp;Math.PI&nbsp;*&nbsp;2&nbsp;*&nbsp;(30&nbsp;/&nbsp;360);&nbsp;//&nbsp;30&nbsp;degrees<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(egret.Point.polar(4,&nbsp;angle).toString());&nbsp;//&nbsp;(x=3.464101615137755,&nbsp;y=1.9999999999999996)<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/>}</pre>",
		"augments": [
			"egret.HashObject"
		]
	}
}
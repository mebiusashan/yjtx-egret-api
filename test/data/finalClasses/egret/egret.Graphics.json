{
	"member": [
		{
			"kind": "member",
			"type": "number",
			"name": "hashCode",
			"memberof": "egret.HashObject",
			"scope": "instance",
			"rwType": 1,
			"description": "返回此对象唯一的哈希值,用于唯一确定一个对象。hashCode为大于等于1的整数。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public",
			"inherited": true,
			"inherits": "egret.HashObject"
		}
	],
	"function": [
		{
			"kind": "function",
			"name": "Graphics",
			"memberof": "egret.Graphics",
			"scope": "instance",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "beginFill",
			"memberof": "egret.Graphics",
			"scope": "instance",
			"description": "指定一种简单的单一颜色填充，在绘制时该填充将在随后对其他 Graphics 方法（如 lineTo() 或 drawCircle()）的调用中使用。调用 clear() 方法会清除填充。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "color",
					"type": "number",
					"description": "填充的颜色"
				},
				{
					"name": "alpha",
					"type": "number",
					"default": "1",
					"description": "填充的 Alpha 值"
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "beginGradientFill",
			"memberof": "egret.Graphics",
			"scope": "instance",
			"description": "指定一种简单的单一颜色填充，在绘制时该填充将在随后对其他 Graphics 方法（如 lineTo() 或 drawCircle()）的调用中使用。调用 clear() 方法会清除填充。注：该方法目前仅支持H5 Canvas",
			"platform": "Web",
			"version": "Egret 2.4",
			"params": [
				{
					"name": "type",
					"type": "string",
					"description": "用于指定要使用哪种渐变类型的 GradientType 类的值：GradientType.LINEAR 或 GradientType.RADIAL。"
				},
				{
					"name": "colors",
					"type": "Array<number>",
					"description": "渐变中使用的 RGB 十六进制颜色值的数组（例如，红色为 0xFF0000，蓝色为 0x0000FF，等等）。对于每种颜色，请在 alphas 和 ratios 参数中指定对应值。"
				},
				{
					"name": "alphas",
					"type": "Array<number>",
					"description": "colors 数组中对应颜色的 alpha 值数组。"
				},
				{
					"name": "ratios",
					"type": "Array<number>",
					"description": "颜色分布比率的数组。有效值为 0 到 255。"
				},
				{
					"name": "matrix",
					"type": "egret.Matrix",
					"default": "null",
					"description": "一个由 egret.Matrix 类定义的转换矩阵。egret.Matrix 类包括 createGradientBox() 方法，通过该方法可以方便地设置矩阵，以便与 beginGradientFill() 方法一起使用"
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "clear",
			"memberof": "egret.Graphics",
			"scope": "instance",
			"description": "清除绘制到此 Graphics 对象的图形，并重置填充和线条样式设置。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "cubicCurveTo",
			"memberof": "egret.Graphics",
			"scope": "instance",
			"description": "从当前绘图位置到指定的锚点绘制一条三次贝塞尔曲线。三次贝塞尔曲线由两个锚点和两个控制点组成。该曲线内插这两个锚点，并向两个控制点弯曲。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "controlX1",
					"type": "number",
					"description": "指定首个控制点相对于父显示对象的注册点的水平位置。"
				},
				{
					"name": "controlY1",
					"type": "number",
					"description": "指定首个控制点相对于父显示对象的注册点的垂直位置。"
				},
				{
					"name": "controlX2",
					"type": "number",
					"description": "指定第二个控制点相对于父显示对象的注册点的水平位置。"
				},
				{
					"name": "controlY2",
					"type": "number",
					"description": "指定第二个控制点相对于父显示对象的注册点的垂直位置。"
				},
				{
					"name": "anchorX",
					"type": "number",
					"description": "指定锚点相对于父显示对象的注册点的水平位置。"
				},
				{
					"name": "anchorY",
					"type": "number",
					"description": "指定锚点相对于父显示对象的注册点的垂直位置。"
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "curveTo",
			"memberof": "egret.Graphics",
			"scope": "instance",
			"description": "使用当前线条样式和由 (controlX, controlY) 指定的控制点绘制一条从当前绘图位置开始到 (anchorX, anchorY) 结束的二次贝塞尔曲线。当前绘图位置随后设置为 (anchorX, anchorY)。如果在调用 moveTo() 方法之前调用了 curveTo() 方法，则当前绘图位置的默认值为 (0, 0)。如果缺少任何一个参数，则此方法将失败，并且当前绘图位置不改变。绘制的曲线是二次贝塞尔曲线。二次贝塞尔曲线包含两个锚点和一个控制点。该曲线内插这两个锚点，并向控制点弯曲。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "controlX",
					"type": "number",
					"description": "一个数字，指定控制点相对于父显示对象注册点的水平位置。"
				},
				{
					"name": "controlY",
					"type": "number",
					"description": "一个数字，指定控制点相对于父显示对象注册点的垂直位置。"
				},
				{
					"name": "anchorX",
					"type": "number",
					"description": "一个数字，指定下一个锚点相对于父显示对象注册点的水平位置。"
				},
				{
					"name": "anchorY",
					"type": "number",
					"description": "一个数字，指定下一个锚点相对于父显示对象注册点的垂直位置。"
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "drawArc",
			"memberof": "egret.Graphics",
			"scope": "instance",
			"description": "绘制一段圆弧路径。圆弧路径的圆心在 (x, y) 位置，半径为 r ，根据anticlockwise （默认为顺时针）指定的方向从 startAngle 开始绘制，到 endAngle 结束。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "x",
					"type": "number",
					"description": "圆弧中心（圆心）的 x 轴坐标。"
				},
				{
					"name": "y",
					"type": "number",
					"description": "圆弧中心（圆心）的 y 轴坐标。"
				},
				{
					"name": "radius",
					"type": "number",
					"description": "圆弧的半径。"
				},
				{
					"name": "startAngle",
					"type": "number",
					"description": "圆弧的起始点， x轴方向开始计算，单位以弧度表示。"
				},
				{
					"name": "endAngle",
					"type": "number",
					"description": "圆弧的重点， 单位以弧度表示。"
				},
				{
					"name": "anticlockwise",
					"question": true,
					"type": "boolean",
					"description": "如果为 true，逆时针绘制圆弧，反之，顺时针绘制。"
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "drawCircle",
			"memberof": "egret.Graphics",
			"scope": "instance",
			"description": "绘制一个圆。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "x",
					"type": "number",
					"description": "圆心相对于父显示对象注册点的 x 位置（以像素为单位）。"
				},
				{
					"name": "y",
					"type": "number",
					"description": "相对于父显示对象注册点的圆心的 y 位置（以像素为单位）。"
				},
				{
					"name": "r",
					"type": "number",
					"description": "圆的半径（以像素为单位）。"
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "drawEllipse",
			"memberof": "egret.Graphics",
			"scope": "instance",
			"description": "绘制一个椭圆。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "x",
					"type": "number",
					"description": "一个表示相对于父显示对象注册点的水平位置的数字（以像素为单位）。"
				},
				{
					"name": "y",
					"type": "number",
					"description": "一个表示相对于父显示对象注册点的垂直位置的数字（以像素为单位）。"
				},
				{
					"name": "width",
					"type": "number",
					"description": "矩形的宽度（以像素为单位）。"
				},
				{
					"name": "height",
					"type": "number",
					"description": "矩形的高度（以像素为单位）。"
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "drawRect",
			"memberof": "egret.Graphics",
			"scope": "instance",
			"description": "绘制一个矩形",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "x",
					"type": "number",
					"description": "圆心相对于父显示对象注册点的 x 位置（以像素为单位）。"
				},
				{
					"name": "y",
					"type": "number",
					"description": "相对于父显示对象注册点的圆心的 y 位置（以像素为单位）。"
				},
				{
					"name": "width",
					"type": "number",
					"description": "矩形的宽度（以像素为单位）。"
				},
				{
					"name": "height",
					"type": "number",
					"description": "矩形的高度（以像素为单位）。"
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "drawRoundRect",
			"memberof": "egret.Graphics",
			"scope": "instance",
			"description": "绘制一个圆角矩形。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "x",
					"type": "number",
					"description": "圆心相对于父显示对象注册点的 x 位置（以像素为单位）。"
				},
				{
					"name": "y",
					"type": "number",
					"description": "相对于父显示对象注册点的圆心的 y 位置（以像素为单位）。"
				},
				{
					"name": "width",
					"type": "number",
					"description": "矩形的宽度（以像素为单位）。"
				},
				{
					"name": "height",
					"type": "number",
					"description": "矩形的高度（以像素为单位）。"
				},
				{
					"name": "ellipseWidth",
					"type": "number",
					"description": "用于绘制圆角的椭圆的宽度（以像素为单位）。"
				},
				{
					"name": "ellipseHeight",
					"question": true,
					"type": "number",
					"description": "用于绘制圆角的椭圆的高度（以像素为单位）。 （可选）如果未指定值，则默认值与为 ellipseWidth 参数提供的值相匹配。"
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "endFill",
			"memberof": "egret.Graphics",
			"scope": "instance",
			"description": "对从上一次调用 beginFill()方法之后添加的直线和曲线应用填充。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "lineStyle",
			"memberof": "egret.Graphics",
			"scope": "instance",
			"description": "指定一种线条样式以用于随后对 lineTo() 或 drawCircle() 等 Graphics 方法的调用。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "thickness",
					"type": "number",
					"default": "NaN",
					"description": "一个整数，以点为单位表示线条的粗细，有效值为 0 到 255。如果未指定数字，或者未定义该参数，则不绘制线条。如果传递的值小于 0，则默认值为 0。值 0 表示极细的粗细；最大粗细为 255。如果传递的值大于 255，则默认值为 255。"
				},
				{
					"name": "color",
					"type": "number",
					"default": "0",
					"description": "线条的十六进制颜色值（例如，红色为 0xFF0000，蓝色为 0x0000FF 等）。如果未指明值，则默认值为 0x000000（黑色）。可选。"
				},
				{
					"name": "alpha",
					"type": "number",
					"default": "1.0",
					"description": "表示线条颜色的 Alpha 值的数字；有效值为 0 到 1。如果未指明值，则默认值为 1（纯色）。如果值小于 0，则默认值为 0。如果值大于 1，则默认值为 1。"
				},
				{
					"name": "pixelHinting",
					"type": "boolean",
					"default": "false",
					"description": "布尔型值，指定是否提示笔触采用完整像素。它同时影响曲线锚点的位置以及线条笔触大小本身。在 pixelHinting 设置为 true 的情况下，线条宽度会调整到完整像素宽度。在 pixelHinting 设置为 false 的情况下，对于曲线和直线可能会出现脱节。"
				},
				{
					"name": "scaleMode",
					"type": "string",
					"default": "\"normal\"",
					"description": "用于指定要使用的比例模式"
				},
				{
					"name": "caps",
					"type": "string",
					"default": "null",
					"description": "用于指定线条末端处端点类型的 CapsStyle 类的值。"
				},
				{
					"name": "joints",
					"type": "string",
					"default": "null",
					"description": "指定用于拐角的连接外观的类型。"
				},
				{
					"name": "miterLimit",
					"type": "number",
					"default": "3",
					"description": "用于表示剪切斜接的极限值的数字。"
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "lineTo",
			"memberof": "egret.Graphics",
			"scope": "instance",
			"description": "使用当前线条样式绘制一条从当前绘图位置开始到 (x, y) 结束的直线；当前绘图位置随后会设置为 (x, y)。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "x",
					"type": "number",
					"description": "一个表示相对于父显示对象注册点的水平位置的数字（以像素为单位）。"
				},
				{
					"name": "y",
					"type": "number",
					"description": "一个表示相对于父显示对象注册点的垂直位置的数字（以像素为单位）。"
				}
			],
			"pType": "public"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "moveTo",
			"memberof": "egret.Graphics",
			"scope": "instance",
			"description": "将当前绘图位置移动到 (x, y)。如果缺少任何一个参数，则此方法将失败，并且当前绘图位置不改变。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "x",
					"type": "number",
					"description": "一个表示相对于父显示对象注册点的水平位置的数字（以像素为单位）。"
				},
				{
					"name": "y",
					"type": "number",
					"description": "一个表示相对于父显示对象注册点的垂直位置的数字（以像素为单位）。"
				}
			],
			"pType": "public"
		}
	],
	"globalMember": [],
	"globalFunction": [],
	"class": {
		"kind": "class",
		"name": "Graphics",
		"memberof": "egret",
		"filename": "egret/display/Graphics.ts",
		"description": "Graphics 类包含一组可用来创建矢量形状的方法。支持绘制的显示对象包括 Sprite 和 Shape 对象。这些类中的每一个类都包括 graphics 属性，该属性是一个 Graphics 对象。以下是为便于使用而提供的一些辅助函数：drawRect()、drawRoundRect()、drawCircle() 和 drawEllipse()。",
		"see": [
			"http://docs.egret-labs.org/post/manual/graphics/drawrect.html  绘制矩形"
		],
		"version": "Egret 2.4",
		"platform": "Web,Native",
		"example": "<pre>/**<br/>&nbsp;*&nbsp;以下示例演示了使用&nbsp;Graphics&nbsp;类绘制圆形、圆角矩形和正方形。<br/>&nbsp;*/<br/>class&nbsp;GraphicsExample&nbsp;extends&nbsp;egret.DisplayObjectContainer&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;constructor()&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;super();<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.drawCircle();<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.drawRoundRect();<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.drawRect();<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;drawCircle():void&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;shape:egret.Shape&nbsp;=&nbsp;new&nbsp;egret.Shape();<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shape.graphics.beginFill(0xff0000);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shape.graphics.drawCircle(0,&nbsp;0,&nbsp;100);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shape.graphics.endFill();<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.addChild(shape);<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;drawRoundRect():void&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;shape:egret.Shape&nbsp;=&nbsp;new&nbsp;egret.Shape();<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shape.graphics.beginFill(0x00ff00);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shape.graphics.drawRoundRect(100,&nbsp;100,&nbsp;100,&nbsp;100,&nbsp;10,&nbsp;10);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shape.graphics.endFill();<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.addChild(shape);<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;drawRect():void&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;shape:egret.Shape&nbsp;=&nbsp;new&nbsp;egret.Shape();<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shape.graphics.beginFill(0x0000ff);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shape.graphics.drawRect(200,&nbsp;200,&nbsp;100,&nbsp;100);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shape.graphics.endFill();<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.addChild(shape);<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/>}</pre>",
		"augments": [
			"egret.HashObject"
		]
	}
}
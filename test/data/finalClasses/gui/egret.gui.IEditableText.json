{
	"member": [
		{
			"kind": "member",
			"type": "number",
			"name": "alpha",
			"memberof": "egret.gui.IVisualElement",
			"scope": "instance",
			"description": "表示指定对象的 Alpha 透明度值。有效值为 0（完全透明）到 1（完全不透明）。默认值为 1。alpha 设置为 0 的显示对象是活动的，即使它们不可见。",
			"inherited": true,
			"inherits": "egret.gui.IVisualElement"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "bottom",
			"memberof": "egret.gui.ILayoutElement",
			"scope": "instance",
			"description": "距父级容器底部距离",
			"inherited": true,
			"inherits": "egret.gui.ILayoutElement"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "caretIndex",
			"memberof": "egret.gui.IEditableText",
			"scope": "instance",
			"description": "插入点（尖号）位置的索引。如果没有显示任何插入点，则在将焦点恢复到字段时，值将为插入点所在的位置（通常为插入点上次所在的位置，如果字段不曾具有焦点，则为 0）。<p/>选择范围索引是从零开始的（例如，第一个位置为 0、第二个位置为 1，依此类推）。"
		},
		{
			"kind": "member",
			"type": "boolean",
			"name": "displayAsPassword",
			"memberof": "egret.gui.IEditableText",
			"scope": "instance",
			"description": "指定文本字段是否是密码文本字段。如果此属性的值为 true，则文本字段被视为密码文本字段，并使用星号而不是实际字符来隐藏输入的字符。如果为 false，则不会将文本字段视为密码文本字段。启用密码模式时，“剪切”和“复制”命令及其对应的键盘快捷键将不起作用。此安全机制可防止不良用户使用快捷键在无人看管的计算机上破译密码。"
		},
		{
			"kind": "member",
			"type": "boolean",
			"name": "editable",
			"memberof": "egret.gui.IEditableText",
			"scope": "instance",
			"description": "文本是否可编辑的标志。"
		},
		{
			"kind": "member",
			"type": "boolean",
			"name": "enabled",
			"memberof": "egret.gui.IUIComponent",
			"scope": "instance",
			"description": "组件是否可以接受用户交互。",
			"inherited": true,
			"inherits": "egret.gui.IUIComponent"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "hashCode",
			"memberof": "egret.HashObject",
			"scope": "instance",
			"rwType": 1,
			"description": "返回此对象唯一的哈希值,用于唯一确定一个对象。hashCode为大于等于1的整数。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"inherited": true,
			"inherits": "egret.HashObject"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "height",
			"memberof": "egret.gui.IVisualElement",
			"scope": "instance",
			"description": "组件高度",
			"inherited": true,
			"inherits": "egret.gui.IVisualElement"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "heightInLines",
			"memberof": "egret.gui.IEditableText",
			"scope": "instance",
			"description": "控件的默认高度（以行为单位测量）。 若设置了multiline属性为false，则忽略此属性。"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "horizontalCenter",
			"memberof": "egret.gui.ILayoutElement",
			"scope": "instance",
			"description": "在父级容器中距水平中心位置的距离",
			"inherited": true,
			"inherits": "egret.gui.ILayoutElement"
		},
		{
			"kind": "member",
			"type": "boolean",
			"name": "includeInLayout",
			"memberof": "egret.gui.ILayoutElement",
			"scope": "instance",
			"description": "指定此组件是否包含在父容器的布局中。若为false，则父级容器在测量和布局阶段都忽略此组件。默认值为true。注意，visible属性与此属性不同，设置visible为false，父级容器仍会对其布局。",
			"inherited": true,
			"inherits": "egret.gui.ILayoutElement"
		},
		{
			"kind": "member",
			"type": "boolean",
			"name": "isPopUp",
			"memberof": "egret.gui.IUIComponent",
			"scope": "instance",
			"description": "PopUpManager将其设置为true,以指示已弹出该组件。",
			"inherited": true,
			"inherits": "egret.gui.IUIComponent"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "layoutBoundsHeight",
			"memberof": "egret.gui.ILayoutElement",
			"scope": "instance",
			"description": "组件的布局高度,常用于父级的updateDisplayList()方法中按照：布局高度>外部显式设置高度>测量高度 的优先级顺序返回高度注意:此数值已经包含了scaleY的值",
			"inherited": true,
			"inherits": "egret.gui.ILayoutElement"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "layoutBoundsWidth",
			"memberof": "egret.gui.ILayoutElement",
			"scope": "instance",
			"description": "组件的布局宽度,常用于父级的updateDisplayList()方法中按照：布局宽度>外部显式设置宽度>测量宽度 的优先级顺序返回宽度注意:此数值已经包含了scaleX的值",
			"inherited": true,
			"inherits": "egret.gui.ILayoutElement"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "layoutBoundsX",
			"memberof": "egret.gui.ILayoutElement",
			"scope": "instance",
			"description": "组件水平方向起始坐标",
			"inherited": true,
			"inherits": "egret.gui.ILayoutElement"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "layoutBoundsY",
			"memberof": "egret.gui.ILayoutElement",
			"scope": "instance",
			"description": "组件竖直方向起始坐标",
			"inherited": true,
			"inherits": "egret.gui.ILayoutElement"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "left",
			"memberof": "egret.gui.ILayoutElement",
			"scope": "instance",
			"description": "距父级容器离左边距离",
			"inherited": true,
			"inherits": "egret.gui.ILayoutElement"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "maxChars",
			"memberof": "egret.gui.IEditableText",
			"scope": "instance",
			"description": "文本字段中最多可包含的字符数（即用户输入的字符数）。脚本可以插入比 maxChars 允许的字符数更多的文本；maxChars 属性仅表示用户可以输入多少文本。如果此属性的值为 0，则用户可以输入无限数量的文本。"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "maxHeight",
			"memberof": "egret.gui.ILayoutElement",
			"scope": "instance",
			"description": "组件的最大测量高度,仅影响measuredHeight属性的取值范围。",
			"inherited": true,
			"inherits": "egret.gui.ILayoutElement"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "maxWidth",
			"memberof": "egret.gui.ILayoutElement",
			"scope": "instance",
			"description": "组件的最大测量宽度,仅影响measuredWidth属性的取值范围。",
			"inherited": true,
			"inherits": "egret.gui.ILayoutElement"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "minHeight",
			"memberof": "egret.gui.ILayoutElement",
			"scope": "instance",
			"description": "组件的最小测量高度,此属性设置为大于maxHeight的值时无效。仅影响measuredHeight属性的取值范围。",
			"inherited": true,
			"inherits": "egret.gui.ILayoutElement"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "minWidth",
			"memberof": "egret.gui.ILayoutElement",
			"scope": "instance",
			"description": "组件的最小测量宽度,此属性设置为大于maxWidth的值时无效。仅影响measuredWidth属性的取值范围。",
			"inherited": true,
			"inherits": "egret.gui.ILayoutElement"
		},
		{
			"kind": "member",
			"type": "boolean",
			"name": "multiline",
			"memberof": "egret.gui.IEditableText",
			"scope": "instance",
			"description": "表示字段是否为多行文本字段。如果值为 true，则文本字段为多行文本字段；如果值为 false，则文本字段为单行文本字段。在类型为 TextFieldType.INPUT 的字段中，multiline 值将确定 Enter 键是否创建新行（如果值为 false，则将忽略 Enter 键）。如果将文本粘贴到其 multiline 值为 false 的 TextField 中，则文本中将除去新行。"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "name",
			"memberof": "egret.gui.IVisualElement",
			"scope": "instance",
			"description": "元素名称。此属性在TabNavigator里作为选项卡显示的字符串。",
			"inherited": true,
			"inherits": "egret.gui.IVisualElement"
		},
		{
			"kind": "member",
			"type": "any",
			"name": "owner",
			"memberof": "egret.gui.IVisualElement",
			"scope": "instance",
			"description": "此IVisualElement对象的所有者。<br/>0.默认情况下，owner指向parent属性的值。<br/>1.当此对象被PopUpAnchor组件弹出时，owner指向PopUpAnchor<br/>2.当此对象作为皮肤内contentGroup的子项时，owner指向主机组件SkinnableContainer<br/>3.当此对象作为ItemRenderer时，owner指向DataGroup或者主机组件SkinnableDataContainer<br/>4.当此对象作为非显示对象容器IContainer的子项时,owner指向IContainer。",
			"inherited": true,
			"inherits": "egret.gui.IVisualElement"
		},
		{
			"kind": "member",
			"type": "egret.DisplayObjectContainer",
			"name": "parent",
			"memberof": "egret.gui.IVisualElement",
			"scope": "instance",
			"description": "此组件的父容器或组件。只有可视元素应该具有 parent 属性。非可视项目应该使用其他属性引用其所属对象。一般而言，非可视对象使用 owner 属性引用其所属对象。",
			"inherited": true,
			"inherits": "egret.gui.IVisualElement"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "percentHeight",
			"memberof": "egret.gui.ILayoutElement",
			"scope": "instance",
			"description": "相对父级容器高度的百分比",
			"inherited": true,
			"inherits": "egret.gui.ILayoutElement"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "percentWidth",
			"memberof": "egret.gui.ILayoutElement",
			"scope": "instance",
			"description": "相对父级容器宽度的百分比",
			"inherited": true,
			"inherits": "egret.gui.ILayoutElement"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "preferredHeight",
			"memberof": "egret.gui.ILayoutElement",
			"scope": "instance",
			"description": "组件的首选高度,常用于父级的measure()方法中按照：外部显式设置高度>测量高度 的优先级顺序返回高度注意:此数值已经包含了scaleY的值",
			"inherited": true,
			"inherits": "egret.gui.ILayoutElement"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "preferredWidth",
			"memberof": "egret.gui.ILayoutElement",
			"scope": "instance",
			"description": "组件的首选宽度,常用于父级的measure()方法中按照：外部显式设置宽度>测量宽度 的优先级顺序返回宽度注意:此数值已经包含了scaleX的值",
			"inherited": true,
			"inherits": "egret.gui.ILayoutElement"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "preferredX",
			"memberof": "egret.gui.ILayoutElement",
			"scope": "instance",
			"description": "组件的首选x坐标,常用于父级的measure()方法中",
			"inherited": true,
			"inherits": "egret.gui.ILayoutElement"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "preferredY",
			"memberof": "egret.gui.ILayoutElement",
			"scope": "instance",
			"description": "组件的首选y坐标,常用于父级的measure()方法中",
			"inherited": true,
			"inherits": "egret.gui.ILayoutElement"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "restrict",
			"memberof": "egret.gui.IEditableText",
			"scope": "instance",
			"description": "表示用户可输入到文本字段中的字符集。如果 restrict 属性的值为 null，则可以输入任何字符。如果 restrict 属性的值为空字符串，则不能输入任何字符。如果 restrict 属性的值为一串字符，则只能在文本字段中输入该字符串中的字符。从左向右扫描该字符串。可以使用连字符 (-) 指定一个范围。只限制用户交互；脚本可将任何文本放入文本字段中。此属性不与属性检查器中的“嵌入字体”选项同步。 <p/>如果字符串以尖号 (ˆ) 开头，则先接受所有字符，然后从接受字符集中排除字符串中 ˆ 之后的字符。如果字符串不以尖号 (ˆ) 开头，则最初不接受任何字符，然后将字符串中的字符包括在接受字符集中。"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "right",
			"memberof": "egret.gui.ILayoutElement",
			"scope": "instance",
			"description": "距父级容器右边距离",
			"inherited": true,
			"inherits": "egret.gui.ILayoutElement"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "scaleX",
			"memberof": "egret.gui.ILayoutElement",
			"scope": "instance",
			"description": "表示从注册点开始应用的对象的水平缩放比例（百分比）。默认注册点为 (0,0)。1.0 等于 100% 缩放。",
			"inherited": true,
			"inherits": "egret.gui.ILayoutElement"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "scaleY",
			"memberof": "egret.gui.ILayoutElement",
			"scope": "instance",
			"description": "表示从对象注册点开始应用的对象的垂直缩放比例（百分比）。默认注册点为 (0,0)。1.0 是 100% 缩放。",
			"inherited": true,
			"inherits": "egret.gui.ILayoutElement"
		},
		{
			"kind": "member",
			"type": "boolean",
			"name": "selectable",
			"memberof": "egret.gui.IEditableText",
			"scope": "instance",
			"description": "一个布尔值，表示文本字段是否可选。值 true 表示文本可选。selectable 属性控制文本字段是否可选，而不控制文本字段是否可编辑。动态文本字段即使不可编辑，它也可能是可选的。如果动态文本字段是不可选的，则用户不能选择其中的文本。 <p/>如果 selectable 设置为 false，则文本字段中的文本不响应来自鼠标或键盘的选择命令，并且不能使用“复制”命令复制文本。如果 selectable 设置为 true，则可以使用鼠标或键盘选择文本字段中的文本，并且可以使用“复制”命令复制文本。即使文本字段是动态文本字段而不是输入文本字段，您也可以用这种方式选择文本。"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "selectionBeginIndex",
			"memberof": "egret.gui.IEditableText",
			"scope": "instance",
			"description": "当前所选内容中第一个字符从零开始的字符索引值。例如，第一个字符的索引值是 0，第二个字符的索引值是 1，依此类推。如果未选定任何文本，此属性为 caretIndex 的值。"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "selectionEndIndex",
			"memberof": "egret.gui.IEditableText",
			"scope": "instance",
			"description": "当前所选内容中最后一个字符从零开始的字符索引值。例如，第一个字符的索引值是 0，第二个字符的索引值是 1，依此类推。如果未选定任何文本，此属性为 caretIndex 的值。"
		},
		{
			"kind": "member",
			"type": "string",
			"name": "text",
			"memberof": "egret.gui.IDisplayText",
			"scope": "instance",
			"description": "此文本组件所显示的文本。",
			"inherited": true,
			"inherits": "egret.gui.IDisplayText"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "textColor",
			"memberof": "egret.gui.IEditableText",
			"scope": "instance",
			"description": "文本颜色。"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "top",
			"memberof": "egret.gui.ILayoutElement",
			"scope": "instance",
			"description": "距父级容器顶部距离",
			"inherited": true,
			"inherits": "egret.gui.ILayoutElement"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "verticalCenter",
			"memberof": "egret.gui.ILayoutElement",
			"scope": "instance",
			"description": "在父级容器中距竖直中心位置的距离",
			"inherited": true,
			"inherits": "egret.gui.ILayoutElement"
		},
		{
			"kind": "member",
			"type": "boolean",
			"name": "visible",
			"memberof": "egret.gui.IVisualElement",
			"scope": "instance",
			"description": "控制此可视元素的可见性。如果为 true，则对象可见。",
			"inherited": true,
			"inherits": "egret.gui.IVisualElement"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "width",
			"memberof": "egret.gui.IVisualElement",
			"scope": "instance",
			"description": "组件宽度",
			"inherited": true,
			"inherits": "egret.gui.IVisualElement"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "widthInChars",
			"memberof": "egret.gui.IEditableText",
			"scope": "instance",
			"description": "控件的默认宽度（使用字号：size为单位测量）。 若同时设置了maxChars属性，将会根据两者测量结果的最小值作为测量宽度。"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "x",
			"memberof": "egret.gui.IVisualElement",
			"scope": "instance",
			"description": "表示 DisplayObject 实例相对于父级 DisplayObjectContainer 本地坐标的 x 坐标。如果该对象位于具有变形的 DisplayObjectContainer 内，则它也位于包含 DisplayObjectContainer 的本地坐标系中。因此，对于逆时针旋转 90 度的 DisplayObjectContainer，该 DisplayObjectContainer 的子级将继承逆时针旋转 90 度的坐标系。对象的坐标指的是注册点的位置。",
			"inherited": true,
			"inherits": "egret.gui.IVisualElement"
		},
		{
			"kind": "member",
			"type": "number",
			"name": "y",
			"memberof": "egret.gui.IVisualElement",
			"scope": "instance",
			"description": "表示 DisplayObject 实例相对于父级 DisplayObjectContainer 本地坐标的 y 坐标。如果该对象位于具有变形的 DisplayObjectContainer 内，则它也位于包含 DisplayObjectContainer 的本地坐标系中。因此，对于逆时针旋转 90 度的 DisplayObjectContainer，该 DisplayObjectContainer 的子级将继承逆时针旋转 90 度的坐标系。对象的坐标指的是注册点的位置。",
			"inherited": true,
			"inherits": "egret.gui.IVisualElement"
		}
	],
	"function": [
		{
			"kind": "function",
			"type": "void",
			"name": "addEventListener",
			"memberof": "egret.IEventDispatcher",
			"scope": "instance",
			"description": "使用 EventDispatcher 对象注册事件侦听器对象，以使侦听器能够接收事件通知。可以为特定类型的事件、阶段和优先级在显示列表的所有节点上注册事件侦听器。成功注册一个事件侦听器后，无法通过额外调用 on() 来更改其优先级。要更改侦听器的优先级，必须先调用 removeEventListener()。然后，可以使用新的优先级再次注册该侦听器。注册该侦听器后，如果继续调用具有不同 type 或 useCapture值的 on()，则会创建单独的侦听器注册。<br/>如果不再需要某个事件侦听器，可调用 EventDispatcher.removeEventListener()删除它；否则会产生内存问题。由于垃圾回收器不会删除仍包含引用的对象，因此不会从内存中自动删除使用已注册事件侦听器的对象。复制EventDispatcher 实例时并不复制其中附加的事件侦听器。（如果新近创建的节点需要一个事件侦听器，必须在创建该节点后附加该侦听器。）但是，如果移动 EventDispatcher 实例，则其中附加的事件侦听器也会随之移动。如果在正在处理事件的节点上注册事件侦听器，则不会在当前阶段触发事件侦听器，但会在事件流的稍后阶段触发，如冒泡阶段。如果从正在处理事件的节点中删除事件侦听器，则该事件侦听器仍由当前操作触发。删除事件侦听器后，决不会再次调用该事件侦听器（除非再次注册以备将来处理）。",
			"see": [
				"#once()",
				"#removeEventListener()"
			],
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "type",
					"type": "string",
					"description": "事件的类型。"
				},
				{
					"name": "listener",
					"type": "Function",
					"description": "处理事件的侦听器函数。此函数必须接受 Event 对象作为其唯一的参数，并且不能返回任何结果，如下面的示例所示： function(evt:Event):void 函数可以有任何名称。"
				},
				{
					"name": "thisObject",
					"type": "any",
					"description": "侦听函数绑定的this对象"
				},
				{
					"name": "useCapture",
					"question": true,
					"type": "boolean",
					"description": "确定侦听器是运行于捕获阶段还是运行于冒泡阶段。如果将 useCapture 设置为 true，则侦听器只在捕获阶段处理事件，而不在冒泡阶段处理事件。如果 useCapture 为 false，则侦听器只在冒泡阶段处理事件。要在两个阶段都侦听事件，请调用 on() 两次：一次将 useCapture 设置为 true，一次将 useCapture 设置为 false。"
				},
				{
					"name": "priority",
					"question": true,
					"type": "number",
					"description": "事件侦听器的优先级。优先级由一个带符号的整数指定。数字越大，优先级越高。优先级为 n 的所有侦听器会在优先级为 n -1 的侦听器之前得到处理。如果两个或更多个侦听器共享相同的优先级，则按照它们的添加顺序进行处理。默认优先级为 0。"
				}
			],
			"inherited": true,
			"inherits": "egret.IEventDispatcher"
		},
		{
			"kind": "function",
			"type": "boolean",
			"name": "dispatchEvent",
			"memberof": "egret.IEventDispatcher",
			"scope": "instance",
			"description": "将事件分派到事件流中。事件目标是对其调用 dispatchEvent() 方法的 EventDispatcher 对象。",
			"returns": "如果成功调度了事件，则值为 true。值 false 表示失败或对事件调用了 preventDefault()。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "event",
					"type": "egret.Event",
					"description": "调度到事件流中的 Event 对象。"
				}
			],
			"inherited": true,
			"inherits": "egret.IEventDispatcher"
		},
		{
			"kind": "function",
			"type": "boolean",
			"name": "hasEventListener",
			"memberof": "egret.IEventDispatcher",
			"scope": "instance",
			"description": "检查 EventDispatcher 对象是否为特定事件类型注册了任何侦听器。这样，您就可以确定 EventDispatcher 对象在事件流层次结构中的哪个位置改变了对事件类型的处理。要确定特定事件类型是否确实会触发事件侦听器，请使用 IEventDispatcher.willTrigger()。hasEventListener()与 willTrigger() 的区别是：hasEventListener() 只检查它所属的对象，而 willTrigger() 检查整个事件流以查找由 type 参数指定的事件。",
			"returns": "如果指定类型的侦听器已注册，则值为 true；否则，值为 false。",
			"see": [
				"#willTrigger()"
			],
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "type",
					"type": "string",
					"description": "事件的类型。"
				}
			],
			"inherited": true,
			"inherits": "egret.IEventDispatcher"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "once",
			"memberof": "egret.IEventDispatcher",
			"scope": "instance",
			"description": "添加仅回调一次的事件侦听器，此方法与on()方法不同，on()方法会持续产生回调，而此方法在第一次回调时就会自动移除监听。",
			"see": [
				"#on()",
				"#removeEventListener()"
			],
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "type",
					"type": "string",
					"description": "事件的类型。"
				},
				{
					"name": "listener",
					"type": "Function",
					"description": "处理事件的侦听器函数。此函数必须接受 Event 对象作为其唯一的参数，并且不能返回任何结果，如下面的示例所示： function(evt:Event):void 函数可以有任何名称。"
				},
				{
					"name": "thisObject",
					"type": "any",
					"description": "侦听函数绑定的this对象"
				},
				{
					"name": "useCapture",
					"question": true,
					"type": "boolean",
					"description": "确定侦听器是运行于捕获阶段还是运行于冒泡阶段。如果将 useCapture 设置为 true，则侦听器只在捕获阶段处理事件，而不在冒泡阶段处理事件。如果 useCapture 为 false，则侦听器只在冒泡阶段处理事件。要在两个阶段都侦听事件，请调用 once() 两次：一次将 useCapture 设置为 true，一次将 useCapture 设置为 false。"
				},
				{
					"name": "priority",
					"question": true,
					"type": "number",
					"description": "事件侦听器的优先级。优先级由一个带符号整数指定。数字越大，优先级越高。优先级为 n 的所有侦听器会在优先级为 n -1 的侦听器之前得到处理。如果两个或更多个侦听器共享相同的优先级，则按照它们的添加顺序进行处理。默认优先级为 0。"
				}
			],
			"inherited": true,
			"inherits": "egret.IEventDispatcher"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "ownerChanged",
			"memberof": "egret.gui.IVisualElement",
			"scope": "instance",
			"description": "owner属性由框架内部管理，请不要自行改变它的值，否则可能引发未知的问题。",
			"params": [
				{
					"name": "value",
					"type": "Object",
					"description": ""
				}
			],
			"inherited": true,
			"inherits": "egret.gui.IVisualElement"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "removeEventListener",
			"memberof": "egret.IEventDispatcher",
			"scope": "instance",
			"description": "从 EventDispatcher 对象中删除侦听器。如果没有向 EventDispatcher 对象注册任何匹配的侦听器，则对此方法的调用没有任何效果。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "type",
					"type": "string",
					"description": "事件的类型。"
				},
				{
					"name": "listener",
					"type": "Function",
					"description": "要删除的侦听器对象"
				},
				{
					"name": "thisObject",
					"type": "any",
					"description": "侦听函数绑定的this对象"
				},
				{
					"name": "useCapture",
					"question": true,
					"type": "boolean",
					"description": "指出是为捕获阶段还是为冒泡阶段注册了侦听器。如果为捕获阶段以及冒泡阶段注册了侦听器，则需要对removeEventListener() 进行两次调用才能将这两个侦听器删除：一次调用将 useCapture 设置为 true，另一次调用将 useCapture 设置为 false。。"
				}
			],
			"inherited": true,
			"inherits": "egret.IEventDispatcher"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "selectAll",
			"memberof": "egret.gui.IEditableText",
			"scope": "instance",
			"description": "选中所有文本。"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "setActualSize",
			"memberof": "egret.gui.IUIComponent",
			"scope": "instance",
			"description": "设置组件的宽高，w,h均不包含scale值。此方法不同于直接设置width,height属性，不会影响显式标记尺寸属性widthExplicitlySet,_heightExplicitlySet",
			"params": [
				{
					"name": "newWidth",
					"type": "number",
					"description": ""
				},
				{
					"name": "newHeight",
					"type": "number",
					"description": ""
				}
			],
			"inherited": true,
			"inherits": "egret.gui.IUIComponent"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "setFocus",
			"memberof": "egret.gui.IEditableText",
			"scope": "instance"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "setLayoutBoundsPosition",
			"memberof": "egret.gui.ILayoutElement",
			"scope": "instance",
			"description": "设置组件的布局位置",
			"params": [
				{
					"name": "x",
					"type": "number",
					"description": ""
				},
				{
					"name": "y",
					"type": "number",
					"description": ""
				}
			],
			"inherited": true,
			"inherits": "egret.gui.ILayoutElement"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "setLayoutBoundsSize",
			"memberof": "egret.gui.ILayoutElement",
			"scope": "instance",
			"description": "设置组件的布局宽高,此值应已包含scaleX,scaleY的值",
			"params": [
				{
					"name": "width",
					"type": "number",
					"description": ""
				},
				{
					"name": "height",
					"type": "number",
					"description": ""
				}
			],
			"inherited": true,
			"inherits": "egret.gui.ILayoutElement"
		},
		{
			"kind": "function",
			"type": "void",
			"name": "setSelection",
			"memberof": "egret.gui.IEditableText",
			"scope": "instance",
			"description": "将第一个字符和最后一个字符的索引值（使用 beginIndex 和 endIndex 参数指定）指定的文本设置为所选内容。如果两个参数值相同，则此方法会设置插入点，就如同设置 caretIndex 属性一样。",
			"params": [
				{
					"name": "beginIndex",
					"type": "number",
					"description": "所选内容中第一个字符从零开始的索引值（例如，第一个字符的索引值是 0，第二个字符的索引值是 1，依此类推）。"
				},
				{
					"name": "endIndex",
					"type": "number",
					"description": "所选内容中最后一个字符从零开始的索引值。"
				}
			]
		},
		{
			"kind": "function",
			"type": "boolean",
			"name": "willTrigger",
			"memberof": "egret.IEventDispatcher",
			"scope": "instance",
			"description": "检查是否用此 EventDispatcher 对象或其任何始祖为指定事件类型注册了事件侦听器。将指定类型的事件调度给此EventDispatcher 对象或其任一后代时，如果在事件流的任何阶段触发了事件侦听器，则此方法返回 true。hasEventListener() 与 willTrigger() 方法的区别是：hasEventListener() 只检查它所属的对象，而 willTrigger() 方法检查整个事件流以查找由 type 参数指定的事件。",
			"returns": "是否注册过监听器，如果注册过返回true，反之返回false",
			"see": [
				"#hasEventListener()"
			],
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "type",
					"type": "string",
					"description": "事件类型"
				}
			],
			"inherited": true,
			"inherits": "egret.IEventDispatcher"
		}
	],
	"globalMember": [],
	"globalFunction": [],
	"class": {
		"kind": "interface",
		"name": "IEditableText",
		"memberof": "egret.gui",
		"filename": "extension/gui/core/IEditableText.ts",
		"description": "可编辑文本控件接口",
		"augments": [
			"egret.gui.IDisplayText",
			"egret.gui.IUIComponent",
			"egret.gui.IVisualElement",
			"egret.gui.ILayoutElement",
			"egret.IEventDispatcher",
			"egret.HashObject"
		]
	}
}
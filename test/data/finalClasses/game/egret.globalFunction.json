{
	"globalFunction": [
		{
			"filename": "extension/game/utils/setInterval.ts",
			"kind": "globalFunction",
			"type": "void",
			"name": "clearInterval",
			"memberof": "egret",
			"scope": "instance",
			"description": "清除指定延迟后运行的函数。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"example": "<pre></pre>",
			"params": [
				{
					"name": "key",
					"type": "number",
					"description": "egret.setInterval所返回的索引"
				}
			]
		},
		{
			"filename": "extension/game/utils/setTimeout.ts",
			"kind": "globalFunction",
			"type": "void",
			"name": "clearTimeout",
			"memberof": "egret",
			"scope": "instance",
			"description": "清除指定延迟后运行的函数。",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"params": [
				{
					"name": "key",
					"type": "number",
					"description": "egret.setTimeout所返回的索引"
				}
			]
		},
		{
			"filename": "extension/game/utils/setInterval.ts",
			"kind": "globalFunction",
			"type": "number",
			"name": "setInterval",
			"memberof": "egret",
			"scope": "instance",
			"description": "以指定的延迟（以毫秒为单位）间隔循环调用指定的函数。",
			"returns": "返回索引，可以用于 clearInterval",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"example": "<pre>/**<br/>*&nbsp;&nbsp;&nbsp;以下示例使用&nbsp;setInterval()&nbsp;方法创建一个计时间隔，以&nbsp;1&nbsp;秒的固定间隔调用&nbsp;myRepeatingFunction()&nbsp;方法。<br/>*/<br/>class&nbsp;setIntervalExample&nbsp;extends&nbsp;egret.DisplayObjectContainer&nbsp;{<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;intervalDuration:number&nbsp;=&nbsp;1000;&nbsp;//&nbsp;duration&nbsp;between&nbsp;intervals,&nbsp;in&nbsp;milliseconds<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;constructor()&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;super();<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.SetIntervalExample();<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;SetIntervalExample()&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;intervalId:&nbsp;number&nbsp;=&nbsp;egret.setInterval(this.myRepeatingFunction,this,this.intervalDuration,&nbsp;[&quot;Hello&quot;,&nbsp;&quot;World&quot;]);<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/>&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;myRepeatingFunction(obj:any):&nbsp;void&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(obj[0]&nbsp;+&nbsp;&quot;&nbsp;&quot;&nbsp;+&nbsp;obj[1]);<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/><br/>}</pre>",
			"params": [
				{
					"name": "listener",
					"type": "Function",
					"description": "侦听函数"
				},
				{
					"name": "thisObject",
					"type": "any",
					"description": "this对象"
				},
				{
					"name": "delay",
					"type": "number",
					"description": "延迟时间，以毫秒为单位"
				},
				{
					"name": "...args",
					"description": "参数列表"
				}
			]
		},
		{
			"filename": "extension/game/utils/setTimeout.ts",
			"kind": "globalFunction",
			"type": "number",
			"name": "setTimeout",
			"memberof": "egret",
			"scope": "instance",
			"description": "在指定的延迟（以毫秒为单位）后运行指定的函数。",
			"returns": "返回索引，可以用于 clearTimeout",
			"version": "Egret 2.4",
			"platform": "Web,Native",
			"example": "<pre>/**<br/>*&nbsp;&nbsp;&nbsp;以下示例使用&nbsp;setTimeout()&nbsp;方法在指定的延迟期之后调用另一个方法。<br/>*/<br/>class&nbsp;setTimeoutExample&nbsp;extends&nbsp;egret.DisplayObjectContainer&nbsp;{<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;delay:number&nbsp;=&nbsp;1000;&nbsp;//&nbsp;delay&nbsp;before&nbsp;calling&nbsp;myDelayedFunction<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;constructor()&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;super();<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.SetTimeoutExample();<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;SetTimeoutExample():number&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;intervalId:&nbsp;number&nbsp;=&nbsp;egret.setTimeout(this.myDelayedFunction,this,&nbsp;this.delay,&nbsp;[&quot;Hello&quot;,&nbsp;&quot;World&quot;]);<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;intervalId;<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;myDelayedFunction(obj:any):&nbsp;void&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(obj[0]&nbsp;+&nbsp;&quot;&nbsp;&quot;&nbsp;+&nbsp;obj[1]);//Hello&nbsp;World<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/><br/>}</pre>",
			"params": [
				{
					"name": "listener",
					"type": "Function",
					"description": "侦听函数"
				},
				{
					"name": "thisObject",
					"type": "any",
					"description": "this对象"
				},
				{
					"name": "delay",
					"type": "number",
					"description": "延迟时间，以毫秒为单位"
				},
				{
					"name": "...args",
					"description": "参数列表"
				}
			]
		}
	]
}